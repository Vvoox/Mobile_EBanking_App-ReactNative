{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/navigation/BottomTabNavigator.tsx\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport AcceuilScreen from \"../views/AcceuilScreen\";\nimport ProfilScreen from \"../views/ProfilScreen\";\nimport { ComptesListState } from \"../views/ComptesScreen\";\nimport { CreancierListState } from \"../views/FacturesScreen\";\nvar BottomTab = createBottomTabNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function BottomTabNavigator() {\n  var _this = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Accueil\",\n    tabBarOptions: {\n      activeTintColor: Colors[colorScheme].tint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Accueil\",\n    component: AcceuilNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(TabBarIcon, {\n          name: \"home\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 44\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profil\",\n    component: ProfilNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(TabBarIcon, {\n          name: \"person\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Comptes\",\n    component: ComptesNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(TabBarIcon, {\n          name: \"wallet\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 44\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Factures\",\n    component: FacturesNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(TabBarIcon, {\n          name: \"clipboard\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(Ionicons, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar AcceuilStack = createStackNavigator();\n\nfunction AcceuilNavigator() {\n  return React.createElement(AcceuilStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(AcceuilStack.Screen, {\n    name: \"AcceuilScreen\",\n    component: AcceuilScreen,\n    options: {\n      headerTitle: 'Acceuil'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar ProfilStack = createStackNavigator();\n\nfunction ProfilNavigator() {\n  return React.createElement(ProfilStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(ProfilStack.Screen, {\n    name: \"ProfilScreen\",\n    component: ProfilScreen,\n    options: {\n      headerTitle: 'Profil'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar FacturesStack = createStackNavigator();\n\nfunction FacturesNavigator() {\n  return React.createElement(FacturesStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(FacturesStack.Screen, {\n    name: \"FacturesScreen\",\n    component: CreancierListState,\n    options: {\n      headerTitle: 'Creanciers'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar ComptesStack = createStackNavigator();\n\nfunction ComptesNavigator() {\n  return React.createElement(ComptesStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, React.createElement(ComptesStack.Screen, {\n    name: \"ComptesScreen\",\n    component: ComptesListState,\n    options: {\n      headerTitle: 'Comptes'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/navigation/BottomTabNavigator.tsx"],"names":["Ionicons","createBottomTabNavigator","createStackNavigator","React","Colors","useColorScheme","AcceuilScreen","ProfilScreen","ComptesListState","CreancierListState","BottomTab","Tab","BottomTabNavigator","colorScheme","activeTintColor","tint","AcceuilNavigator","tabBarIcon","color","ProfilNavigator","ComptesNavigator","FacturesNavigator","TabBarIcon","props","marginBottom","AcceuilStack","headerTitle","ProfilStack","FacturesStack","ComptesStack"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport {\n    BottomTabParamList,\n    AcceuilParamList,\n    ProfilParamList,\n    FacturesParamList, ComptesParamList, CreancesParamList\n} from '../types';\nimport AcceuilScreen from \"../views/AcceuilScreen\";\nimport ProfilScreen from \"../views/ProfilScreen\";\n//import FacturesScreen from \"../views/FacturesScreen\";\n//import  creancierView from \"../views/FacturesScreen\";\nimport ComptesScreen, {ComptesListState} from \"../views/ComptesScreen\";\nimport {CreancesListState, CreancierListState} from \"../views/FacturesScreen\";\n// import CreancierViewState from \"../views/FacturesScreen\";\n// import Creanciers from \"../views/FacturesScreen\";\n// import CreanciersList from \"../views/FacturesScreen\";\n// import FacturesScreen from \"../views/FacturesScreen\";\nimport {bindActionCreators} from \"redux\";\nimport {getCreanciers} from \"../redux/actions/creanciers-actions\";\nimport {connect} from \"react-redux\";\nimport {fetchCreanciers} from \"../services/creanciers-service\";\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\nconst Tab = createBottomTabNavigator();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n\n    <Tab.Navigator\n\n      initialRouteName=\"Accueil\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\n        <Tab.Screen\n            name=\"Accueil\"\n            component={AcceuilNavigator}\n            options={{\n                tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} />,\n            }}\n        />\n      <Tab.Screen\n        name=\"Profil\"\n        component={ProfilNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"person\" color={color} />,\n        }}\n      />\n        <Tab.Screen\n            name=\"Comptes\"\n            component={ComptesNavigator}\n            options={{\n                tabBarIcon: ({ color }) => <TabBarIcon name=\"wallet\" color={color} />,\n            }}\n        />\n      <Tab.Screen\n        name=\"Factures\"\n        component={FacturesNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"clipboard\" color={color} />,\n        }}\n      />\n    </Tab.Navigator>\n\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\n\nconst AcceuilStack = createStackNavigator<AcceuilParamList>();\n\nfunction AcceuilNavigator() {\n    return (\n        <AcceuilStack.Navigator>\n            <AcceuilStack.Screen\n                name=\"AcceuilScreen\"\n                component={AcceuilScreen}\n                options={{ headerTitle: 'Acceuil' }}\n            />\n        </AcceuilStack.Navigator>\n    );\n}\n\nconst ProfilStack = createStackNavigator<ProfilParamList>();\n\nfunction ProfilNavigator() {\n    return (\n        <ProfilStack.Navigator>\n            <ProfilStack.Screen\n                name=\"ProfilScreen\"\n                component={ProfilScreen}\n                options={{ headerTitle: 'Profil' }}\n            />\n        </ProfilStack.Navigator>\n    );\n}\n\n\nconst FacturesStack = createStackNavigator<FacturesParamList>();\n\nfunction FacturesNavigator() {\n    return (\n        <FacturesStack.Navigator>\n            <FacturesStack.Screen\n                name=\"FacturesScreen\"\n                component={CreancierListState}\n                options={{ headerTitle: 'Creanciers' }}\n            />\n        </FacturesStack.Navigator>\n    );\n}\n// const CreancesStack = createStackNavigator<CreancesParamList>();\n\n// function CreancesNavigator() {\n//     return (\n//         <CreancesStack.Navigator>\n//             <CreancesStack.Screen\n//                 name=\"CreancesScreen\"\n//                 component={CreancesListState}\n//                 options={{ headerTitle: 'Liste des Creances' }}\n//             />\n//         </CreancesStack.Navigator>\n//     );\n// }\n\n\nconst ComptesStack = createStackNavigator<ComptesParamList>();\n\nfunction ComptesNavigator() {\n    return (\n        <ComptesStack.Navigator>\n            <ComptesStack.Screen\n                name=\"ComptesScreen\"\n                component={ComptesListState}\n                options={{ headerTitle: 'Comptes' }}\n            />\n        </ComptesStack.Navigator>\n    );\n}"]},"metadata":{},"sourceType":"module"}