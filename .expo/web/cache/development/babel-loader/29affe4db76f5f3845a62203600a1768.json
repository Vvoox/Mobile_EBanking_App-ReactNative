{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-picker-select/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { Picker } from '@react-native-picker/picker';\nimport { defaultStyles } from \"./styles\";\n\nvar RNPickerSelect = function (_PureComponent) {\n  _inherits(RNPickerSelect, _PureComponent);\n\n  var _super = _createSuper(RNPickerSelect);\n\n  _createClass(RNPickerSelect, null, [{\n    key: \"handlePlaceholder\",\n    value: function handlePlaceholder(_ref) {\n      var placeholder = _ref.placeholder;\n\n      if (isEqual(placeholder, {})) {\n        return [];\n      }\n\n      return [placeholder];\n    }\n  }, {\n    key: \"getSelectedItem\",\n    value: function getSelectedItem(_ref2) {\n      var items = _ref2.items,\n          key = _ref2.key,\n          value = _ref2.value;\n      var idx = items.findIndex(function (item) {\n        if (item.key && key) {\n          return isEqual(item.key, key);\n        }\n\n        return isEqual(item.value, value);\n      });\n\n      if (idx === -1) {\n        idx = 0;\n      }\n\n      return {\n        selectedItem: items[idx] || {},\n        idx: idx\n      };\n    }\n  }]);\n\n  function RNPickerSelect(props) {\n    var _this;\n\n    _classCallCheck(this, RNPickerSelect);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var items = RNPickerSelect.handlePlaceholder({\n        placeholder: _this.props.placeholder\n      }).concat(_this.props.items);\n      var itemsChanged = !isEqual(prevState.items, items);\n\n      var _RNPickerSelect$getSe = RNPickerSelect.getSelectedItem({\n        items: items,\n        key: _this.props.itemKey,\n        value: _this.props.value\n      }),\n          selectedItem = _RNPickerSelect$getSe.selectedItem,\n          idx = _RNPickerSelect$getSe.idx;\n\n      var selectedItemChanged = !isEqual(_this.props.value, undefined) && !isEqual(prevState.selectedItem, selectedItem);\n\n      if (itemsChanged || selectedItemChanged) {\n        _this.props.onValueChange(selectedItem.value, idx);\n\n        _this.setState(_objectSpread(_objectSpread({}, itemsChanged ? {\n          items: items\n        } : {}), selectedItemChanged ? {\n          selectedItem: selectedItem\n        } : {}));\n      }\n    };\n\n    var _items = RNPickerSelect.handlePlaceholder({\n      placeholder: props.placeholder\n    }).concat(props.items);\n\n    var _RNPickerSelect$getSe2 = RNPickerSelect.getSelectedItem({\n      items: _items,\n      key: props.itemKey,\n      value: props.value\n    }),\n        _selectedItem = _RNPickerSelect$getSe2.selectedItem;\n\n    _this.state = {\n      items: _items,\n      selectedItem: _selectedItem,\n      showPicker: false,\n      animationType: undefined,\n      orientation: 'portrait',\n      doneDepressed: false\n    };\n    _this.onUpArrow = _this.onUpArrow.bind(_assertThisInitialized(_this));\n    _this.onDownArrow = _this.onDownArrow.bind(_assertThisInitialized(_this));\n    _this.onValueChange = _this.onValueChange.bind(_assertThisInitialized(_this));\n    _this.onOrientationChange = _this.onOrientationChange.bind(_assertThisInitialized(_this));\n    _this.setInputRef = _this.setInputRef.bind(_assertThisInitialized(_this));\n    _this.togglePicker = _this.togglePicker.bind(_assertThisInitialized(_this));\n    _this.renderInputAccessoryView = _this.renderInputAccessoryView.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RNPickerSelect, [{\n    key: \"onUpArrow\",\n    value: function onUpArrow() {\n      var onUpArrow = this.props.onUpArrow;\n      this.togglePicker(false, onUpArrow);\n    }\n  }, {\n    key: \"onDownArrow\",\n    value: function onDownArrow() {\n      var onDownArrow = this.props.onDownArrow;\n      this.togglePicker(false, onDownArrow);\n    }\n  }, {\n    key: \"onValueChange\",\n    value: function onValueChange(value, index) {\n      var onValueChange = this.props.onValueChange;\n      onValueChange(value, index);\n      this.setState(function (prevState) {\n        return {\n          selectedItem: prevState.items[index]\n        };\n      });\n    }\n  }, {\n    key: \"onOrientationChange\",\n    value: function onOrientationChange(_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n      this.setState({\n        orientation: nativeEvent.orientation\n      });\n    }\n  }, {\n    key: \"setInputRef\",\n    value: function setInputRef(ref) {\n      this.inputRef = ref;\n    }\n  }, {\n    key: \"getPlaceholderStyle\",\n    value: function getPlaceholderStyle() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          style = _this$props.style;\n      var selectedItem = this.state.selectedItem;\n\n      if (!isEqual(placeholder, {}) && selectedItem.label === placeholder.label) {\n        return _objectSpread(_objectSpread({}, defaultStyles.placeholder), style.placeholder);\n      }\n\n      return {};\n    }\n  }, {\n    key: \"triggerOpenCloseCallbacks\",\n    value: function triggerOpenCloseCallbacks() {\n      var _this$props2 = this.props,\n          onOpen = _this$props2.onOpen,\n          onClose = _this$props2.onClose;\n      var showPicker = this.state.showPicker;\n\n      if (!showPicker && onOpen) {\n        onOpen();\n      }\n\n      if (showPicker && onClose) {\n        onClose();\n      }\n    }\n  }, {\n    key: \"togglePicker\",\n    value: function togglePicker() {\n      var animate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var postToggleCallback = arguments.length > 1 ? arguments[1] : undefined;\n      var _this$props3 = this.props,\n          modalProps = _this$props3.modalProps,\n          disabled = _this$props3.disabled;\n      var showPicker = this.state.showPicker;\n\n      if (disabled) {\n        return;\n      }\n\n      if (!showPicker) {\n        Keyboard.dismiss();\n      }\n\n      var animationType = modalProps && modalProps.animationType ? modalProps.animationType : 'slide';\n      this.triggerOpenCloseCallbacks();\n      this.setState(function (prevState) {\n        return {\n          animationType: animate ? animationType : undefined,\n          showPicker: !prevState.showPicker\n        };\n      }, function () {\n        if (postToggleCallback) {\n          postToggleCallback();\n        }\n      });\n    }\n  }, {\n    key: \"renderPickerItems\",\n    value: function renderPickerItems() {\n      var _this2 = this;\n\n      var items = this.state.items;\n      return items.map(function (item) {\n        return React.createElement(Picker.Item, {\n          label: item.label,\n          value: item.value,\n          key: item.key || item.label,\n          color: item.color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderInputAccessoryView\",\n    value: function renderInputAccessoryView() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          InputAccessoryView = _this$props4.InputAccessoryView,\n          doneText = _this$props4.doneText,\n          onUpArrow = _this$props4.onUpArrow,\n          onDownArrow = _this$props4.onDownArrow,\n          onDonePress = _this$props4.onDonePress,\n          style = _this$props4.style,\n          touchableDoneProps = _this$props4.touchableDoneProps;\n      var doneDepressed = this.state.doneDepressed;\n\n      if (InputAccessoryView) {\n        return React.createElement(InputAccessoryView, {\n          testID: \"custom_input_accessory_view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: [defaultStyles.modalViewMiddle, style.modalViewMiddle],\n        testID: \"input_accessory_view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevronContainer, style.chevronContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: onUpArrow ? 0.5 : 1,\n        onPress: onUpArrow ? this.onUpArrow : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevron, style.chevron, defaultStyles.chevronUp, style.chevronUp, onUpArrow ? [defaultStyles.chevronActive, style.chevronActive] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        activeOpacity: onDownArrow ? 0.5 : 1,\n        onPress: onDownArrow ? this.onDownArrow : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevron, style.chevron, defaultStyles.chevronDown, style.chevronDown, onDownArrow ? [defaultStyles.chevronActive, style.chevronActive] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableOpacity, _extends({\n        testID: \"done_button\",\n        onPress: function onPress() {\n          _this3.togglePicker(true, onDonePress);\n        },\n        onPressIn: function onPressIn() {\n          _this3.setState({\n            doneDepressed: true\n          });\n        },\n        onPressOut: function onPressOut() {\n          _this3.setState({\n            doneDepressed: false\n          });\n        },\n        hitSlop: {\n          top: 4,\n          right: 4,\n          bottom: 4,\n          left: 4\n        }\n      }, touchableDoneProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        testID: \"needed_for_touchable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        testID: \"done_text\",\n        allowFontScaling: false,\n        style: [defaultStyles.done, style.done, doneDepressed ? [defaultStyles.doneDepressed, style.doneDepressed] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, doneText))));\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          Icon = _this$props5.Icon;\n\n      if (!Icon) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        testID: \"icon_container\",\n        style: [defaultStyles.iconContainer, style.iconContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        testID: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderTextInputOrChildren\",\n    value: function renderTextInputOrChildren() {\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          style = _this$props6.style,\n          textInputProps = _this$props6.textInputProps;\n      var selectedItem = this.state.selectedItem;\n      var containerStyle = Platform.OS === 'ios' ? style.inputIOSContainer : style.inputAndroidContainer;\n\n      if (children) {\n        return React.createElement(View, {\n          pointerEvents: \"box-only\",\n          style: containerStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }\n        }, children);\n      }\n\n      return React.createElement(View, {\n        pointerEvents: \"box-only\",\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, _extends({\n        testID: \"text_input\",\n        style: [Platform.OS === 'ios' ? style.inputIOS : style.inputAndroid, this.getPlaceholderStyle()],\n        value: selectedItem.inputLabel ? selectedItem.inputLabel : selectedItem.label,\n        ref: this.setInputRef,\n        editable: false\n      }, textInputProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      })), this.renderIcon());\n    }\n  }, {\n    key: \"renderIOS\",\n    value: function renderIOS() {\n      var _this4 = this;\n\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          modalProps = _this$props7.modalProps,\n          pickerProps = _this$props7.pickerProps,\n          touchableWrapperProps = _this$props7.touchableWrapperProps;\n      var _this$state = this.state,\n          animationType = _this$state.animationType,\n          orientation = _this$state.orientation,\n          selectedItem = _this$state.selectedItem,\n          showPicker = _this$state.showPicker;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, _extends({\n        testID: \"ios_touchable_wrapper\",\n        onPress: function onPress() {\n          _this4.togglePicker(true);\n        },\n        activeOpacity: 1\n      }, touchableWrapperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 17\n        }\n      }), this.renderTextInputOrChildren()), React.createElement(Modal, _extends({\n        testID: \"ios_modal\",\n        visible: showPicker,\n        transparent: true,\n        animationType: animationType,\n        supportedOrientations: ['portrait', 'landscape'],\n        onOrientationChange: this.onOrientationChange\n      }, modalProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [defaultStyles.modalViewTop, style.modalViewTop],\n        testID: \"ios_modal_top\",\n        onPress: function onPress() {\n          _this4.togglePicker(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }\n      }), this.renderInputAccessoryView(), React.createElement(View, {\n        style: [defaultStyles.modalViewBottom, {\n          height: orientation === 'portrait' ? 215 : 162\n        }, style.modalViewBottom],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker, _extends({\n        testID: \"ios_picker\",\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }\n      }), this.renderPickerItems()))));\n    }\n  }, {\n    key: \"renderAndroidHeadless\",\n    value: function renderAndroidHeadless() {\n      var _this$props8 = this.props,\n          disabled = _this$props8.disabled,\n          Icon = _this$props8.Icon,\n          style = _this$props8.style,\n          pickerProps = _this$props8.pickerProps,\n          onOpen = _this$props8.onOpen,\n          touchableWrapperProps = _this$props8.touchableWrapperProps,\n          fixAndroidTouchableBug = _this$props8.fixAndroidTouchableBug;\n      var selectedItem = this.state.selectedItem;\n      var Component = fixAndroidTouchableBug ? View : TouchableOpacity;\n      return React.createElement(Component, _extends({\n        testID: \"android_touchable_wrapper\",\n        onPress: onOpen,\n        activeOpacity: 1\n      }, touchableWrapperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: style.headlessAndroidContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 17\n        }\n      }, this.renderTextInputOrChildren(), React.createElement(Picker, _extends({\n        style: [Icon ? {\n          backgroundColor: 'transparent'\n        } : {}, defaultStyles.headlessAndroidPicker, style.headlessAndroidPicker],\n        testID: \"android_picker_headless\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }\n      }), this.renderPickerItems())));\n    }\n  }, {\n    key: \"renderAndroidNativePickerStyle\",\n    value: function renderAndroidNativePickerStyle() {\n      var _this$props9 = this.props,\n          disabled = _this$props9.disabled,\n          Icon = _this$props9.Icon,\n          style = _this$props9.style,\n          pickerProps = _this$props9.pickerProps;\n      var selectedItem = this.state.selectedItem;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, _extends({\n        style: [Icon ? {\n          backgroundColor: 'transparent'\n        } : {}, style.inputAndroid, this.getPlaceholderStyle()],\n        testID: \"android_picker\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }\n      }), this.renderPickerItems()), this.renderIcon());\n    }\n  }, {\n    key: \"renderWeb\",\n    value: function renderWeb() {\n      var _this$props10 = this.props,\n          disabled = _this$props10.disabled,\n          style = _this$props10.style,\n          pickerProps = _this$props10.pickerProps;\n      var selectedItem = this.state.selectedItem;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, _extends({\n        style: [style.inputWeb],\n        testID: \"web_picker\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }\n      }), this.renderPickerItems()), this.renderIcon());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          children = _this$props11.children,\n          useNativeAndroidPickerStyle = _this$props11.useNativeAndroidPickerStyle;\n\n      if (Platform.OS === 'ios') {\n        return this.renderIOS();\n      }\n\n      if (Platform.OS === 'web') {\n        return this.renderWeb();\n      }\n\n      if (children || !useNativeAndroidPickerStyle) {\n        return this.renderAndroidHeadless();\n      }\n\n      return this.renderAndroidNativePickerStyle();\n    }\n  }]);\n\n  return RNPickerSelect;\n}(PureComponent);\n\nRNPickerSelect.propTypes = {\n  onValueChange: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    inputLabel: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string\n  })).isRequired,\n  value: PropTypes.any,\n  placeholder: PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.any,\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string\n  }),\n  disabled: PropTypes.bool,\n  itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.shape({}),\n  children: PropTypes.any,\n  onOpen: PropTypes.func,\n  useNativeAndroidPickerStyle: PropTypes.bool,\n  fixAndroidTouchableBug: PropTypes.bool,\n  doneText: PropTypes.string,\n  onDonePress: PropTypes.func,\n  onUpArrow: PropTypes.func,\n  onDownArrow: PropTypes.func,\n  onClose: PropTypes.func,\n  modalProps: PropTypes.shape({}),\n  textInputProps: PropTypes.shape({}),\n  pickerProps: PropTypes.shape({}),\n  touchableDoneProps: PropTypes.shape({}),\n  touchableWrapperProps: PropTypes.shape({}),\n  Icon: PropTypes.func,\n  InputAccessoryView: PropTypes.func\n};\nRNPickerSelect.defaultProps = {\n  value: undefined,\n  placeholder: {\n    label: 'Select an item...',\n    value: null,\n    color: '#9EA0A4'\n  },\n  disabled: false,\n  itemKey: null,\n  style: {},\n  children: null,\n  useNativeAndroidPickerStyle: true,\n  fixAndroidTouchableBug: false,\n  doneText: 'Done',\n  onDonePress: null,\n  onUpArrow: null,\n  onDownArrow: null,\n  onOpen: null,\n  onClose: null,\n  modalProps: {},\n  textInputProps: {},\n  pickerProps: {},\n  touchableDoneProps: {},\n  touchableWrapperProps: {},\n  Icon: null,\n  InputAccessoryView: null\n};\nexport { RNPickerSelect as default };\nexport { defaultStyles };","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-picker-select/src/index.js"],"names":["React","PureComponent","PropTypes","isEqual","Picker","defaultStyles","RNPickerSelect","placeholder","items","key","value","idx","findIndex","item","selectedItem","props","componentDidUpdate","prevProps","prevState","handlePlaceholder","concat","itemsChanged","getSelectedItem","itemKey","selectedItemChanged","undefined","onValueChange","setState","state","showPicker","animationType","orientation","doneDepressed","onUpArrow","bind","onDownArrow","onOrientationChange","setInputRef","togglePicker","renderInputAccessoryView","index","nativeEvent","ref","inputRef","style","label","onOpen","onClose","animate","postToggleCallback","modalProps","disabled","Keyboard","dismiss","triggerOpenCloseCallbacks","map","color","InputAccessoryView","doneText","onDonePress","touchableDoneProps","modalViewMiddle","chevronContainer","chevron","chevronUp","chevronActive","chevronDown","top","right","bottom","left","done","Icon","iconContainer","children","textInputProps","containerStyle","Platform","OS","inputIOSContainer","inputAndroidContainer","inputIOS","inputAndroid","getPlaceholderStyle","inputLabel","renderIcon","pickerProps","touchableWrapperProps","viewContainer","renderTextInputOrChildren","modalViewTop","modalViewBottom","height","renderPickerItems","fixAndroidTouchableBug","Component","View","TouchableOpacity","headlessAndroidContainer","backgroundColor","headlessAndroidPicker","inputWeb","useNativeAndroidPickerStyle","renderIOS","renderWeb","renderAndroidHeadless","renderAndroidNativePickerStyle","propTypes","func","isRequired","arrayOf","shape","string","any","oneOfType","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Keyboard, Modal, Platform, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { Picker } from '@react-native-picker/picker';\nimport { defaultStyles } from './styles';\n\nexport default class RNPickerSelect extends PureComponent {\n    static propTypes = {\n        onValueChange: PropTypes.func.isRequired,\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string.isRequired,\n                value: PropTypes.any.isRequired,\n                inputLabel: PropTypes.string,\n                key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                color: PropTypes.string,\n            })\n        ).isRequired,\n        value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n        placeholder: PropTypes.shape({\n            label: PropTypes.string,\n            value: PropTypes.any,\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            color: PropTypes.string,\n        }),\n        disabled: PropTypes.bool,\n        itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        style: PropTypes.shape({}),\n        children: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n        onOpen: PropTypes.func,\n        useNativeAndroidPickerStyle: PropTypes.bool,\n        fixAndroidTouchableBug: PropTypes.bool,\n\n        // Custom Modal props (iOS only)\n        doneText: PropTypes.string,\n        onDonePress: PropTypes.func,\n        onUpArrow: PropTypes.func,\n        onDownArrow: PropTypes.func,\n        onClose: PropTypes.func,\n\n        // Modal props (iOS only)\n        modalProps: PropTypes.shape({}),\n\n        // TextInput props\n        textInputProps: PropTypes.shape({}),\n\n        // Picker props\n        pickerProps: PropTypes.shape({}),\n\n        // Touchable Done props (iOS only)\n        touchableDoneProps: PropTypes.shape({}),\n\n        // Touchable wrapper props\n        touchableWrapperProps: PropTypes.shape({}),\n\n        // Custom Icon\n        Icon: PropTypes.func,\n        InputAccessoryView: PropTypes.func,\n    };\n\n    static defaultProps = {\n        value: undefined,\n        placeholder: {\n            label: 'Select an item...',\n            value: null,\n            color: '#9EA0A4',\n        },\n        disabled: false,\n        itemKey: null,\n        style: {},\n        children: null,\n        useNativeAndroidPickerStyle: true,\n        fixAndroidTouchableBug: false,\n        doneText: 'Done',\n        onDonePress: null,\n        onUpArrow: null,\n        onDownArrow: null,\n        onOpen: null,\n        onClose: null,\n        modalProps: {},\n        textInputProps: {},\n        pickerProps: {},\n        touchableDoneProps: {},\n        touchableWrapperProps: {},\n        Icon: null,\n        InputAccessoryView: null,\n    };\n\n    static handlePlaceholder({ placeholder }) {\n        if (isEqual(placeholder, {})) {\n            return [];\n        }\n        return [placeholder];\n    }\n\n    static getSelectedItem({ items, key, value }) {\n        let idx = items.findIndex((item) => {\n            if (item.key && key) {\n                return isEqual(item.key, key);\n            }\n            return isEqual(item.value, value);\n        });\n        if (idx === -1) {\n            idx = 0;\n        }\n        return {\n            selectedItem: items[idx] || {},\n            idx,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        const items = RNPickerSelect.handlePlaceholder({\n            placeholder: props.placeholder,\n        }).concat(props.items);\n\n        const { selectedItem } = RNPickerSelect.getSelectedItem({\n            items,\n            key: props.itemKey,\n            value: props.value,\n        });\n\n        this.state = {\n            items,\n            selectedItem,\n            showPicker: false,\n            animationType: undefined,\n            orientation: 'portrait',\n            doneDepressed: false,\n        };\n\n        this.onUpArrow = this.onUpArrow.bind(this);\n        this.onDownArrow = this.onDownArrow.bind(this);\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onOrientationChange = this.onOrientationChange.bind(this);\n        this.setInputRef = this.setInputRef.bind(this);\n        this.togglePicker = this.togglePicker.bind(this);\n        this.renderInputAccessoryView = this.renderInputAccessoryView.bind(this);\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        // update items if items or placeholder prop changes\n        const items = RNPickerSelect.handlePlaceholder({\n            placeholder: this.props.placeholder,\n        }).concat(this.props.items);\n        const itemsChanged = !isEqual(prevState.items, items);\n\n        // update selectedItem if value prop is defined and differs from currently selected item\n        const { selectedItem, idx } = RNPickerSelect.getSelectedItem({\n            items,\n            key: this.props.itemKey,\n            value: this.props.value,\n        });\n        const selectedItemChanged =\n            !isEqual(this.props.value, undefined) && !isEqual(prevState.selectedItem, selectedItem);\n\n        if (itemsChanged || selectedItemChanged) {\n            this.props.onValueChange(selectedItem.value, idx);\n\n            this.setState({\n                ...(itemsChanged ? { items } : {}),\n                ...(selectedItemChanged ? { selectedItem } : {}),\n            });\n        }\n    };\n\n    onUpArrow() {\n        const { onUpArrow } = this.props;\n\n        this.togglePicker(false, onUpArrow);\n    }\n\n    onDownArrow() {\n        const { onDownArrow } = this.props;\n\n        this.togglePicker(false, onDownArrow);\n    }\n\n    onValueChange(value, index) {\n        const { onValueChange } = this.props;\n\n        onValueChange(value, index);\n\n        this.setState((prevState) => {\n            return {\n                selectedItem: prevState.items[index],\n            };\n        });\n    }\n\n    onOrientationChange({ nativeEvent }) {\n        this.setState({\n            orientation: nativeEvent.orientation,\n        });\n    }\n\n    setInputRef(ref) {\n        this.inputRef = ref;\n    }\n\n    getPlaceholderStyle() {\n        const { placeholder, style } = this.props;\n        const { selectedItem } = this.state;\n\n        if (!isEqual(placeholder, {}) && selectedItem.label === placeholder.label) {\n            return {\n                ...defaultStyles.placeholder,\n                ...style.placeholder,\n            };\n        }\n        return {};\n    }\n\n    triggerOpenCloseCallbacks() {\n        const { onOpen, onClose } = this.props;\n        const { showPicker } = this.state;\n\n        if (!showPicker && onOpen) {\n            onOpen();\n        }\n\n        if (showPicker && onClose) {\n            onClose();\n        }\n    }\n\n    togglePicker(animate = false, postToggleCallback) {\n        const { modalProps, disabled } = this.props;\n        const { showPicker } = this.state;\n\n        if (disabled) {\n            return;\n        }\n\n        if (!showPicker) {\n            Keyboard.dismiss();\n        }\n\n        const animationType =\n            modalProps && modalProps.animationType ? modalProps.animationType : 'slide';\n\n        this.triggerOpenCloseCallbacks();\n\n        this.setState(\n            (prevState) => {\n                return {\n                    animationType: animate ? animationType : undefined,\n                    showPicker: !prevState.showPicker,\n                };\n            },\n            () => {\n                if (postToggleCallback) {\n                    postToggleCallback();\n                }\n            }\n        );\n    }\n\n    renderPickerItems() {\n        const { items } = this.state;\n\n        return items.map((item) => {\n            return (\n                <Picker.Item\n                    label={item.label}\n                    value={item.value}\n                    key={item.key || item.label}\n                    color={item.color}\n                />\n            );\n        });\n    }\n\n    renderInputAccessoryView() {\n        const {\n            InputAccessoryView,\n            doneText,\n            onUpArrow,\n            onDownArrow,\n            onDonePress,\n            style,\n            touchableDoneProps,\n        } = this.props;\n\n        const { doneDepressed } = this.state;\n\n        if (InputAccessoryView) {\n            return <InputAccessoryView testID=\"custom_input_accessory_view\" />;\n        }\n\n        return (\n            <View\n                style={[defaultStyles.modalViewMiddle, style.modalViewMiddle]}\n                testID=\"input_accessory_view\"\n            >\n                <View style={[defaultStyles.chevronContainer, style.chevronContainer]}>\n                    <TouchableOpacity\n                        activeOpacity={onUpArrow ? 0.5 : 1}\n                        onPress={onUpArrow ? this.onUpArrow : null}\n                    >\n                        <View\n                            style={[\n                                defaultStyles.chevron,\n                                style.chevron,\n                                defaultStyles.chevronUp,\n                                style.chevronUp,\n                                onUpArrow ? [defaultStyles.chevronActive, style.chevronActive] : {},\n                            ]}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        activeOpacity={onDownArrow ? 0.5 : 1}\n                        onPress={onDownArrow ? this.onDownArrow : null}\n                    >\n                        <View\n                            style={[\n                                defaultStyles.chevron,\n                                style.chevron,\n                                defaultStyles.chevronDown,\n                                style.chevronDown,\n                                onDownArrow\n                                    ? [defaultStyles.chevronActive, style.chevronActive]\n                                    : {},\n                            ]}\n                        />\n                    </TouchableOpacity>\n                </View>\n                <TouchableOpacity\n                    testID=\"done_button\"\n                    onPress={() => {\n                        this.togglePicker(true, onDonePress);\n                    }}\n                    onPressIn={() => {\n                        this.setState({ doneDepressed: true });\n                    }}\n                    onPressOut={() => {\n                        this.setState({ doneDepressed: false });\n                    }}\n                    hitSlop={{ top: 4, right: 4, bottom: 4, left: 4 }}\n                    {...touchableDoneProps}\n                >\n                    <View testID=\"needed_for_touchable\">\n                        <Text\n                            testID=\"done_text\"\n                            allowFontScaling={false}\n                            style={[\n                                defaultStyles.done,\n                                style.done,\n                                doneDepressed\n                                    ? [defaultStyles.doneDepressed, style.doneDepressed]\n                                    : {},\n                            ]}\n                        >\n                            {doneText}\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n\n    renderIcon() {\n        const { style, Icon } = this.props;\n\n        if (!Icon) {\n            return null;\n        }\n\n        return (\n            <View\n                testID=\"icon_container\"\n                style={[defaultStyles.iconContainer, style.iconContainer]}\n            >\n                <Icon testID=\"icon\" />\n            </View>\n        );\n    }\n\n    renderTextInputOrChildren() {\n        const { children, style, textInputProps } = this.props;\n        const { selectedItem } = this.state;\n\n        const containerStyle =\n            Platform.OS === 'ios' ? style.inputIOSContainer : style.inputAndroidContainer;\n\n        if (children) {\n            return (\n                <View pointerEvents=\"box-only\" style={containerStyle}>\n                    {children}\n                </View>\n            );\n        }\n\n        return (\n            <View pointerEvents=\"box-only\" style={containerStyle}>\n                <TextInput\n                    testID=\"text_input\"\n                    style={[\n                        Platform.OS === 'ios' ? style.inputIOS : style.inputAndroid,\n                        this.getPlaceholderStyle(),\n                    ]}\n                    value={selectedItem.inputLabel ? selectedItem.inputLabel : selectedItem.label}\n                    ref={this.setInputRef}\n                    editable={false}\n                    {...textInputProps}\n                />\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    renderIOS() {\n        const { style, modalProps, pickerProps, touchableWrapperProps } = this.props;\n        const { animationType, orientation, selectedItem, showPicker } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <TouchableOpacity\n                    testID=\"ios_touchable_wrapper\"\n                    onPress={() => {\n                        this.togglePicker(true);\n                    }}\n                    activeOpacity={1}\n                    {...touchableWrapperProps}\n                >\n                    {this.renderTextInputOrChildren()}\n                </TouchableOpacity>\n                <Modal\n                    testID=\"ios_modal\"\n                    visible={showPicker}\n                    transparent\n                    animationType={animationType}\n                    supportedOrientations={['portrait', 'landscape']}\n                    onOrientationChange={this.onOrientationChange}\n                    {...modalProps}\n                >\n                    <TouchableOpacity\n                        style={[defaultStyles.modalViewTop, style.modalViewTop]}\n                        testID=\"ios_modal_top\"\n                        onPress={() => {\n                            this.togglePicker(true);\n                        }}\n                    />\n                    {this.renderInputAccessoryView()}\n                    <View\n                        style={[\n                            defaultStyles.modalViewBottom,\n                            { height: orientation === 'portrait' ? 215 : 162 },\n                            style.modalViewBottom,\n                        ]}\n                    >\n                        <Picker\n                            testID=\"ios_picker\"\n                            onValueChange={this.onValueChange}\n                            selectedValue={selectedItem.value}\n                            {...pickerProps}\n                        >\n                            {this.renderPickerItems()}\n                        </Picker>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n\n    renderAndroidHeadless() {\n        const {\n            disabled,\n            Icon,\n            style,\n            pickerProps,\n            onOpen,\n            touchableWrapperProps,\n            fixAndroidTouchableBug,\n        } = this.props;\n        const { selectedItem } = this.state;\n\n        const Component = fixAndroidTouchableBug ? View : TouchableOpacity;\n        return (\n            <Component\n                testID=\"android_touchable_wrapper\"\n                onPress={onOpen}\n                activeOpacity={1}\n                {...touchableWrapperProps}\n            >\n                <View style={style.headlessAndroidContainer}>\n                    {this.renderTextInputOrChildren()}\n                    <Picker\n                        style={[\n                            Icon ? { backgroundColor: 'transparent' } : {}, // to hide native icon\n                            defaultStyles.headlessAndroidPicker,\n                            style.headlessAndroidPicker,\n                        ]}\n                        testID=\"android_picker_headless\"\n                        enabled={!disabled}\n                        onValueChange={this.onValueChange}\n                        selectedValue={selectedItem.value}\n                        {...pickerProps}\n                    >\n                        {this.renderPickerItems()}\n                    </Picker>\n                </View>\n            </Component>\n        );\n    }\n\n    renderAndroidNativePickerStyle() {\n        const { disabled, Icon, style, pickerProps } = this.props;\n        const { selectedItem } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <Picker\n                    style={[\n                        Icon ? { backgroundColor: 'transparent' } : {}, // to hide native icon\n                        style.inputAndroid,\n                        this.getPlaceholderStyle(),\n                    ]}\n                    testID=\"android_picker\"\n                    enabled={!disabled}\n                    onValueChange={this.onValueChange}\n                    selectedValue={selectedItem.value}\n                    {...pickerProps}\n                >\n                    {this.renderPickerItems()}\n                </Picker>\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    renderWeb() {\n        const { disabled, style, pickerProps } = this.props;\n        const { selectedItem } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <Picker\n                    style={[style.inputWeb]}\n                    testID=\"web_picker\"\n                    enabled={!disabled}\n                    onValueChange={this.onValueChange}\n                    selectedValue={selectedItem.value}\n                    {...pickerProps}\n                >\n                    {this.renderPickerItems()}\n                </Picker>\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    render() {\n        const { children, useNativeAndroidPickerStyle } = this.props;\n\n        if (Platform.OS === 'ios') {\n            return this.renderIOS();\n        }\n\n        if (Platform.OS === 'web') {\n            return this.renderWeb();\n        }\n\n        if (children || !useNativeAndroidPickerStyle) {\n            return this.renderAndroidHeadless();\n        }\n\n        return this.renderAndroidNativePickerStyle();\n    }\n}\n\nexport { defaultStyles };\n"]},"metadata":{},"sourceType":"module"}