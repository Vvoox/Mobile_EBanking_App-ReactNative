{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-elements/src/avatar/Avatar.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport isEqual from 'lodash.isequal';\nimport { withTheme } from \"../config\";\nimport { renderNode, nodeType, ImageSourceType } from \"../helpers\";\nimport Icon from \"../icons/Icon\";\nimport Image from \"../image/Image\";\nimport Accessory from \"./Accessory\";\nvar avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150\n};\n\nvar AvatarComponent = function AvatarComponent(_ref) {\n  var onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? onPress || onLongPress ? TouchableOpacity : View : _ref$Component,\n      containerStyle = _ref.containerStyle,\n      icon = _ref.icon,\n      iconStyle = _ref.iconStyle,\n      source = _ref.source,\n      size = _ref.size,\n      avatarStyle = _ref.avatarStyle,\n      rounded = _ref.rounded,\n      title = _ref.title,\n      titleStyle = _ref.titleStyle,\n      overlayContainerStyle = _ref.overlayContainerStyle,\n      imageProps = _ref.imageProps,\n      placeholderStyle = _ref.placeholderStyle,\n      renderPlaceholderContent = _ref.renderPlaceholderContent,\n      ImageComponent = _ref.ImageComponent,\n      children = _ref.children,\n      attributes = _objectWithoutProperties(_ref, [\"onPress\", \"onLongPress\", \"Component\", \"containerStyle\", \"icon\", \"iconStyle\", \"source\", \"size\", \"avatarStyle\", \"rounded\", \"title\", \"titleStyle\", \"overlayContainerStyle\", \"imageProps\", \"placeholderStyle\", \"renderPlaceholderContent\", \"ImageComponent\", \"children\"]);\n\n  var width = typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  var height = width;\n  var titleSize = width / 2;\n  var iconSize = width / 2;\n  var PlaceholderContent = renderPlaceholderContent && renderNode(undefined, renderPlaceholderContent) || title && React.createElement(Text, {\n    style: StyleSheet.flatten([styles.title, {\n      fontSize: titleSize\n    }, titleStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, title) || icon && React.createElement(Icon, {\n    style: iconStyle && iconStyle,\n    color: icon.color || 'white',\n    name: icon.name || 'user',\n    size: icon.size || iconSize,\n    type: icon.type && icon.type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  });\n  var hidePlaceholder = !(source && source.uri);\n  var imageContainerStyle = StyleSheet.flatten([styles.overlayContainer, rounded && {\n    borderRadius: width / 2,\n    overflow: 'hidden'\n  }, overlayContainerStyle, imageProps && imageProps.containerStyle]);\n\n  if (imageProps && imageProps.containerStyle) {\n    delete imageProps.containerStyle;\n  }\n\n  return React.createElement(Component, _extends({\n    onPress: onPress,\n    onLongPress: onLongPress,\n    style: StyleSheet.flatten([styles.container, {\n      height: height,\n      width: width\n    }, rounded && {\n      borderRadius: width / 2\n    }, containerStyle])\n  }, attributes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), React.createElement(Image, _extends({\n    placeholderStyle: StyleSheet.flatten([placeholderStyle, hidePlaceholder && styles.hiddenPlaceholderStyle]),\n    PlaceholderContent: PlaceholderContent,\n    containerStyle: imageContainerStyle,\n    source: source,\n    borderRadius: rounded ? width / 2 : undefined\n  }, imageProps, {\n    style: StyleSheet.flatten([styles.avatar, imageProps && imageProps.style, avatarStyle]),\n    ImageComponent: ImageComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  })), children);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent'\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null\n  },\n  overlayContainer: {\n    flex: 1\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center'\n  },\n  hiddenPlaceholderStyle: {\n    backgroundColor: 'transparent'\n  }\n});\nAvatarComponent.propTypes = {\n  Component: PropTypes.oneOf([View, TouchableOpacity, TouchableHighlight, TouchableNativeFeedback, TouchableWithoutFeedback]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  source: ImageSourceType,\n  avatarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']), PropTypes.number]),\n  placeholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  renderPlaceholderContent: nodeType,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType\n};\nAvatarComponent.defaultProps = {\n  size: 'small',\n  ImageComponent: RNImage\n};\nvar Avatar = React.memo(AvatarComponent, isEqual);\nexport { Avatar };\nvar ThemedAvatar = withTheme(Avatar, 'Avatar');\nThemedAvatar.Accessory = Accessory;\nexport default ThemedAvatar;","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-elements/src/avatar/Avatar.js"],"names":["React","PropTypes","isEqual","withTheme","renderNode","nodeType","ImageSourceType","Icon","Image","Accessory","avatarSizes","small","medium","large","xlarge","AvatarComponent","onPress","onLongPress","Component","TouchableOpacity","View","containerStyle","icon","iconStyle","source","size","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","imageProps","placeholderStyle","renderPlaceholderContent","ImageComponent","children","attributes","width","height","titleSize","iconSize","PlaceholderContent","undefined","StyleSheet","flatten","styles","fontSize","color","name","type","hidePlaceholder","uri","imageContainerStyle","overlayContainer","borderRadius","overflow","container","hiddenPlaceholderStyle","avatar","style","create","backgroundColor","flex","textAlign","propTypes","oneOf","TouchableHighlight","TouchableNativeFeedback","TouchableWithoutFeedback","func","oneOfType","object","array","bool","string","activeOpacity","number","elementType","defaultProps","RNImage","Avatar","memo","ThemedAvatar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text,\n  Image as RNImage,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\n\nimport { withTheme } from '../config';\nimport { renderNode, nodeType, ImageSourceType } from '../helpers';\n\nimport Icon from '../icons/Icon';\nimport Image from '../image/Image';\nimport Accessory from './Accessory';\n\nconst avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150,\n};\n\nconst AvatarComponent = ({\n  onPress,\n  onLongPress,\n  Component = onPress || onLongPress ? TouchableOpacity : View,\n  containerStyle,\n  icon,\n  iconStyle,\n  source,\n  size,\n  avatarStyle,\n  rounded,\n  title,\n  titleStyle,\n  overlayContainerStyle,\n  imageProps,\n  placeholderStyle,\n  renderPlaceholderContent,\n  ImageComponent,\n  children,\n  ...attributes\n}) => {\n  const width =\n    typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  const height = width;\n  const titleSize = width / 2;\n  const iconSize = width / 2;\n\n  const PlaceholderContent =\n    (renderPlaceholderContent &&\n      renderNode(undefined, renderPlaceholderContent)) ||\n    (title && (\n      <Text\n        style={StyleSheet.flatten([\n          styles.title,\n          { fontSize: titleSize },\n          titleStyle,\n        ])}\n      >\n        {title}\n      </Text>\n    )) ||\n    (icon && (\n      <Icon\n        style={iconStyle && iconStyle}\n        color={icon.color || 'white'}\n        name={icon.name || 'user'}\n        size={icon.size || iconSize}\n        type={icon.type && icon.type}\n      />\n    ));\n\n  // Remove placeholder styling if we're not using image\n  const hidePlaceholder = !(source && source.uri);\n\n  // Merge image container style\n  const imageContainerStyle = StyleSheet.flatten([\n    styles.overlayContainer,\n    rounded && { borderRadius: width / 2, overflow: 'hidden' },\n    overlayContainerStyle,\n    imageProps && imageProps.containerStyle,\n  ]);\n\n  if (imageProps && imageProps.containerStyle) {\n    delete imageProps.containerStyle;\n  }\n\n  return (\n    <Component\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        { height, width },\n        rounded && { borderRadius: width / 2 },\n        containerStyle,\n      ])}\n      {...attributes}\n    >\n      <Image\n        placeholderStyle={StyleSheet.flatten([\n          placeholderStyle,\n          hidePlaceholder && styles.hiddenPlaceholderStyle,\n        ])}\n        PlaceholderContent={PlaceholderContent}\n        containerStyle={imageContainerStyle}\n        source={source}\n        borderRadius={rounded ? width / 2 : undefined}\n        {...imageProps}\n        style={StyleSheet.flatten([\n          styles.avatar,\n          imageProps && imageProps.style,\n          avatarStyle,\n        ])}\n        ImageComponent={ImageComponent}\n      />\n      {children}\n    </Component>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  overlayContainer: {\n    flex: 1,\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n  },\n  hiddenPlaceholderStyle: {\n    backgroundColor: 'transparent',\n  },\n});\n\nAvatarComponent.propTypes = {\n  Component: PropTypes.oneOf([\n    View,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableNativeFeedback,\n    TouchableWithoutFeedback,\n  ]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  source: ImageSourceType,\n  avatarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n    PropTypes.number,\n  ]),\n  placeholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  renderPlaceholderContent: nodeType,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType,\n};\n\nAvatarComponent.defaultProps = {\n  size: 'small',\n  ImageComponent: RNImage,\n};\n\nconst Avatar = React.memo(AvatarComponent, isEqual);\nexport { Avatar };\nconst ThemedAvatar = withTheme(Avatar, 'Avatar');\n\nThemedAvatar.Accessory = Accessory;\n\nexport default ThemedAvatar;\n"]},"metadata":{},"sourceType":"module"}