{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Input = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _input = require(\"./input.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _theme2 = require(\"../../theme/theme.service\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/input/input.component.tsx\";\nvar Input = React.forwardRef(function (incomingProps, ref) {\n  var props = (0, _useDefaultProps.useDefaultProps)('Input', incomingProps, {\n    px: 'xl',\n    py: 'lg',\n    fontSize: 'lg',\n    borderWidth: 0,\n    bg: 'white',\n    borderColor: 'gray400',\n    rounded: 'md',\n    loading: false,\n    color: 'gray800',\n    shadow: 0,\n    shadowColor: 'gray500',\n    loaderSize: '3xl',\n    loaderColor: 'blue700'\n  });\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      bg = props.bg,\n      minH = props.minH,\n      minW = props.minW,\n      colorProp = props.color,\n      suffix = props.suffix,\n      prefix = props.prefix,\n      style = props.style,\n      onBlur = props.onBlur,\n      loading = props.loading,\n      onFocus = props.onFocus,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      children = props.children,\n      loaderSize = props.loaderSize,\n      fontSize = props.fontSize,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      loaderColor = props.loaderColor,\n      focusBorderColor = props.focusBorderColor,\n      shadow = props.shadow,\n      flex = props.flex,\n      shadowColor = props.shadowColor,\n      zIndex = props.zIndex,\n      opacity = props.opacity,\n      placeholderTextColor = props.placeholderTextColor,\n      selectionColor = props.selectionColor,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"bg\", \"minH\", \"minW\", \"color\", \"suffix\", \"prefix\", \"style\", \"onBlur\", \"loading\", \"onFocus\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"children\", \"loaderSize\", \"fontSize\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"loaderColor\", \"focusBorderColor\", \"shadow\", \"flex\", \"shadowColor\", \"zIndex\", \"opacity\", \"placeholderTextColor\", \"selectionColor\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = (0, React.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isFocussed = _useState2[0],\n      setIsFocussed = _useState2[1];\n\n  var computedStyle = (0, _input.getStyle)(theme, props, {\n    isFocussed: isFocussed\n  });\n  var placeholderColor = placeholderTextColor ? (0, _color.default)((0, _theme2.getThemeProperty)(theme.colors, placeholderTextColor)).alpha(0.4).rgb().string() : (0, _color.default)((0, _theme2.getThemeProperty)(theme.colors, colorProp)).alpha(0.4).rgb().string();\n\n  var onFocusInput = function onFocusInput(e) {\n    setIsFocussed(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  var onBlurInput = function onBlurInput(e) {\n    setIsFocussed(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  return React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, prefix && React.createElement(_reactNative.View, {\n    style: computedStyle.prefix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 20\n    }\n  }, prefix), React.createElement(_reactNative.TextInput, (0, _extends2.default)({\n    ref: ref,\n    onFocus: onFocusInput,\n    onBlur: onBlurInput,\n    selectionColor: (0, _theme2.getThemeProperty)(theme.colors, props.selectionColor)\n  }, rest, {\n    style: computedStyle.input,\n    placeholderTextColor: placeholderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), !loading && suffix && React.createElement(_reactNative.View, {\n    style: computedStyle.suffix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, suffix), loading && React.createElement(_reactNative.View, {\n    style: computedStyle.suffix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, React.createElement(_reactNative.ActivityIndicator, {\n    size: (0, _theme2.getThemeProperty)(theme.fontSize, loaderSize),\n    color: (0, _theme2.getThemeProperty)(theme.colors, loaderColor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })));\n});\nexports.Input = Input;","map":{"version":3,"sources":["input.component.tsx"],"names":["Input","React","props","px","py","fontSize","borderWidth","bg","borderColor","rounded","loading","color","shadow","shadowColor","loaderSize","loaderColor","h","w","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","minH","minW","colorProp","suffix","prefix","style","onBlur","onFocus","roundedTop","roundedRight","roundedBottom","roundedLeft","children","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","focusBorderColor","flex","zIndex","opacity","placeholderTextColor","selectionColor","rest","theme","ThemeContext","isFocussed","setIsFocussed","computedStyle","placeholderColor","onFocusInput","onBlurInput"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { useContext, useState } from 'react';\nimport {\n  View as RNView,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  TextInput as RNTextInput,\n  ActivityIndicator as RNActivityIndicator,\n} from 'react-native';\n\nimport { getStyle } from './input.style';\nimport { InputProps } from './input.type';\nimport { ThemeContext } from '../../theme';\nimport { getThemeProperty } from '../../theme/theme.service';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Input = React.forwardRef<RNTextInput, InputProps>(\n  (incomingProps, ref) => {\n    const props = useDefaultProps('Input', incomingProps, {\n      px: 'xl',\n      py: 'lg',\n      fontSize: 'lg',\n      borderWidth: 0,\n      bg: 'white',\n      borderColor: 'gray400',\n      rounded: 'md',\n      loading: false,\n      color: 'gray800',\n      shadow: 0,\n      shadowColor: 'gray500',\n      loaderSize: '3xl',\n      loaderColor: 'blue700',\n    });\n\n    const {\n      h,\n      w,\n      m,\n      mt,\n      mr,\n      mb,\n      ml,\n      ms,\n      p,\n      pr,\n      pt,\n      pb,\n      pl,\n      bg,\n      minH,\n      minW,\n      color: colorProp,\n      suffix,\n      prefix,\n      style,\n      onBlur,\n      loading,\n      onFocus,\n      rounded,\n      roundedTop,\n      roundedRight,\n      roundedBottom,\n      roundedLeft,\n      children,\n      loaderSize,\n      fontSize,\n      borderColor,\n      borderBottomColor,\n      borderLeftColor,\n      borderTopColor,\n      borderRightColor,\n      borderWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderTopWidth,\n      borderEndWidth,\n      loaderColor,\n      focusBorderColor,\n      shadow,\n      flex,\n      shadowColor,\n      zIndex,\n      opacity,\n      placeholderTextColor,\n      selectionColor,\n      ...rest\n    } = props;\n    const { theme } = useContext(ThemeContext);\n    const [isFocussed, setIsFocussed] = useState(false);\n    const computedStyle = getStyle(theme, props, { isFocussed });\n    const placeholderColor = placeholderTextColor\n      ? color(getThemeProperty(theme.colors, placeholderTextColor))\n          .alpha(0.4)\n          .rgb()\n          .string()\n      : color(getThemeProperty(theme.colors, colorProp))\n          .alpha(0.4)\n          .rgb()\n          .string();\n\n    /**\n     * on focus input\n     *\n     * @param e\n     */\n    const onFocusInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n      setIsFocussed(true);\n\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n\n    /**\n     * on blur input\n     *\n     * @param e\n     */\n    const onBlurInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n      setIsFocussed(false);\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    return (\n      <RNView style={computedStyle.container}>\n        {prefix && <RNView style={computedStyle.prefix}>{prefix}</RNView>}\n        <RNTextInput\n          ref={ref}\n          onFocus={onFocusInput}\n          onBlur={onBlurInput}\n          selectionColor={getThemeProperty(theme.colors, props.selectionColor)}\n          {...rest}\n          style={computedStyle.input}\n          placeholderTextColor={placeholderColor}\n        />\n        {!loading && suffix && (\n          <RNView style={computedStyle.suffix}>{suffix}</RNView>\n        )}\n        {loading && (\n          <RNView style={computedStyle.suffix}>\n            <RNActivityIndicator\n              size={getThemeProperty(theme.fontSize, loaderSize)}\n              color={getThemeProperty(theme.colors, loaderColor)}\n            />\n          </RNView>\n        )}\n      </RNView>\n    );\n  }\n);\n\n// Input.defaultProps = {\n//   px: 'xl',\n//   py: 'lg',\n//   fontSize: 'lg',\n//   borderWidth: 0,\n//   bg: 'white',\n//   borderColor: 'gray400',\n//   rounded: 'md',\n//   loading: false,\n//   color: 'gray800',\n//   shadow: 0,\n//   shadowColor: 'gray500',\n//   loaderSize: '3xl',\n//   loaderColor: 'blue700',\n// };\n\nexport { Input };\n"]},"metadata":{},"sourceType":"script"}