{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-elements/src/card/Card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../config\";\nimport CardTitle from \"./CardTitle\";\nimport CardDivider from \"./CardDivider\";\nimport CardImage from \"./CardImage\";\nimport CardFeaturedTitle from \"./CardFeaturedTitle\";\nimport CardFeaturedSubtitle from \"./CardFeaturedSubtitle\";\n\nvar Card = function Card(props) {\n  var children = props.children,\n      containerStyle = props.containerStyle,\n      wrapperStyle = props.wrapperStyle,\n      theme = props.theme,\n      attributes = _objectWithoutProperties(props, [\"children\", \"containerStyle\", \"wrapperStyle\", \"theme\"]);\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container(theme), containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nCard.propTypes = {\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  theme: PropTypes.object\n};\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread({\n      backgroundColor: theme.colors.white,\n      borderWidth: 1,\n      padding: 15,\n      margin: 15,\n      marginBottom: 0,\n      borderColor: theme.colors.grey5\n    }, Platform.select({\n      android: {\n        elevation: 1\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: {\n          height: 0,\n          width: 0\n        },\n        shadowOpacity: 1,\n        shadowRadius: 1\n      }\n    }));\n  },\n  wrapper: {\n    backgroundColor: 'transparent'\n  }\n};\nexport { Card };\nvar ThemedCard = withTheme(Card, 'Card');\nThemedCard.Divider = CardDivider;\nThemedCard.Image = CardImage;\nThemedCard.Title = CardTitle;\nThemedCard.FeaturedTitle = CardFeaturedTitle;\nThemedCard.FeaturedSubtitle = CardFeaturedSubtitle;\nexport default ThemedCard;","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-elements/src/card/Card.js"],"names":["React","PropTypes","withTheme","CardTitle","CardDivider","CardImage","CardFeaturedTitle","CardFeaturedSubtitle","Card","props","children","containerStyle","wrapperStyle","theme","attributes","StyleSheet","flatten","styles","container","wrapper","propTypes","oneOfType","object","array","overlayStyle","backgroundColor","colors","white","borderWidth","padding","margin","marginBottom","borderColor","grey5","Platform","select","android","elevation","default","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","ThemedCard","Divider","Image","Title","FeaturedTitle","FeaturedSubtitle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Platform, StyleSheet } from 'react-native';\n\nimport { withTheme } from '../config';\n\nimport CardTitle from './CardTitle';\nimport CardDivider from './CardDivider';\nimport CardImage from './CardImage';\nimport CardFeaturedTitle from './CardFeaturedTitle';\nimport CardFeaturedSubtitle from './CardFeaturedSubtitle';\n\nconst Card = (props) => {\n  const {\n    children,\n    containerStyle,\n    wrapperStyle,\n    theme,\n    ...attributes\n  } = props;\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container(theme),\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nCard.propTypes = {\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  theme: PropTypes.object,\n};\n\nconst styles = {\n  container: (theme) => ({\n    backgroundColor: theme.colors.white,\n    borderWidth: 1,\n    padding: 15,\n    margin: 15,\n    marginBottom: 0,\n    borderColor: theme.colors.grey5,\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: { height: 0, width: 0 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  }),\n  wrapper: {\n    backgroundColor: 'transparent',\n  },\n};\n\nexport { Card };\nconst ThemedCard = withTheme(Card, 'Card');\nThemedCard.Divider = CardDivider;\nThemedCard.Image = CardImage;\nThemedCard.Title = CardTitle;\nThemedCard.FeaturedTitle = CardFeaturedTitle;\nThemedCard.FeaturedSubtitle = CardFeaturedSubtitle;\nexport default ThemedCard;\n"]},"metadata":{},"sourceType":"module"}