{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRippleColor = exports.getUnderlayColor = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _theme = require(\"../../theme/theme.service\");\n\nvar getUnderlayColor = function getUnderlayColor(theme, props) {\n  return (0, _theme.getThemeProperty)(theme.colors, props.underlayColor ? props.underlayColor : (0, _color.default)((0, _theme.getThemeProperty)(theme.colors, props.bg)).darken(0.1).rgb().string());\n};\n\nexports.getUnderlayColor = getUnderlayColor;\n\nvar getRippleColor = function getRippleColor(theme, props) {\n  return (0, _color.default)((0, _theme.getThemeProperty)(theme.colors, props.rippleColor)).alpha(props.disabled ? 0 : 0.2).rgb().string();\n};\n\nexports.getRippleColor = getRippleColor;","map":{"version":3,"sources":["button.service.ts"],"names":["getUnderlayColor","theme","props","getRippleColor"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,6BAAA;;AAUO,IAAMA,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAAmB,KAAnBA,EAA6D;AACxE,SAAO,CAAA,GAAA,MAAA,CAAA,gBAAA,EACLC,KAAK,CADA,MAAA,EAELC,KAAK,CAALA,aAAAA,GACIA,KAAK,CADTA,aAAAA,GAEI,CAAA,GAAA,MAAA,CAAA,OAAA,EAAM,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBD,KAAK,CAAtB,MAAA,EAA+BC,KAAK,CAA1C,EAAM,CAAN,EAAA,MAAA,CAAA,GAAA,EAAA,GAAA,GAJN,MAIM,EAJC,CAAP;AADK,CAAA;;;;AAkBA,IAAMC,cAAc,GAAdA,SAAAA,cAAAA,CAAiB,KAAjBA,EAAiB,KAAjBA,EAA2D;AACtE,SAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EAAM,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBF,KAAK,CAAtB,MAAA,EAA+BC,KAAK,CAA1C,WAAM,CAAN,EAAA,KAAA,CACEA,KAAK,CAALA,QAAAA,GAAAA,CAAAA,GADF,GAAA,EAAA,GAAA,GAAP,MAAO,EAAP;AADK,CAAA","sourcesContent":["import color from 'color';\n\nimport { getThemeProperty } from '../../theme/theme.service';\nimport { ButtonProps } from './button.type';\nimport { ThemeType } from '../../theme/type';\n\n/**\n * returns underlay color\n *\n * @param theme\n * @param props\n */\nexport const getUnderlayColor = (theme: ThemeType, props: ButtonProps) => {\n  return getThemeProperty(\n    theme.colors,\n    props.underlayColor\n      ? props.underlayColor\n      : color(getThemeProperty(theme.colors, props.bg))\n          .darken(0.1)\n          .rgb()\n          .string()\n  );\n};\n\n/**\n * return ripple color\n *\n * @param theme\n * @param props\n */\nexport const getRippleColor = (theme: ThemeType, props: ButtonProps) => {\n  return color(getThemeProperty(theme.colors, props.rippleColor))\n    .alpha(props.disabled ? 0 : 0.2)\n    .rgb()\n    .string();\n};\n"]},"metadata":{},"sourceType":"script"}