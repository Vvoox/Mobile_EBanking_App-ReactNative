{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.overlayProps = exports.buttonProps = exports.disabledProps = exports.inputProps = exports.preffixSuffixProps = exports.loadingProps = exports.zIndexProps = exports.overflowProps = exports.opacityProps = exports.textProps = exports.backgroundProps = exports.positionProps = exports.flexProps = exports.dimensionProps = exports.shadowProps = exports.roundedProps = exports.spacingProps = exports.borderProps = void 0;\nvar borderProps = ['borderColor', 'borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor', 'borderWidth', 'borderTopWidth', 'borderRightWidth', 'borderLeftWidth', 'borderBottomWidth', 'borderEndWidth', 'borderStyle'];\nexports.borderProps = borderProps;\nvar spacingProps = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'ms', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py'];\nexports.spacingProps = spacingProps;\nvar roundedProps = ['rounded', 'roundedTopLeft', 'roundedTopRight', 'roundedBottomLeft', 'roundedBottomRight', 'roundedTop', 'roundedLeft', 'roundedRight', 'roundedBottom'];\nexports.roundedProps = roundedProps;\nvar shadowProps = ['shadow', 'shadowColor'];\nexports.shadowProps = shadowProps;\nvar dimensionProps = ['minH', 'minW', 'maxH', 'maxW', 'h', 'w'];\nexports.dimensionProps = dimensionProps;\nvar flexProps = ['row', 'flex', 'flexDir', 'flexWrap', 'justifyContent', 'alignSelf', 'alignItems'];\nexports.flexProps = flexProps;\nvar positionProps = ['position', 'top', 'right', 'bottom', 'left'];\nexports.positionProps = positionProps;\nvar backgroundProps = ['bg', 'bgImg', 'bgMode'];\nexports.backgroundProps = backgroundProps;\nvar textProps = ['color', 'fontSize', 'textDecorLine', 'textDecorStyle', 'fontStyle', 'textDecorColor', 'fontWeight', 'fontFamily', 'lineHeight', 'textAlign', 'textTransform', 'letterSpacing', 'textAlignVertical'];\nexports.textProps = textProps;\nvar opacityProps = ['opacity'];\nexports.opacityProps = opacityProps;\nvar overflowProps = ['overflow'];\nexports.overflowProps = overflowProps;\nvar zIndexProps = ['zIndex'];\nexports.zIndexProps = zIndexProps;\nvar loadingProps = ['loading', 'loaderSize', 'loaderColor'];\nexports.loadingProps = loadingProps;\nvar preffixSuffixProps = ['preffix', 'suffix'];\nexports.preffixSuffixProps = preffixSuffixProps;\nvar inputProps = ['focusBorderColor'];\nexports.inputProps = inputProps;\nvar disabledProps = ['disabled'];\nexports.disabledProps = disabledProps;\nvar buttonProps = ['underlayColor', 'block', 'borderless', 'rippleColor', 'ripple'];\nexports.buttonProps = buttonProps;\nvar overlayProps = ['overlayColor', 'overlayOpacity'];\nexports.overlayProps = overlayProps;","map":{"version":3,"sources":["types.ts"],"names":["borderProps","spacingProps","roundedProps","shadowProps","dimensionProps","flexProps","positionProps","backgroundProps","textProps","opacityProps","overflowProps","zIndexProps","loadingProps","preffixSuffixProps","inputProps","disabledProps","buttonProps","overlayProps"],"mappings":";;;;AAMO,IAAMA,WAAW,GAAG,CAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,gBAAA,EAApB,aAAoB,CAApB;;AA6BA,IAAMC,YAAY,GAAG,CAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAArB,IAAqB,CAArB;;AAmCA,IAAMC,YAAY,GAAG,CAAA,SAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,cAAA,EAArB,eAAqB,CAArB;;AAuBA,IAAMC,WAAW,GAAG,CAAA,QAAA,EAApB,aAAoB,CAApB;;AAMA,IAAMC,cAAc,GAAG,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GAAA,EAAvB,GAAuB,CAAvB;;AAiBA,IAAMC,SAAS,GAAG,CAAA,KAAA,EAAA,MAAA,EAAA,SAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,WAAA,EAAlB,YAAkB,CAAlB;;AA+BA,IAAMC,aAAa,GAAG,CAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAtB,MAAsB,CAAtB;;AAeA,IAAMC,eAAe,GAAG,CAAA,IAAA,EAAA,OAAA,EAAxB,QAAwB,CAAxB;;AAOA,IAAMC,SAAS,GAAG,CAAA,OAAA,EAAA,UAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eAAA,EAAlB,mBAAkB,CAAlB;;AAwDA,IAAMC,YAAY,GAAG,CAArB,SAAqB,CAArB;;AAKA,IAAMC,aAAa,GAAG,CAAtB,UAAsB,CAAtB;;AAKA,IAAMC,WAAW,GAAG,CAApB,QAAoB,CAApB;;AAKA,IAAMC,YAAY,GAAG,CAAA,SAAA,EAAA,YAAA,EAArB,aAAqB,CAArB;;AAOA,IAAMC,kBAAkB,GAAG,CAAA,SAAA,EAA3B,QAA2B,CAA3B;;AAMA,IAAMC,UAAU,GAAG,CAAnB,kBAAmB,CAAnB;;AAKA,IAAMC,aAAa,GAAG,CAAtB,UAAsB,CAAtB;;AAKA,IAAMC,WAAW,GAAG,CAAA,eAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAApB,QAAoB,CAApB;;AAeA,IAAMC,YAAY,GAAG,CAAA,cAAA,EAArB,gBAAqB,CAArB","sourcesContent":["import { ImageSourcePropType as RNImageSourcePropType } from 'react-native';\n\nexport type DefaultProps<Props extends object> = {\n  [K in keyof Props]?: Props[K];\n};\n\nexport const borderProps = [\n  'borderColor',\n  'borderTopColor',\n  'borderRightColor',\n  'borderBottomColor',\n  'borderLeftColor',\n  'borderWidth',\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderLeftWidth',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderStyle',\n] as const;\nexport interface BorderPropsType {\n  borderColor?: string;\n  borderTopColor?: string;\n  borderRightColor?: string;\n  borderBottomColor?: string;\n  borderLeftColor?: string;\n  borderWidth?: number;\n  borderTopWidth?: number;\n  borderRightWidth?: number;\n  borderLeftWidth?: number;\n  borderBottomWidth?: number;\n  borderEndWidth?: number;\n  borderStyle?: 'solid' | 'dotted' | 'dashed';\n}\n\nexport const spacingProps = [\n  'm',\n  'mt',\n  'mr',\n  'mb',\n  'ml',\n  'mx',\n  'my',\n  'ms',\n  'p',\n  'pt',\n  'pr',\n  'pb',\n  'pl',\n  'px',\n  'py',\n] as const;\nexport interface SpacingPropsType {\n  m?: string | number;\n  mt?: string | number;\n  mr?: string | number;\n  mb?: string | number;\n  ml?: string | number;\n  mx?: string | number;\n  my?: string | number;\n  ms?: string | number;\n  p?: string | number;\n  pt?: string | number;\n  pr?: string | number;\n  pb?: string | number;\n  pl?: string | number;\n  px?: string | number;\n  py?: string | number;\n}\n\nexport const roundedProps = [\n  'rounded',\n  'roundedTopLeft',\n  'roundedTopRight',\n  'roundedBottomLeft',\n  'roundedBottomRight',\n  'roundedTop',\n  'roundedLeft',\n  'roundedRight',\n  'roundedBottom',\n] as const;\nexport interface RoundedPropsType {\n  rounded?: string | number;\n  roundedTopLeft?: string | number;\n  roundedTopRight?: string | number;\n  roundedBottomLeft?: string | number;\n  roundedBottomRight?: string | number;\n  roundedTop?: string | number;\n  roundedLeft?: string | number;\n  roundedRight?: string | number;\n  roundedBottom?: string | number;\n}\n\nexport const shadowProps = ['shadow', 'shadowColor'] as const;\nexport interface ShadowPropsType {\n  shadow?: string | number;\n  shadowColor?: string;\n}\n\nexport const dimensionProps = [\n  'minH',\n  'minW',\n  'maxH',\n  'maxW',\n  'h',\n  'w',\n] as const;\nexport interface DimensionPropsType {\n  minH?: number | string;\n  minW?: number | string;\n  maxH?: number | string;\n  maxW?: number | string;\n  h?: number | string;\n  w?: number | string;\n}\n\nexport const flexProps = [\n  'row',\n  'flex',\n  'flexDir',\n  'flexWrap',\n  'justifyContent',\n  'alignSelf',\n  'alignItems',\n] as const;\nexport interface FlexPropsType {\n  row?: boolean;\n  flex?: number;\n  flexDir?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n  flexWrap?: 'wrap' | 'nowrap' | 'wrap-reverse';\n  justifyContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n  alignSelf?:\n    | 'auto'\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'stretch'\n    | 'baseline';\n  alignItems?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n}\n\nexport const positionProps = [\n  'position',\n  'top',\n  'right',\n  'bottom',\n  'left',\n] as const;\nexport interface PositionPropsType {\n  position?: 'absolute' | 'relative';\n  top?: number;\n  right?: number;\n  bottom?: number;\n  left?: number;\n}\n\nexport const backgroundProps = ['bg', 'bgImg', 'bgMode'] as const;\nexport interface BackgroundPropsType {\n  bg?: string;\n  bgImg?: RNImageSourcePropType;\n  bgMode?: 'contain' | 'cover' | 'stretch' | 'repeat';\n}\n\nexport const textProps = [\n  'color',\n  'fontSize',\n  'textDecorLine',\n  'textDecorStyle',\n  'fontStyle',\n  'textDecorColor',\n  'fontWeight',\n  'fontFamily',\n  'lineHeight',\n  'textAlign',\n  'textTransform',\n  'letterSpacing',\n  'textAlignVertical',\n] as const;\nexport interface TextPropsType {\n  color?: string;\n  fontSize?: string | number;\n  textDecorLine?:\n    | 'none'\n    | 'underline'\n    | 'line-through'\n    | 'underline line-through';\n  textDecorStyle?: 'solid' | 'double' | 'dotted' | 'dashed';\n  fontStyle?: 'normal' | 'italic';\n  textDecorColor?: string;\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900';\n  fontFamily?: string;\n  lineHeight?: number;\n  textAlign?: 'auto' | 'left' | 'right' | 'center' | 'justify';\n  textTransform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize';\n  letterSpacing?: number;\n  textAlignVertical?: 'auto' | 'top' | 'bottom' | 'center';\n  textDecorationLine?:\n    | 'none'\n    | 'underline'\n    | 'line-through'\n    | 'underline line-through';\n  textDecorationStyle?: 'solid' | 'double' | 'dotted' | 'dashed';\n  textDecorationColor?: string;\n  textShadowColor?: string;\n  textShadowOffset?: { width: number; height: number };\n  textShadowRadius?: number;\n}\n\nexport const opacityProps = ['opacity'] as const;\nexport interface OpacityPropsType {\n  opacity?: number;\n}\n\nexport const overflowProps = ['overflow'] as const;\nexport interface OverflowPropsType {\n  overflow?: 'hidden' | 'visible' | 'scroll';\n}\n\nexport const zIndexProps = ['zIndex'] as const;\nexport interface ZIndexPropsType {\n  zIndex?: number;\n}\n\nexport const loadingProps = ['loading', 'loaderSize', 'loaderColor'] as const;\nexport interface LoadingPropsType {\n  loading?: boolean;\n  loaderSize?: number | string;\n  loaderColor?: string;\n}\n\nexport const preffixSuffixProps = ['preffix', 'suffix'] as const;\nexport interface PrefixSuffixPropsType {\n  suffix?: React.ReactNode;\n  prefix?: React.ReactNode;\n}\n\nexport const inputProps = ['focusBorderColor'] as const;\nexport interface InputPropsType {\n  focusBorderColor?: string;\n}\n\nexport const disabledProps = ['disabled'] as const;\nexport interface DisabledPropsType {\n  disabled?: null | boolean;\n}\n\nexport const buttonProps = [\n  'underlayColor',\n  'block',\n  'borderless',\n  'rippleColor',\n  'ripple',\n] as const;\nexport interface ButtonPropsType {\n  underlayColor?: string;\n  block?: boolean;\n  borderless?: boolean;\n  rippleColor?: string;\n  ripple?: boolean;\n}\n\nexport const overlayProps = ['overlayColor', 'overlayOpacity'] as const;\nexport interface OverlayPropsType {\n  overlayColor?: string;\n  overlayOpacity?: number;\n}\n"]},"metadata":{},"sourceType":"script"}