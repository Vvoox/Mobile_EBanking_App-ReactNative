{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collapse = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utilities = require(\"../../utilities\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _div = require(\"../div/div.component\");\n\nvar _collapseBody = require(\"./collapse.body.component\");\n\nvar _collapseHeader = require(\"./collapse.header.component\");\n\nvar _group = require(\"./group.component\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/collapse/collapse.component.tsx\";\n\nvar Collapse = function Collapse(incomingProps) {\n  var props = (0, _useDefaultProps.useDefaultProps)('Collapse', incomingProps, {\n    bg: 'white',\n    flexDir: 'column',\n    flexWrap: 'nowrap',\n    rounded: 'md',\n    overflow: 'hidden',\n    shadow: 'none',\n    mt: 'md',\n    shadowColor: 'gray900',\n    position: 'relative',\n    bgMode: 'cover',\n    pointerEvents: 'auto',\n    row: false,\n    borderStyle: 'solid',\n    defaultActive: false\n  });\n  var children = props.children,\n      defaultActive = props.defaultActive,\n      active = props.active,\n      onChange = props.onChange,\n      id = props.id,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"children\", \"defaultActive\", \"active\", \"onChange\", \"id\"]);\n\n  var _useState = (0, React.useState)(active !== null && active !== void 0 ? active : defaultActive),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var header = null;\n  var body = null;\n  (0, React.useEffect)(function () {\n    if ('active' in props) {\n      var _props$active;\n\n      setIsActive((_props$active = props.active) !== null && _props$active !== void 0 ? _props$active : false);\n    }\n  }, [props]);\n\n  var changeState = function changeState(newState) {\n    setIsActive(newState);\n\n    if ((0, _utilities.isFunction)(onChange)) {\n      onChange(id);\n    }\n  };\n\n  React.Children.forEach(children, function (child) {\n    if (child.type === _collapseHeader.CollapseHeader) {\n      header = child;\n    } else if (child.type === _collapseBody.CollapseBody) {\n      body = child;\n    }\n  });\n\n  if (header === null) {\n    throw Error(\"header wasn't found to be rendered. Please make sure you have wrapped an Collapse.Header in the Collapse Component.\");\n  }\n\n  header = React.cloneElement(header, {\n    active: isActive,\n    onPress: function onPress() {\n      changeState(!isActive);\n    }\n  });\n  return React.createElement(_div.Div, (0, _extends2.default)({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), header, !!body && React.cloneElement(body, {\n    expanded: !isActive\n  }));\n};\n\nexports.Collapse = Collapse;\nCollapse.Body = _collapseBody.CollapseBody;\nCollapse.Header = _collapseHeader.CollapseHeader;\nCollapse.Group = _group.CollapseGroup;","map":{"version":3,"sources":["collapse.component.tsx"],"names":["Collapse","props","bg","flexDir","flexWrap","rounded","overflow","shadow","mt","shadowColor","position","bgMode","pointerEvents","row","borderStyle","defaultActive","children","active","onChange","id","rest","isActive","setIsActive","header","body","changeState","React","child","CollapseHeader","CollapseBody","Error","onPress","expanded","CollapseGroup"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { isFunction } from '../../utilities';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nimport { Div } from '../div/div.component';\nimport { CollapseBody } from './collapse.body.component';\nimport { CollapseHeader } from './collapse.header.component';\nimport { CollapseProps, CompoundedCollapse } from './collapse.type';\nimport { CollapseGroup } from './group.component';\n\nconst Collapse: CompoundedCollapse<CollapseProps> = (incomingProps) => {\n  const props = useDefaultProps('Collapse', incomingProps, {\n    bg: 'white',\n    flexDir: 'column',\n    flexWrap: 'nowrap',\n    rounded: 'md',\n    overflow: 'hidden',\n    shadow: 'none',\n    mt: 'md',\n    shadowColor: 'gray900',\n    position: 'relative',\n    bgMode: 'cover',\n    pointerEvents: 'auto',\n    row: false,\n    borderStyle: 'solid',\n    defaultActive: false,\n  });\n\n  const { children, defaultActive, active, onChange, id, ...rest } = props;\n  const [isActive, setIsActive] = useState(active ?? defaultActive);\n  let header = null;\n  let body = null;\n\n  useEffect(() => {\n    if ('active' in props) {\n      setIsActive(props.active ?? false);\n    }\n  }, [props]);\n\n  const changeState = (newState: boolean) => {\n    setIsActive(newState);\n\n    if (isFunction(onChange)) {\n      onChange(id);\n    }\n  };\n\n  React.Children.forEach(children, (child) => {\n    // @ts-ignore\n    if (child.type === CollapseHeader) {\n      header = child;\n      // @ts-ignore\n    } else if (child.type === CollapseBody) {\n      body = child;\n    }\n  });\n\n  if (header === null) {\n    throw Error(\n      \"header wasn't found to be rendered. Please make sure you have wrapped an Collapse.Header in the Collapse Component.\"\n    );\n  }\n\n  header = React.cloneElement(header, {\n    active: isActive,\n\n    onPress: () => {\n      changeState(!isActive);\n    },\n  });\n\n  return (\n    <Div {...rest}>\n      {header}\n      {!!body && React.cloneElement(body, { expanded: !isActive })}\n    </Div>\n  );\n};\n\n// Collapse.defaultProps = {\n//   bg: 'white',\n//   flexDir: 'column',\n//   flexWrap: 'nowrap',\n//   rounded: 'md',\n//   overflow: 'hidden',\n//   shadow: 'none',\n//   mt: 'md',\n//   shadowColor: 'gray900',\n//   position: 'relative',\n//   bgMode: 'cover',\n//   pointerEvents: 'auto',\n//   row: false,\n//   borderStyle: 'solid',\n//   defaultActive: false,\n// };\n\nCollapse.Body = CollapseBody;\nCollapse.Header = CollapseHeader;\nCollapse.Group = CollapseGroup;\n\nexport { Collapse };\n"]},"metadata":{},"sourceType":"script"}