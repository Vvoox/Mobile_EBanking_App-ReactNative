{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Radio = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _radio = require(\"./radio.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _icon = require(\"../icon/icon.component\");\n\nvar _theme2 = require(\"../../theme/theme.service\");\n\nvar _radio2 = require(\"./radio.service\");\n\nvar _group = require(\"./group.component\");\n\nvar _utilities = require(\"../../utilities\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/radio/radio.component.tsx\";\n\nvar Radio = function Radio(incomingProps) {\n  var _props$checked;\n\n  var props = (0, _useDefaultProps.useDefaultProps)('Radio', incomingProps, {\n    defaultChecked: false,\n    activeColor: 'blue600',\n    inactiveColor: 'gray500',\n    highlightBg: 'gray300',\n    bg: 'transparent',\n    p: 'none',\n    checked: false,\n    color: 'white',\n    rounded: 'circle',\n    loading: false,\n    disabled: false,\n    loaderSize: '2xl',\n    loaderColor: 'blue600',\n    block: false,\n    position: 'relative',\n    shadowColor: 'gray800',\n    shadow: 0,\n    fontSize: '5xl',\n    borderless: true,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'flex-start',\n    onPress: function onPress() {},\n    flexDir: 'row'\n  });\n  var m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      h = props.h,\n      w = props.w,\n      bg = props.bg,\n      minW = props.minW,\n      minH = props.minH,\n      suffix = props.suffix,\n      style = props.style,\n      fontSize = props.fontSize,\n      fontWeight = props.fontWeight,\n      prefix = props.prefix,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      colorProp = props.color,\n      loading = props.loading,\n      disabled = props.disabled,\n      loaderColor = props.loaderColor,\n      loaderSize = props.loaderSize,\n      children = props.children,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      shadow = props.shadow,\n      borderless = props.borderless,\n      shadowColor = props.shadowColor,\n      block = props.block,\n      alignSelf = props.alignSelf,\n      activeIcon = props.activeIcon,\n      inactiveIcon = props.inactiveIcon,\n      onChange = props.onChange,\n      activeColor = props.activeColor,\n      inactiveColor = props.inactiveColor,\n      defaultChecked = props.defaultChecked,\n      value = props.value,\n      checkedProp = props.checked,\n      onPressProp = props.onPress,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"h\", \"w\", \"bg\", \"minW\", \"minH\", \"suffix\", \"style\", \"fontSize\", \"fontWeight\", \"prefix\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"color\", \"loading\", \"disabled\", \"loaderColor\", \"loaderSize\", \"children\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"shadow\", \"borderless\", \"shadowColor\", \"block\", \"alignSelf\", \"activeIcon\", \"inactiveIcon\", \"onChange\", \"activeColor\", \"inactiveColor\", \"defaultChecked\", \"value\", \"checked\", \"onPress\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = (0, React.useState)((_props$checked = props.checked) !== null && _props$checked !== void 0 ? _props$checked : defaultChecked),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = (0, React.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      focussed = _useState4[0],\n      setFocussed = _useState4[1];\n\n  var computedStyle = (0, _radio.getStyle)(theme, props, {\n    focussed: focussed\n  });\n  (0, React.useEffect)(function () {\n    if ('checked' in props) {\n      setChecked(props.checked);\n    }\n  }, [props]);\n\n  var onPress = function onPress(event) {\n    if (disabled) {\n      return;\n    }\n\n    if (!('checked' in props)) {\n      setChecked(true);\n    }\n\n    if ((0, _utilities.isFunction)(onPressProp)) {\n      onPressProp(event);\n    }\n\n    if ((0, _utilities.isFunction)(onChange)) {\n      onChange(value);\n    }\n  };\n\n  var onPressIn = function onPressIn() {\n    setFocussed(true);\n  };\n\n  var onPressOut = function onPressOut() {\n    setFocussed(false);\n  };\n\n  var iconName = (0, _radio2.getIconName)(checked);\n  var iconColor = (0, _radio2.getIconColor)(checked, disabled, activeColor, inactiveColor, theme);\n\n  var getIcon = function getIcon() {\n    if (loading) {\n      return React.createElement(_reactNative.ActivityIndicator, {\n        size: (0, _theme2.getThemeProperty)(theme.fontSize, fontSize),\n        color: (0, _theme2.getThemeProperty)(theme.colors, loaderColor),\n        style: {\n          zIndex: 2,\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (checked) {\n      if (activeIcon && typeof activeIcon === 'string') {\n        return React.createElement(_icon.Icon, {\n          name: activeIcon,\n          color: iconColor,\n          zIndex: 2,\n          position: \"relative\",\n          fontFamily: \"AntDesign\",\n          fontSize: fontSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (activeIcon) {\n        return activeIcon;\n      }\n    } else {\n      if (inactiveIcon && typeof inactiveIcon === 'string') {\n        return React.createElement(_icon.Icon, {\n          name: inactiveIcon,\n          color: iconColor,\n          zIndex: 2,\n          position: \"relative\",\n          fontFamily: \"AntDesign\",\n          fontSize: fontSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (inactiveIcon) {\n        return inactiveIcon;\n      }\n    }\n\n    return React.createElement(_icon.Icon, {\n      name: iconName,\n      color: iconColor,\n      zIndex: 2,\n      position: \"relative\",\n      fontFamily: \"MaterialIcons\",\n      fontSize: fontSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderChildren = function renderChildren() {\n    if ((0, _utilities.isFunction)(children)) {\n      return children({\n        focussed: focussed,\n        disabled: disabled !== null && disabled !== void 0 ? disabled : false,\n        checked: checked,\n        loading: loading\n      });\n    }\n\n    return React.createElement(React.Fragment, null, prefix, React.createElement(_reactNative.View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, React.createElement(_reactNative.View, {\n      style: computedStyle.highlightContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }), React.createElement(_reactNative.View, {\n      style: computedStyle.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, icon)), children, suffix);\n  };\n\n  var icon = getIcon();\n  return React.createElement(_reactNative.Pressable, (0, _extends2.default)({}, rest, {\n    disabled: disabled !== null && disabled !== void 0 ? disabled : loading,\n    style: computedStyle.button,\n    onPress: disabled ? undefined : onPress,\n    onPressIn: disabled ? undefined : onPressIn,\n    onPressOut: disabled ? undefined : onPressOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }), React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, renderChildren()));\n};\n\nexports.Radio = Radio;\nRadio.Group = _group.RadioGroup;","map":{"version":3,"sources":["radio.component.tsx"],"names":["Radio","props","defaultChecked","activeColor","inactiveColor","highlightBg","bg","p","checked","color","rounded","loading","disabled","loaderSize","loaderColor","block","position","shadowColor","shadow","fontSize","borderless","alignItems","justifyContent","alignSelf","onPress","flexDir","m","mt","mr","mb","ml","ms","pr","pt","pb","pl","h","w","minW","minH","suffix","style","fontWeight","prefix","roundedTop","roundedRight","roundedBottom","roundedLeft","colorProp","children","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","activeIcon","inactiveIcon","onChange","value","checkedProp","onPressProp","rest","theme","ThemeContext","setChecked","focussed","setFocussed","computedStyle","onPressIn","onPressOut","iconName","iconColor","getIcon","zIndex","renderChildren","icon","RadioGroup"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext, useState, useEffect } from 'react';\nimport {\n  View as RNView,\n  ActivityIndicator,\n  GestureResponderEvent as RNGestureResponderEvent,\n  Pressable as RNButton,\n} from 'react-native';\n\nimport { getStyle } from './radio.style';\nimport { ThemeContext } from '../../theme';\nimport { Icon } from '../icon/icon.component';\nimport { getThemeProperty } from '../../theme/theme.service';\nimport { getIconName, getIconColor } from './radio.service';\nimport { RadioProps, CompoundedRadio } from './radio.type';\nimport { RadioGroup } from './group.component';\nimport { isFunction } from '../../utilities';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Radio: CompoundedRadio<RadioProps> = (incomingProps) => {\n  const props = useDefaultProps('Radio', incomingProps, {\n    defaultChecked: false,\n    activeColor: 'blue600',\n    inactiveColor: 'gray500',\n    highlightBg: 'gray300',\n    bg: 'transparent',\n    p: 'none',\n    checked: false,\n    color: 'white',\n    rounded: 'circle',\n    loading: false,\n    disabled: false,\n    loaderSize: '2xl',\n    loaderColor: 'blue600',\n    block: false,\n    position: 'relative',\n    shadowColor: 'gray800',\n    shadow: 0,\n    fontSize: '5xl',\n    borderless: true,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'flex-start',\n    onPress: () => {},\n    flexDir: 'row',\n  });\n\n  const {\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    h,\n    w,\n    bg,\n    minW,\n    minH,\n    suffix,\n    style,\n    fontSize,\n    fontWeight,\n    prefix,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    color: colorProp,\n    loading,\n    disabled,\n    loaderColor,\n    loaderSize,\n    children,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    shadow,\n    borderless,\n    shadowColor,\n    block,\n    alignSelf,\n    activeIcon,\n    inactiveIcon,\n    onChange,\n    activeColor,\n    inactiveColor,\n    defaultChecked,\n    value,\n    checked: checkedProp,\n    onPress: onPressProp,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const [checked, setChecked] = useState(props.checked ?? defaultChecked);\n  const [focussed, setFocussed] = useState(false);\n  const computedStyle = getStyle(theme, props as RadioProps, { focussed });\n\n  useEffect(() => {\n    if ('checked' in props) {\n      setChecked(props.checked);\n    }\n  }, [props]);\n\n  /**\n   * on press radio\n   */\n  const onPress = (event: RNGestureResponderEvent) => {\n    if (disabled) {\n      return;\n    }\n\n    // set the checked to true on press if there is no checked prop pass\n    if (!('checked' in props)) {\n      setChecked(true);\n    }\n\n    if (isFunction(onPressProp)) {\n      onPressProp(event);\n    }\n\n    if (isFunction(onChange)) {\n      onChange(value);\n    }\n  };\n\n  /**\n   * sets focussed to true\n   *\n   * @param event\n   */\n  const onPressIn = () => {\n    setFocussed(true);\n  };\n\n  /**\n   * sets focussed to true\n   *\n   * @param event\n   */\n  const onPressOut = () => {\n    setFocussed(false);\n  };\n\n  const iconName = getIconName(checked);\n  const iconColor = getIconColor(\n    checked,\n    disabled,\n    activeColor,\n    inactiveColor,\n    theme\n  );\n\n  /**\n   * get icon\n   * shows activity indication if loading state is true\n   */\n  const getIcon = () => {\n    if (loading) {\n      return (\n        <ActivityIndicator\n          size={getThemeProperty(theme.fontSize, fontSize)}\n          color={getThemeProperty(theme.colors, loaderColor)}\n          style={{ zIndex: 2, position: 'relative' }}\n        />\n      );\n    }\n\n    if (checked) {\n      if (activeIcon && typeof activeIcon === 'string') {\n        return (\n          <Icon\n            // @ts-ignore\n            name={activeIcon}\n            color={iconColor}\n            zIndex={2}\n            position=\"relative\"\n            fontFamily=\"AntDesign\"\n            fontSize={fontSize}\n          />\n        );\n      }\n\n      if (activeIcon) {\n        return activeIcon;\n      }\n    } else {\n      if (inactiveIcon && typeof inactiveIcon === 'string') {\n        return (\n          <Icon\n            // @ts-ignore\n            name={inactiveIcon}\n            color={iconColor}\n            zIndex={2}\n            position=\"relative\"\n            fontFamily=\"AntDesign\"\n            fontSize={fontSize}\n          />\n        );\n      }\n\n      if (inactiveIcon) {\n        return inactiveIcon;\n      }\n    }\n\n    return (\n      <Icon\n        name={iconName}\n        color={iconColor}\n        zIndex={2}\n        position=\"relative\"\n        fontFamily=\"MaterialIcons\"\n        fontSize={fontSize}\n      />\n    );\n  };\n\n  const renderChildren = () => {\n    if (isFunction(children)) {\n      return children({\n        focussed,\n        disabled: disabled ?? false,\n        checked,\n        loading,\n      });\n    }\n\n    return (\n      <>\n        {prefix}\n        <RNView>\n          <RNView style={computedStyle.highlightContainer} />\n          <RNView style={computedStyle.icon}>{icon}</RNView>\n        </RNView>\n        {children}\n        {suffix}\n      </>\n    );\n  };\n\n  const icon = getIcon();\n\n  return (\n    <RNButton\n      {...rest}\n      disabled={disabled ?? loading}\n      style={computedStyle.button}\n      onPress={disabled ? undefined : onPress}\n      onPressIn={disabled ? undefined : onPressIn}\n      onPressOut={disabled ? undefined : onPressOut}\n    >\n      <RNView style={computedStyle.container}>{renderChildren()}</RNView>\n    </RNButton>\n  );\n};\n\n// Radio.defaultProps = {\n//   defaultChecked: false,\n//   activeColor: 'blue600',\n//   inactiveColor: 'gray500',\n//   highlightBg: 'gray300',\n//   bg: 'transparent',\n//   p: 'none',\n//   color: 'white',\n//   rounded: 'circle',\n//   loading: false,\n//   disabled: false,\n//   loaderSize: '2xl',\n//   loaderColor: 'blue600',\n//   block: false,\n//   position: 'relative',\n//   shadowColor: 'gray800',\n//   shadow: 0,\n//   fontSize: '5xl',\n//   borderless: true,\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   alignSelf: 'flex-start',\n//   onPress: () => {},\n//   flexDir: 'row',\n// };\n\n// passing RadioGroup as part of Radio\nRadio.Group = RadioGroup;\n\nexport { Radio };\n"]},"metadata":{},"sourceType":"script"}