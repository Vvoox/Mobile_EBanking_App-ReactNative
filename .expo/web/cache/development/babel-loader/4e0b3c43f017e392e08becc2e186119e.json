{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Avatar = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _avatar = require(\"./avatar.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _avatarGroup = require(\"./avatar.group.component\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _utilities = require(\"../../utilities\");\n\nvar _types = require(\"../../types\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/avatar/avatar.component.tsx\";\n\nvar Avatar = function Avatar(incomingProps) {\n  var props = (0, _useDefaultProps.useDefaultProps)('Avatar', incomingProps, {\n    bg: 'transparent',\n    size: 48,\n    color: 'gray500',\n    rounded: 'circle',\n    fontSize: 'md',\n    fontWeight: 'bold',\n    shadow: 'none',\n    shadowColor: 'gray500',\n    position: 'relative',\n    zIndex: 1\n  });\n  var bg = props.bg,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      position = props.position,\n      style = props.style,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      children = props.children,\n      borderColor = props.borderColor,\n      color = props.color,\n      fontSize = props.fontSize,\n      size = props.size,\n      alignSelf = props.alignSelf,\n      bottom = props.bottom,\n      left = props.left,\n      right = props.right,\n      top = props.top,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      shadow = props.shadow,\n      shadowColor = props.shadowColor,\n      opacity = props.opacity,\n      zIndex = props.zIndex,\n      source = props.source,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"bg\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"position\", \"style\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"children\", \"borderColor\", \"color\", \"fontSize\", \"size\", \"alignSelf\", \"bottom\", \"left\", \"right\", \"top\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"shadow\", \"shadowColor\", \"opacity\", \"zIndex\", \"source\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _avatar.getStyle)(theme, props);\n\n  var renderContent = function renderContent() {\n    if (source) {\n      return React.createElement(_reactNative.Image, {\n        source: source,\n        style: computedStyle.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (typeof children === 'string') {\n      return React.createElement(_text.Text, (0, _extends2.default)({}, _utilities.getSpecificProps.apply(void 0, [props].concat((0, _toConsumableArray2.default)(_types.textProps))), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }\n      }), children);\n    }\n\n    return children;\n  };\n\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: computedStyle.container\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), renderContent());\n};\n\nexports.Avatar = Avatar;\nAvatar.Group = _avatarGroup.AvatarGroup;","map":{"version":3,"sources":["avatar.component.tsx"],"names":["Avatar","props","bg","size","color","rounded","fontSize","fontWeight","shadow","shadowColor","position","zIndex","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","style","roundedTop","roundedRight","roundedBottom","roundedLeft","children","borderColor","alignSelf","bottom","left","right","top","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","opacity","source","rest","theme","ThemeContext","computedStyle","renderContent","getSpecificProps","textProps","AvatarGroup"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport { View as RNView, Image as RNImage } from 'react-native';\n\nimport { getStyle } from './avatar.style';\nimport { ThemeContext } from '../../theme';\nimport { AvatarGroup } from './avatar.group.component';\nimport { AvatarProps, CompoundedAvatar } from './avatar.type';\nimport { Text } from '../text/text.component';\nimport { getSpecificProps } from '../../utilities';\nimport { textProps } from '../../types';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Avatar: CompoundedAvatar<AvatarProps> = (incomingProps) => {\n  const props = useDefaultProps('Avatar', incomingProps, {\n    bg: 'transparent',\n    size: 48,\n    color: 'gray500',\n    rounded: 'circle',\n    fontSize: 'md',\n    fontWeight: 'bold',\n    shadow: 'none',\n    shadowColor: 'gray500',\n    position: 'relative',\n    zIndex: 1,\n  });\n\n  const {\n    bg,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    position,\n    style,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    children,\n    borderColor,\n    color,\n    fontSize,\n    size,\n    alignSelf,\n    bottom,\n    left,\n    right,\n    top,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    shadow,\n    shadowColor,\n    opacity,\n    zIndex,\n    source,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  /**\n   * render the content based on the props passed\n   */\n  const renderContent = () => {\n    if (source) {\n      return <RNImage source={source} style={computedStyle.image} />;\n    }\n\n    if (typeof children === 'string') {\n      return <Text {...getSpecificProps(props, ...textProps)}>{children}</Text>;\n    }\n\n    return children;\n  };\n\n  return (\n    <RNView style={computedStyle.container} {...rest}>\n      {renderContent()}\n    </RNView>\n  );\n};\n\n// Avatar.defaultProps = {\n//   bg: 'transparent',\n//   size: 48,\n//   color: 'gray500',\n//   rounded: 'circle',\n//   fontSize: 'md',\n//   shadow: 'none',\n//   shadowColor: 'gray500',\n//   position: 'relative',\n//   zIndex: 1,\n// };\n\nAvatar.Group = AvatarGroup;\n\nexport { Avatar };\n"]},"metadata":{},"sourceType":"script"}