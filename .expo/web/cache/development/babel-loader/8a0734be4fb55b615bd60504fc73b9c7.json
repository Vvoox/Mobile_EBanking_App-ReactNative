{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tooltip = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _tooltip = require(\"./tooltip.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _triangle = require(\"./triangle.component\");\n\nvar _utilities = require(\"../../utilities\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/tooltip/tooltip.component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar STATES = {\n  HIDDEN: 'HIDDEN',\n  ANIMATING: 'ANIMATING',\n  SHOWN: 'SHOWN'\n};\n\nvar EASING = _reactNative.Easing.bezier(0.4, 0, 0.2, 1);\n\nvar SCREEN_INDENT = 8;\nvar Tooltip = React.forwardRef(function (incomingProps, ref) {\n  var _StatusBar$currentHei;\n\n  var props = (0, _useDefaultProps.useDefaultProps)('Tooltip', incomingProps, {\n    animationDuration: 300,\n    bg: 'gray900',\n    color: 'white',\n    p: 'md',\n    rounded: 'xl',\n    mx: 'lg',\n    minW: 50,\n    zIndex: 1,\n    fontSize: 'md',\n    useNativeDriver: false\n  });\n  var container = (0, React.useRef)(null);\n\n  var _useStateCallback = (0, _utilities.useStateCallback)({\n    visible: STATES.HIDDEN,\n    top: 0,\n    left: 0,\n    menuWidth: 0,\n    menuHeight: 0,\n    buttonWidth: 0,\n    buttonHeight: 0,\n    marginAnimation: new _reactNative.Animated.Value(-8),\n    opacityAnimation: new _reactNative.Animated.Value(0)\n  }),\n      _useStateCallback2 = (0, _slicedToArray2.default)(_useStateCallback, 2),\n      state = _useStateCallback2[0],\n      setState = _useStateCallback2[1];\n\n  var visible = state.visible,\n      menuHeight = state.menuHeight,\n      buttonHeight = state.buttonHeight,\n      opacityAnimation = state.opacityAnimation,\n      marginAnimation = state.marginAnimation;\n  var top = state.top;\n  var windowHeight = _utilities.WINDOW_HEIGHT - ((_StatusBar$currentHei = _reactNative.StatusBar.currentHeight) !== null && _StatusBar$currentHei !== void 0 ? _StatusBar$currentHei : 0);\n  var invert = false;\n\n  if (top + menuHeight + buttonHeight + SCREEN_INDENT > windowHeight) {\n    top = top - menuHeight - SCREEN_INDENT;\n    invert = true;\n  } else if (top < SCREEN_INDENT) {\n    top = SCREEN_INDENT + buttonHeight;\n  } else {\n    top = top + buttonHeight + SCREEN_INDENT;\n    invert = false;\n  }\n\n  var shadowMenuContainerStyle = {\n    opacity: opacityAnimation,\n    top: top,\n    marginTop: marginAnimation\n  };\n  var text = props.text,\n      style = props.style,\n      children = props.children,\n      bg = props.bg,\n      animationDuration = props.animationDuration,\n      useNativeDriver = props.useNativeDriver,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"text\", \"style\", \"children\", \"bg\", \"animationDuration\", \"useNativeDriver\"]);\n  var animationStarted = visible === STATES.ANIMATING;\n  var modalVisible = visible === STATES.SHOWN || animationStarted;\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _tooltip.getStyle)(theme, props, _objectSpread(_objectSpread({}, state), {}, {\n    invert: invert\n  }));\n\n  var onDismiss = function onDismiss() {};\n\n  var _show = function show() {\n    if (container.current) {\n      container.current.measureInWindow(function (left, top, buttonWidth, buttonHeight) {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          buttonHeight: buttonHeight,\n          buttonWidth: buttonWidth,\n          left: left,\n          visible: STATES.SHOWN,\n          top: top\n        }), function () {\n          _reactNative.Animated.parallel([_reactNative.Animated.timing(state.marginAnimation, {\n            toValue: 0,\n            duration: animationDuration,\n            easing: EASING,\n            useNativeDriver: useNativeDriver\n          }), _reactNative.Animated.timing(state.opacityAnimation, {\n            toValue: 1,\n            duration: animationDuration,\n            easing: EASING,\n            useNativeDriver: useNativeDriver\n          })]).start();\n        });\n      });\n    }\n  };\n\n  var _hide = function hide() {\n    _reactNative.Animated.timing(state.opacityAnimation, {\n      toValue: 0,\n      duration: animationDuration,\n      easing: EASING,\n      useNativeDriver: useNativeDriver\n    }).start(function () {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        visible: STATES.HIDDEN,\n        marginAnimation: new _reactNative.Animated.Value(-8),\n        opacityAnimation: new _reactNative.Animated.Value(0)\n      }));\n    });\n  };\n\n  (0, React.useImperativeHandle)(ref, function () {\n    return {\n      show: function show() {\n        _show();\n      },\n      hide: function hide() {\n        _hide();\n      }\n    };\n  });\n  return React.createElement(_reactNative.View, {\n    ref: container,\n    onLayout: function onLayout() {\n      return null;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, children), React.createElement(_reactNative.Modal, {\n    visible: modalVisible,\n    onRequestClose: _hide,\n    supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'],\n    transparent: true,\n    onDismiss: onDismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n    onPress: _hide,\n    accessible: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.absoluteFill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, React.createElement(_reactNative.Animated.View, {\n    style: [styles.shadowMenuContainer, shadowMenuContainerStyle, style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, React.createElement(_triangle.Triangle, {\n    invert: invert,\n    style: computedStyle.triangle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }), React.createElement(_reactNative.Animated.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, typeof text === 'string' ? React.createElement(_text.Text, (0, _extends2.default)({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), text) : text))))));\n});\nexports.Tooltip = Tooltip;\n\nvar styles = _reactNative.StyleSheet.create({\n  shadowMenuContainer: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: 4,\n    opacity: 0,\n    width: '100%'\n  },\n  menuContainer: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["tooltip.component.tsx"],"names":["STATES","HIDDEN","ANIMATING","SHOWN","EASING","Easing","SCREEN_INDENT","Tooltip","React","props","animationDuration","bg","color","p","rounded","mx","minW","zIndex","fontSize","useNativeDriver","container","state","setState","visible","top","left","menuWidth","menuHeight","buttonWidth","buttonHeight","marginAnimation","Animated","opacityAnimation","windowHeight","WINDOW_HEIGHT","StatusBar","invert","shadowMenuContainerStyle","opacity","marginTop","text","style","children","rest","animationStarted","modalVisible","theme","ThemeContext","computedStyle","onDismiss","show","toValue","duration","easing","hide","StyleSheet","styles","shadowMenuContainer","position","backgroundColor","borderRadius","width","menuContainer","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useRef, useImperativeHandle, useContext } from 'react';\nimport {\n  View,\n  Modal,\n  Easing,\n  Animated,\n  StatusBar,\n  StyleSheet,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nimport { getStyle } from './tooltip.style';\nimport { ThemeContext } from '../../theme';\nimport { Text } from '../text/text.component';\nimport { Triangle } from './triangle.component';\nimport { TooltipProps, TooltipRef } from './tooltip.type';\nimport { useStateCallback, WINDOW_HEIGHT } from '../../utilities';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst STATES = {\n  HIDDEN: 'HIDDEN',\n  ANIMATING: 'ANIMATING',\n  SHOWN: 'SHOWN',\n};\n\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\nconst SCREEN_INDENT = 8;\n\nconst Tooltip = React.forwardRef<\n  TooltipRef,\n  React.PropsWithChildren<TooltipProps>\n>((incomingProps, ref) => {\n  const props = useDefaultProps('Tooltip', incomingProps, {\n    animationDuration: 300,\n    bg: 'gray900',\n    color: 'white',\n    p: 'md',\n    rounded: 'xl',\n    mx: 'lg',\n    minW: 50,\n    zIndex: 1,\n    fontSize: 'md',\n    useNativeDriver: false,\n  });\n\n  const container = useRef<View>(null);\n  const [state, setState] = useStateCallback({\n    visible: STATES.HIDDEN,\n    top: 0,\n    left: 0,\n    menuWidth: 0,\n    menuHeight: 0,\n    buttonWidth: 0,\n    buttonHeight: 0,\n    marginAnimation: new Animated.Value(-8),\n    opacityAnimation: new Animated.Value(0),\n  });\n  const {\n    visible,\n    menuHeight,\n    buttonHeight,\n    opacityAnimation,\n    marginAnimation,\n  } = state;\n  let { top } = state;\n  const windowHeight = WINDOW_HEIGHT - (StatusBar.currentHeight ?? 0);\n  let invert = false;\n  if (top + menuHeight + buttonHeight + SCREEN_INDENT > windowHeight) {\n    top = top - menuHeight - SCREEN_INDENT;\n    invert = true;\n  } else if (top < SCREEN_INDENT) {\n    top = SCREEN_INDENT + buttonHeight;\n  } else {\n    top = top + buttonHeight + SCREEN_INDENT;\n    invert = false;\n  }\n  const shadowMenuContainerStyle = {\n    opacity: opacityAnimation,\n    top,\n    marginTop: marginAnimation,\n  };\n  const {\n    text,\n    style,\n    children,\n    bg,\n    animationDuration,\n    useNativeDriver,\n    ...rest\n  } = props;\n  const animationStarted = visible === STATES.ANIMATING;\n  const modalVisible = visible === STATES.SHOWN || animationStarted;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props, {\n    ...state,\n    invert,\n  });\n\n  /**\n   * on dismissal of tooltip\n   *\n   * TODO: add onDismiss event\n   */\n  const onDismiss = () => {};\n\n  /**\n   * shows the tooltip\n   */\n  const show = () => {\n    if (container.current) {\n      container.current.measureInWindow(\n        (left: any, top: any, buttonWidth: any, buttonHeight: any) => {\n          setState(\n            {\n              ...state,\n              buttonHeight,\n              buttonWidth,\n              left,\n              visible: STATES.SHOWN,\n              top,\n            },\n            () => {\n              Animated.parallel([\n                Animated.timing(state.marginAnimation, {\n                  toValue: 0,\n                  duration: animationDuration,\n                  easing: EASING,\n                  useNativeDriver: useNativeDriver!,\n                }),\n                Animated.timing(state.opacityAnimation, {\n                  toValue: 1,\n                  duration: animationDuration,\n                  easing: EASING,\n                  useNativeDriver: useNativeDriver!,\n                }),\n              ]).start();\n            }\n          );\n        }\n      );\n    }\n  };\n\n  /**\n   * hides the tooltip\n   *\n   * @param onHidden\n   */\n  const hide = () => {\n    Animated.timing(state.opacityAnimation, {\n      toValue: 0,\n      duration: animationDuration,\n      easing: EASING,\n      useNativeDriver: useNativeDriver!,\n    }).start(() => {\n      setState({\n        ...state,\n        visible: STATES.HIDDEN,\n        marginAnimation: new Animated.Value(-8),\n        opacityAnimation: new Animated.Value(0),\n      });\n    });\n  };\n\n  /**\n   * exposing functions to parent\n   */\n  useImperativeHandle(ref, () => ({\n    show() {\n      show();\n    },\n    hide() {\n      hide();\n    },\n  }));\n\n  return (\n    <View ref={container} onLayout={() => null}>\n      <View>{children}</View>\n      <Modal\n        visible={modalVisible}\n        onRequestClose={hide}\n        supportedOrientations={[\n          'portrait',\n          'portrait-upside-down',\n          'landscape',\n          'landscape-left',\n          'landscape-right',\n        ]}\n        transparent\n        onDismiss={onDismiss}\n      >\n        <TouchableWithoutFeedback onPress={hide} accessible={false}>\n          <View style={StyleSheet.absoluteFill}>\n            <Animated.View\n              style={[\n                styles.shadowMenuContainer,\n                shadowMenuContainerStyle,\n                style,\n              ]}\n            >\n              <Triangle invert={invert} style={computedStyle.triangle} />\n              <Animated.View style={computedStyle.container}>\n                {typeof text === 'string' ? (\n                  <Text {...rest}>{text}</Text>\n                ) : (\n                  text\n                )}\n              </Animated.View>\n            </Animated.View>\n          </View>\n        </TouchableWithoutFeedback>\n      </Modal>\n    </View>\n  );\n});\n\n// Tooltip.defaultProps = {\n//   animationDuration: 300,\n//   bg: 'gray900',\n//   color: 'white',\n//   p: 'md',\n//   rounded: 'xl',\n//   mx: 'lg',\n//   minW: 50,\n//   zIndex: 1,\n//   fontSize: 'md',\n//   useNativeDriver: false,\n// };\n\nconst styles = StyleSheet.create({\n  shadowMenuContainer: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: 4,\n    opacity: 0,\n    width: '100%',\n  },\n  menuContainer: {\n    overflow: 'hidden',\n  },\n});\n\nexport { Tooltip };\n"]},"metadata":{},"sourceType":"script"}