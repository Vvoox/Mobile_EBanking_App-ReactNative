{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-elements/src/checkbox/CheckBoxIcon.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getIconType from \"../helpers/getIconType\";\n\nvar CheckBoxIcon = function CheckBoxIcon(_ref) {\n  var checked = _ref.checked,\n      onIconPress = _ref.onIconPress,\n      onLongIconPress = _ref.onLongIconPress,\n      size = _ref.size,\n      checkedIcon = _ref.checkedIcon,\n      uncheckedIcon = _ref.uncheckedIcon,\n      iconType = _ref.iconType,\n      checkedColor = _ref.checkedColor,\n      uncheckedColor = _ref.uncheckedColor;\n\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  var VectorIcon = iconType ? getIconType(iconType) : getIconType('font-awesome');\n  return React.createElement(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string\n};\nexport default CheckBoxIcon;","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/node_modules/react-native-elements/src/checkbox/CheckBoxIcon.js"],"names":["React","PropTypes","getIconType","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","minWidth","propTypes","bool","func","number","oneOfType","string","element"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,WAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAUf;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,eAOI,QAPJA,eAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,cACI,QADJA,cACI;;AACJ,MAAIR,OAAO,IAAIJ,KAAK,CAACa,cAAN,CAAqBL,WAArB,CAAf,EAAkD;AAChD,WAAOA,WAAP;AACD;;AAED,MAAI,CAACJ,OAAD,IAAYJ,KAAK,CAACa,cAAN,CAAqBJ,aAArB,CAAhB,EAAqD;AACnD,WAAOA,aAAP;AACD;;AAED,MAAMK,UAAU,GAAGJ,QAAQ,GACvBR,WAAW,CAACQ,QAAD,CADY,GAEvBR,WAAW,CAAC,cAAD,CAFf;AAIA,SACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEE,OAAO,GAAGO,YAAH,GAAkBC,cADlC;AAEE,IAAA,IAAI,EAAER,OAAO,GAAGI,WAAH,GAAiBC,aAFhC;AAGE,IAAA,IAAI,EAAEF,IAAI,IAAI,EAHhB;AAIE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAER,IAAI,IAAI;AAApB,KAJT;AAKE,IAAA,WAAW,EAAED,eALf;AAME,IAAA,OAAO,EAAED,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAjCD;;AAmCAF,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,OAAO,EAAEH,SAAS,CAACgB,IADI;AAEvBZ,EAAAA,WAAW,EAAEJ,SAAS,CAACiB,IAFA;AAGvBZ,EAAAA,eAAe,EAAEL,SAAS,CAACiB,IAHJ;AAIvBX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAJO;AAKvBX,EAAAA,WAAW,EAAEP,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACoB,MAAX,EAAmBpB,SAAS,CAACqB,OAA7B,CAApB,CALU;AAMvBb,EAAAA,aAAa,EAAER,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACoB,MAAX,EAAmBpB,SAAS,CAACqB,OAA7B,CAApB,CANQ;AAOvBZ,EAAAA,QAAQ,EAAET,SAAS,CAACoB,MAPG;AAQvBV,EAAAA,YAAY,EAAEV,SAAS,CAACoB,MARD;AASvBT,EAAAA,cAAc,EAAEX,SAAS,CAACoB;AATH,CAAzB;AAYA,eAAelB,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport getIconType from '../helpers/getIconType';\n\nconst CheckBoxIcon = ({\n  checked,\n  onIconPress,\n  onLongIconPress,\n  size,\n  checkedIcon,\n  uncheckedIcon,\n  iconType,\n  checkedColor,\n  uncheckedColor,\n}) => {\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  const VectorIcon = iconType\n    ? getIconType(iconType)\n    : getIconType('font-awesome');\n\n  return (\n    <VectorIcon\n      color={checked ? checkedColor : uncheckedColor}\n      name={checked ? checkedIcon : uncheckedIcon}\n      size={size || 24}\n      style={{ minWidth: size || 24 }}\n      onLongPress={onLongIconPress}\n      onPress={onIconPress}\n    />\n  );\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string,\n};\n\nexport default CheckBoxIcon;\n"]},"metadata":{},"sourceType":"module"}