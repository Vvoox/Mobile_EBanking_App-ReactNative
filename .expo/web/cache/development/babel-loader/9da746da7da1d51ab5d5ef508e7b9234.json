{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/views/ComptesScreen.tsx\";\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"../components/Themed\";\nimport { useEffect } from \"react\";\nimport { Body, Card, CardItem, Container, Content, Left, List, ListItem, Thumbnail } from \"native-base\";\nimport { Div } from \"react-native-magnus\";\nimport images from \"../images\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { fetchComptes } from \"../services/form-service\";\nimport { getComptes } from \"../redux/actions/compte-actions\";\n\nvar ComptesList = function ComptesList(_ref) {\n  var navigation = _ref.navigation,\n      creanciers = _ref.creanciers,\n      fetchAllCreanciers = _ref.fetchAllCreanciers;\n  useEffect(function () {\n    fetchAllCreanciers().then(function () {\n      return console.log(\"Fetched Creanciers 1\", creanciers);\n    }).catch(function (e) {\n      return console.log(\"Error\", e);\n    });\n  }, []);\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, React.createElement(Content, {\n    padder: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(CardItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(Thumbnail, {\n    style: styles.thumbnail,\n    source: require(\"../assets/icons/services.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Les Creancier\"), React.createElement(Text, {\n    note: true,\n    style: styles.dispo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Notre service externe desponible que vous pouvez obtenir votre facture et le payer. \"))))), React.createElement(Div, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), creanciers && creanciers.length === 0 && React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 49\n    }\n  }, \"Aucun creancier ajout\\xE9.\"), React.createElement(List, {\n    style: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, creanciers && creanciers.map(function (creancier, key) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: key,\n      onPress: function onPress() {\n        return navigation.push('CreancesScreen', {\n          creancier: creancier,\n          navigate: navigation.navigate\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(Left, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      style: styles.logo,\n      source: images[creancier.codeCreancier].uri,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), React.createElement(Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.titleCreancier,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, creancier.name), React.createElement(Text, {\n      note: true,\n      style: styles.sous,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, creancier.codeCreancier))));\n  }))));\n};\n\nvar mapStateToCreanciListProps = function mapStateToCreanciListProps(state) {\n  return {\n    creanciers: state.client.creanciers\n  };\n};\n\nvar mapDispatchToComptesProps = function mapDispatchToComptesProps(dispatch) {\n  return bindActionCreators({\n    getComptes: getComptes\n  }, dispatch);\n};\n\nexport var CreancierListState = connect(mapDispatchToComptesProps, {\n  fetchComptes: fetchComptes\n})(ComptesList);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/views/ComptesScreen.tsx"],"names":["React","Text","useEffect","Body","Card","CardItem","Container","Content","Left","List","ListItem","Thumbnail","Div","images","bindActionCreators","connect","fetchComptes","getComptes","ComptesList","navigation","creanciers","fetchAllCreanciers","then","console","log","catch","e","styles","thumbnail","require","title","dispo","height","length","textAlign","list","map","creancier","key","push","navigate","logo","codeCreancier","uri","titleCreancier","name","sous","mapStateToCreanciListProps","state","client","mapDispatchToComptesProps","dispatch","CreancierListState","StyleSheet","create","container","flex","alignItems","justifyContent","fontSize","fontWeight","separator","marginVertical","width"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Image, StyleSheet} from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport {useEffect} from \"react\";\nimport {Body, Card, CardItem, Container, Content, Left, List, ListItem, Thumbnail} from \"native-base\";\nimport {Div} from \"react-native-magnus\";\nimport {Creancier} from \"../entities/creancier\";\nimport images from \"../images\";\nimport {bindActionCreators} from \"redux\";\nimport {getCreanciers} from \"../redux/actions/creanciers-actions\";\nimport {connect} from \"react-redux\";\nimport {fetchAllCreanciers} from \"../services/factures-service\";\nimport {fetchComptes} from \"../services/form-service\";\nimport {getComptes} from \"../redux/actions/compte-actions\";\n\nconst ComptesList = ({navigation, creanciers , fetchAllCreanciers }: any) => {\n\n  useEffect(\n      () => {\n        fetchAllCreanciers().then(()=> console.log(\"Fetched Creanciers 1\", creanciers))\n            .catch((e:any)=> console.log(\"Error\", e));\n      }, []);\n  return <Container>\n    <Content padder>\n\n      <Card>\n        <CardItem>\n          <Left>\n            <Thumbnail style={styles.thumbnail} source={require('../assets/icons/services.png')} />\n            <Body>\n              <Text style={styles.title}>Les Creancier</Text>\n              <Text note style={styles.dispo}>Notre service externe desponible que vous pouvez obtenir votre facture et le payer. </Text>\n            </Body>\n          </Left>\n        </CardItem>\n      </Card>\n      <Div style={{height: 20}}/>\n      {creanciers && creanciers.length === 0 && <Text style={{textAlign: 'center'}}>\n        Aucun creancier ajouté.\n      </Text>}\n      <List style={styles.list}>\n        {creanciers && creanciers.map((creancier: Creancier, key: any) =>\n            <ListItem button key={key}\n                      onPress={() => navigation.push('CreancesScreen', {creancier, navigate: navigation.navigate})}>\n              <Left>\n                <Image style={styles.logo} source={images[creancier.codeCreancier].uri} />\n                <Body>\n                  <Text style={styles.titleCreancier}>{creancier.name}</Text>\n                  <Text note style={styles.sous}>{creancier.codeCreancier}</Text>\n                </Body>\n              </Left>\n            </ListItem>\n        )}\n      </List>\n    </Content>\n  </Container>\n}\n\nconst mapStateToCreanciListProps = (state: any) => ({\n  creanciers: state.client.creanciers\n});\n\nconst mapDispatchToComptesProps = (dispatch: any) => (\n    bindActionCreators({\n      getComptes,\n    }, dispatch)\n);\n\nexport const CreancierListState = connect(mapDispatchToComptesProps, {fetchComptes})(ComptesList);\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}