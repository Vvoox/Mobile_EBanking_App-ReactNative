{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props) {\n  var computedStyle = {};\n  computedStyle.div = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    flexDirection: props.row ? 'row' : props.flexDir,\n    flexWrap: props.flexWrap,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent,\n    height: props.h,\n    width: props.w,\n    minWidth: props.minW,\n    minHeight: props.minH,\n    alignSelf: props.alignSelf,\n    maxWidth: props.maxW,\n    maxHeight: props.maxH,\n    opacity: props.opacity,\n    overflow: props.overflow,\n    zIndex: props.zIndex,\n    borderStyle: props.borderStyle,\n    backgroundColor: (0, _theme.getThemeProperty)(theme.colors, props.bg),\n    flex: props.flex\n  }, (0, _theme.createPositionStyle)(props)), (0, _theme.createShadowStyles)(props, theme)), (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createSpacingStyles)(props, theme.spacing)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n  computedStyle.image = _objectSpread({}, (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n\n  if (props.style) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["div.style.tsx"],"names":["getStyle","computedStyle","flexDirection","props","flexWrap","alignItems","justifyContent","height","width","minWidth","minHeight","alignSelf","maxWidth","maxHeight","opacity","overflow","zIndex","borderStyle","backgroundColor","theme","flex","StyleSheet"],"mappings":";;;;;;;sDAAA,uC;;;;AAGA,IAAA,MAAA,GAAA,OAAA,6BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBO;;AAAA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,KAAXA,EAAW,KAAXA,EAAkD;AAC7D,MAAMC,aAAkB,GAAxB,EAAA;AAEAA,EAAAA,aAAa,CAAbA,GAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA;AACEC,IAAAA,aAAa,EAAEC,KAAK,CAALA,GAAAA,GAAAA,KAAAA,GAAoBA,KAAK,CAD1CF,OAAAA;AAEEG,IAAAA,QAAQ,EAAED,KAAK,CAFjBF,QAAAA;AAGEI,IAAAA,UAAU,EAAEF,KAAK,CAHnBF,UAAAA;AAIEK,IAAAA,cAAc,EAAEH,KAAK,CAJvBF,cAAAA;AAKEM,IAAAA,MAAM,EAAEJ,KAAK,CALfF,CAAAA;AAMEO,IAAAA,KAAK,EAAEL,KAAK,CANdF,CAAAA;AAOEQ,IAAAA,QAAQ,EAAEN,KAAK,CAPjBF,IAAAA;AAQES,IAAAA,SAAS,EAAEP,KAAK,CARlBF,IAAAA;AASEU,IAAAA,SAAS,EAAER,KAAK,CATlBF,SAAAA;AAUEW,IAAAA,QAAQ,EAAET,KAAK,CAVjBF,IAAAA;AAWEY,IAAAA,SAAS,EAAEV,KAAK,CAXlBF,IAAAA;AAYEa,IAAAA,OAAO,EAAEX,KAAK,CAZhBF,OAAAA;AAaEc,IAAAA,QAAQ,EAAEZ,KAAK,CAbjBF,QAAAA;AAcEe,IAAAA,MAAM,EAAEb,KAAK,CAdfF,MAAAA;AAeEgB,IAAAA,WAAW,EAAEd,KAAK,CAfpBF,WAAAA;AAgBEiB,IAAAA,eAAe,EAAE,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBC,KAAK,CAAtB,MAAA,EAA+BhB,KAAK,CAhBvDF,EAgBmB,CAhBnBA;AAiBEmB,IAAAA,IAAI,EAAEjB,KAAK,CAjBbF;AAAAA,GAAAA,EAkBK,CAAA,GAAA,MAAA,CAAA,mBAAA,EAlBLA,KAkBK,CAlBLA,CAAAA,EAmBK,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,KAAA,EAnBLA,KAmBK,CAnBLA,CAAAA,EAoBK,CAAA,GAAA,MAAA,CAAA,uBAAA,EApBLA,KAoBK,CApBLA,CAAAA,EAqBK,CAAA,GAAA,MAAA,CAAA,mBAAA,EAAA,KAAA,EAA2BkB,KAAK,CArBrClB,OAqBK,CArBLA,CAAAA,EAsBK,CAAA,GAAA,MAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BkB,KAAK,CAtBzClB,MAsBK,CAtBLA,CAAAA,EAuBK,CAAA,GAAA,MAAA,CAAA,wBAAA,EAAA,KAAA,EAAgCkB,KAAK,CAvB1ClB,YAuBK,CAvBLA,CAAAA;AA0BAA,EAAAA,aAAa,CAAbA,KAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACK,CAAA,GAAA,MAAA,CAAA,wBAAA,EAAA,KAAA,EAAgCkB,KAAK,CAD1ClB,YACK,CADLA,CAAAA;;AAKA,MAAIE,KAAK,CAAT,KAAA,EAAiB;AACfF,IAAAA,aAAa,CAAbA,GAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,GAAAA,CAAAA,EAGKE,KAAK,CAHVF,KAAAA,CAAAA;AAOF;;AAAA,SAAOoB,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAP,aAAOA,CAAP;AA1CK,CAAA","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport {\n  getThemeProperty,\n  createShadowStyles,\n  createPositionStyle,\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n} from '../../theme/theme.service';\nimport { DivProps } from './div.type';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: DivProps) => {\n  const computedStyle: any = {};\n\n  computedStyle.div = {\n    flexDirection: props.row ? 'row' : props.flexDir,\n    flexWrap: props.flexWrap,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent,\n    height: props.h,\n    width: props.w,\n    minWidth: props.minW,\n    minHeight: props.minH,\n    alignSelf: props.alignSelf,\n    maxWidth: props.maxW,\n    maxHeight: props.maxH,\n    opacity: props.opacity,\n    overflow: props.overflow,\n    zIndex: props.zIndex,\n    borderStyle: props.borderStyle,\n    backgroundColor: getThemeProperty(theme.colors, props.bg),\n    flex: props.flex,\n    ...createPositionStyle(props),\n    ...createShadowStyles(props, theme),\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.image = {\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  // merging custom style props to computed style\n  if (props.style) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      // @ts-ignore\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}