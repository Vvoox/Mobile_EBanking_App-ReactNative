{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIconColor = exports.getIconName = void 0;\n\nvar _theme = require(\"../../theme/theme.service\");\n\nvar getIconName = function getIconName() {\n  var checked = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  switch (true) {\n    case checked:\n      return 'radio-button-checked';\n\n    default:\n      return 'radio-button-unchecked';\n  }\n};\n\nexports.getIconName = getIconName;\n\nvar getIconColor = function getIconColor(checked, disabled, activeColor, inactiveColor, theme) {\n  switch (true) {\n    case disabled:\n      return (0, _theme.getThemeProperty)(theme.colors, inactiveColor);\n\n    case checked:\n      return (0, _theme.getThemeProperty)(theme.colors, activeColor);\n\n    default:\n      return (0, _theme.getThemeProperty)(theme.colors, inactiveColor);\n  }\n};\n\nexports.getIconColor = getIconColor;","map":{"version":3,"sources":["radio.service.tsx"],"names":["getIconName","checked","getIconColor","theme"],"mappings":";;;;;AACA,IAAA,MAAA,GAAA,OAAA,6BAAA;;AAOO,IAAMA,WAAW,GAAXA,SAAAA,WAAAA,GAA4C;AAA7BC,MAAAA,OAA6B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAV,KAAnBA;;AAC1B,UAAA,IAAA;AACE,SAAA,OAAA;AACE,aAAA,sBAAA;;AACF;AACE,aAJJ,wBAII;AAJJ;AADK,CAAA;;;;AAeA,IAAMC,YAAY,GAAZA,SAAAA,YAAAA,CAAe,OAAfA,EAAe,QAAfA,EAAe,WAAfA,EAAe,aAAfA,EAAe,KAAfA,EAMR;AACH,UAAA,IAAA;AACE,SAAA,QAAA;AACE,aAAO,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBC,KAAK,CAAtB,MAAA,EAAP,aAAO,CAAP;;AACF,SAAA,OAAA;AACE,aAAO,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBA,KAAK,CAAtB,MAAA,EAAP,WAAO,CAAP;;AACF;AACE,aAAO,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBA,KAAK,CAAtB,MAAA,EANX,aAMW,CAAP;AANJ;AAPK,CAAA","sourcesContent":["import { ThemeType } from '../../theme';\nimport { getThemeProperty } from '../../theme/theme.service';\n\n/**\n * get icon name to be used based on checked state\n *\n * @param checked\n */\nexport const getIconName = (checked: boolean = false) => {\n  switch (true) {\n    case checked:\n      return 'radio-button-checked';\n    default:\n      return 'radio-button-unchecked';\n  }\n};\n\n/**\n * get icon color based on state\n *\n * @param checked\n * @param disabled\n */\nexport const getIconColor = (\n  checked: any,\n  disabled: any,\n  activeColor: any,\n  inactiveColor: any,\n  theme: ThemeType\n) => {\n  switch (true) {\n    case disabled:\n      return getThemeProperty(theme.colors, inactiveColor);\n    case checked:\n      return getThemeProperty(theme.colors, activeColor);\n    default:\n      return getThemeProperty(theme.colors, inactiveColor);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}