{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Drawer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeModal = _interopRequireDefault(require(\"react-native-modal\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _drawer = require(\"./drawer.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _theme2 = require(\"../../theme/theme.service\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/drawer/drawer.component.tsx\";\nvar Drawer = React.forwardRef(function (incomingProps, ref) {\n  var props = (0, _useDefaultProps.useDefaultProps)('Drawer', incomingProps, {\n    drawerPercentage: 70,\n    animationTime: 300,\n    bg: 'white',\n    backdropColor: 'black',\n    direction: 'left',\n    rounded: 'none',\n    backdropTransitionOutTiming: 0\n  });\n  var direction = props.direction,\n      drawerPercentage = props.drawerPercentage,\n      animationTime = props.animationTime,\n      backdropColor = props.backdropColor,\n      animationInTiming = props.animationInTiming,\n      animationIn = props.animationIn,\n      animationOut = props.animationOut,\n      onBackdropPress = props.onBackdropPress,\n      isVisible = props.isVisible,\n      animationOutTiming = props.animationOutTiming,\n      swipeDirection = props.swipeDirection,\n      onSwipeComplete = props.onSwipeComplete,\n      children = props.children,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"direction\", \"drawerPercentage\", \"animationTime\", \"backdropColor\", \"animationInTiming\", \"animationIn\", \"animationOut\", \"onBackdropPress\", \"isVisible\", \"animationOutTiming\", \"swipeDirection\", \"onSwipeComplete\", \"children\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _drawer.getStyle)(theme, props);\n\n  var _useState = (0, React.useState)(isVisible),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  (0, React.useEffect)(function () {\n    if ('isVisible' in props) {\n      var _props$isVisible;\n\n      setVisible((_props$isVisible = props.isVisible) !== null && _props$isVisible !== void 0 ? _props$isVisible : false);\n    }\n  }, [props, visible]);\n  (0, React.useImperativeHandle)(ref, function () {\n    return {\n      open: function open() {\n        setVisible(true);\n      },\n      close: function close() {\n        setVisible(false);\n      }\n    };\n  });\n  return React.createElement(_reactNativeModal.default, (0, _extends2.default)({\n    isVisible: visible,\n    onSwipeComplete: function onSwipeComplete() {\n      return setVisible(false);\n    },\n    swipeDirection: direction === 'left' ? 'left' : 'right',\n    backdropColor: (0, _theme2.getThemeProperty)(theme.colors, backdropColor),\n    animationInTiming: animationInTiming ? animationInTiming : animationTime,\n    animationOutTiming: animationOutTiming ? animationOutTiming : animationTime,\n    animationIn: direction === 'left' ? 'slideInLeft' : 'slideInRight',\n    animationOut: direction === 'left' ? 'slideOutLeft' : 'slideOutRight',\n    onBackdropPress: 'onBackdropPress' in props ? onBackdropPress : function () {\n      return setVisible(false);\n    },\n    style: computedStyle.drawer\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.SafeAreaView, {\n    style: computedStyle.safeView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, children)));\n});\nexports.Drawer = Drawer;","map":{"version":3,"sources":["drawer.component.tsx"],"names":["Drawer","React","props","drawerPercentage","animationTime","bg","backdropColor","direction","rounded","backdropTransitionOutTiming","animationInTiming","animationIn","animationOut","onBackdropPress","isVisible","animationOutTiming","swipeDirection","onSwipeComplete","children","rest","theme","ThemeContext","computedStyle","visible","setVisible","open","close"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Modal from 'react-native-modal';\nimport { SafeAreaView, View } from 'react-native';\nimport { useContext, useState, useImperativeHandle, useEffect } from 'react';\n\nimport { getStyle } from './drawer.style';\nimport { ThemeContext } from '../../theme';\nimport { DrawerProps, DrawerRef } from './drawer.type';\nimport { getThemeProperty } from '../../theme/theme.service';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Drawer = React.forwardRef<DrawerRef, DrawerProps>(\n  (incomingProps, ref) => {\n    const props = useDefaultProps('Drawer', incomingProps, {\n      drawerPercentage: 70,\n      animationTime: 300,\n      bg: 'white',\n      backdropColor: 'black',\n      direction: 'left',\n      rounded: 'none',\n      backdropTransitionOutTiming: 0,\n    });\n\n    const {\n      direction,\n      drawerPercentage,\n      animationTime,\n      backdropColor,\n      animationInTiming,\n      animationIn,\n      animationOut,\n      onBackdropPress,\n      isVisible,\n      animationOutTiming,\n      swipeDirection,\n      onSwipeComplete,\n      children,\n      ...rest\n    } = props;\n    const { theme } = useContext(ThemeContext);\n    const computedStyle = getStyle(theme, props as DrawerProps);\n    const [visible, setVisible] = useState(isVisible);\n\n    useEffect(() => {\n      if ('isVisible' in props) {\n        setVisible(props.isVisible ?? false);\n      }\n    }, [props, visible]);\n\n    /**\n     * exposing functions to parent\n     */\n    useImperativeHandle(ref, () => ({\n      open() {\n        setVisible(true);\n      },\n      close() {\n        setVisible(false);\n      },\n    }));\n\n    return (\n      <Modal\n        isVisible={visible}\n        onSwipeComplete={() => setVisible(false)}\n        swipeDirection={direction === 'left' ? 'left' : 'right'}\n        backdropColor={getThemeProperty(theme.colors, backdropColor)}\n        animationInTiming={\n          animationInTiming ? animationInTiming : animationTime\n        }\n        animationOutTiming={\n          animationOutTiming ? animationOutTiming : animationTime\n        }\n        animationIn={direction === 'left' ? 'slideInLeft' : 'slideInRight'}\n        animationOut={direction === 'left' ? 'slideOutLeft' : 'slideOutRight'}\n        onBackdropPress={\n          'onBackdropPress' in props ? onBackdropPress : () => setVisible(false)\n        }\n        style={computedStyle.drawer}\n        {...rest}\n      >\n        <View style={computedStyle.container}>\n          <SafeAreaView style={computedStyle.safeView}>{children}</SafeAreaView>\n        </View>\n      </Modal>\n    );\n  }\n);\n\n// Drawer.defaultProps = {\n//   drawerPercentage: 70,\n//   animationTime: 300,\n//   bg: 'white',\n//   backdropColor: 'black',\n//   direction: 'left',\n//   rounded: 'none',\n//   backdropTransitionOutTiming: 0,\n// };\n\nexport { Drawer };\n"]},"metadata":{},"sourceType":"script"}