{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Select = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeModal = _interopRequireDefault(require(\"react-native-modal\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _select = require(\"./select.style\");\n\nvar _div = require(\"../div/div.component\");\n\nvar _theme = require(\"../../theme\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _input = require(\"../input/input.component\");\n\nvar _icon = require(\"../icon/icon.component\");\n\nvar _selectOption = require(\"./select.option.component\");\n\nvar _button = require(\"../button/button.component\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/select/select.component.tsx\";\nvar Select = React.forwardRef(function (incomingProps, ref) {\n  var props = (0, _useDefaultProps.useDefaultProps)('Select', incomingProps, {\n    bg: 'white',\n    rounded: 'none',\n    flexDir: 'column',\n    isVisible: false,\n    renderNoResultsView: function renderNoResultsView(searchTerm) {\n      return React.createElement(_div.Div, {\n        flex: 1,\n        px: \"2xl\",\n        py: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(_text.Text, {\n        fontSize: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"No results found for \\\"\", searchTerm, \"\\\"\"));\n    },\n    keyExtractor: function keyExtractor(_, index) {\n      return \"\".concat(index);\n    }\n  });\n  var value = props.value,\n      title = props.title,\n      message = props.message,\n      footer = props.footer,\n      data = props.data,\n      multiple = props.multiple,\n      _renderItem = props.renderItem,\n      keyExtractor = props.keyExtractor,\n      renderNoResultsView = props.renderNoResultsView,\n      renderSubmitButton = props.renderSubmitButton,\n      renderSearchInput = props.renderSearchInput,\n      searchableProps = props.searchableProps,\n      onSelectProp = props.onSelect;\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = (0, React.useState)(props.isVisible || false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = (0, React.useState)(value),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      selectedValue = _useState4[0],\n      setSelectedValue = _useState4[1];\n\n  var _useState5 = (0, React.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      searchTerm = _useState6[0],\n      setSearchTerm = _useState6[1];\n\n  var isSearchable = (0, React.useMemo)(function () {\n    return !!(searchableProps === null || searchableProps === void 0 ? void 0 : searchableProps.length);\n  }, [searchableProps]);\n  var computedStyle = (0, _select.getStyle)(theme, props);\n\n  var resolveMultiLevelAccess = function resolveMultiLevelAccess(obj, key) {\n    return key.split('.').reduce(function (cur, keySection) {\n      if (cur === null || cur === undefined) {\n        return;\n      }\n\n      if (cur[keySection] === null || cur[keySection] === undefined) {\n        console.warn(\"Property \\\"\".concat(key, \"\\\" does not exists! \"));\n        return;\n      }\n\n      return cur[keySection];\n    }, obj);\n  };\n\n  var filteredData = (0, React.useMemo)(function () {\n    if (!searchableProps || Array.isArray(searchableProps) && !searchableProps.length) {\n      return data;\n    }\n\n    return data.filter(function (item) {\n      var lowSearch = searchTerm.toLowerCase();\n\n      if (!Array.isArray(searchableProps)) {\n        return String(item).toLowerCase().includes(lowSearch);\n      }\n\n      return searchableProps.some(function (key) {\n        return String(resolveMultiLevelAccess(item, key)).toLowerCase().includes(lowSearch);\n      });\n    });\n  }, [searchableProps, searchTerm, data]);\n  (0, React.useEffect)(function () {\n    if ('isVisible' in props) {\n      setVisible(props.isVisible || visible);\n    }\n  }, [props, visible]);\n  (0, React.useEffect)(function () {\n    if (visible) {\n      clearSearchInput();\n    }\n  }, [visible]);\n  (0, React.useImperativeHandle)(ref, function () {\n    return {\n      close: function close() {\n        setVisible(false);\n      },\n      open: function open() {\n        setVisible(true);\n      }\n    };\n  });\n\n  var onSelect = function onSelect(value) {\n    var finalValue;\n\n    if (multiple) {\n      var copy = selectedValue.slice();\n      var index = selectedValue.indexOf(value);\n\n      if (index !== -1) {\n        copy.splice(index, 1);\n      } else {\n        copy.push(value);\n      }\n\n      setSelectedValue(copy);\n      finalValue = copy;\n    } else {\n      setSelectedValue(value);\n      setVisible(false);\n      finalValue = value;\n    }\n\n    onSelectProp(finalValue);\n  };\n\n  var renderTitle = function renderTitle() {\n    if (title) {\n      return typeof title === 'string' ? React.createElement(_text.Text, {\n        px: \"xl\",\n        fontSize: \"lg\",\n        fontWeight: \"bold\",\n        textTransform: \"uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, title) : title;\n    }\n\n    return false;\n  };\n\n  var renderMessage = function renderMessage() {\n    if (message) {\n      return typeof message === 'string' ? React.createElement(_text.Text, {\n        px: \"xl\",\n        fontSize: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, message) : message;\n    }\n\n    return false;\n  };\n\n  var clearSearchInput = function clearSearchInput() {\n    return setSearchTerm('');\n  };\n\n  var renderSearchbar = function renderSearchbar() {\n    if (!isSearchable) {\n      return;\n    }\n\n    var searchInputElement = renderSearchInput && renderSearchInput({\n      clearText: clearSearchInput\n    });\n    var mandatoryProps = {\n      value: searchTerm,\n      onChangeText: function onChangeText(text) {\n        return setSearchTerm(text);\n      },\n      autoCompleteType: 'off'\n    };\n\n    if (searchInputElement) {\n      return React.cloneElement(searchInputElement, mandatoryProps);\n    }\n\n    return React.createElement(_input.Input, (0, _extends2.default)({\n      mx: \"xl\",\n      mt: \"-md\",\n      fontSize: \"lg\",\n      placeholder: \"Search items\",\n      bg: \"gray200\",\n      prefix: React.createElement(_icon.Icon, {\n        mr: \"lg\",\n        name: \"search1\",\n        color: \"gray700\",\n        fontSize: \"3xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }),\n      suffix: searchTerm ? React.createElement(_button.Button, {\n        mx: \"-md\",\n        p: \"md\",\n        alignSelf: \"center\",\n        rounded: \"circle\",\n        bg: \"gray400\",\n        onPress: clearSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, React.createElement(_icon.Icon, {\n        name: \"close\",\n        fontSize: \"xs\",\n        color: \"gray900\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      })) : null\n    }, mandatoryProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderFooter = function renderFooter() {\n    if (footer) {\n      return footer;\n    }\n\n    if (!multiple) {\n      return;\n    }\n\n    var submitButtonElement = renderSubmitButton && renderSubmitButton();\n    var mandatoryProps = {\n      onPress: function onPress() {\n        return setVisible(false);\n      }\n    };\n\n    if (submitButtonElement) {\n      return React.cloneElement(submitButtonElement, mandatoryProps);\n    }\n\n    return React.createElement(_button.Button, (0, _extends2.default)({\n      block: true,\n      rounded: \"none\",\n      bg: \"green600\"\n    }, mandatoryProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }), React.createElement(_text.Text, {\n      fontSize: \"xl\",\n      py: \"xs\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  };\n\n  var renderNoResultsFound = function renderNoResultsFound() {\n    renderNoResultsView && renderNoResultsView(searchTerm);\n  };\n\n  return React.createElement(_reactNativeModal.default, {\n    backdropTransitionOutTiming: 0,\n    animationIn: \"slideInUp\",\n    isVisible: visible,\n    backdropColor: \"black\",\n    onBackdropPress: function onBackdropPress() {\n      return setVisible(false);\n    },\n    onBackButtonPress: function onBackButtonPress() {\n      return setVisible(false);\n    },\n    hideModalContentWhileAnimating: true,\n    style: {\n      margin: 0,\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, React.createElement(_div.Div, {\n    style: computedStyle.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.SafeAreaView, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, React.createElement(_div.Div, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, React.createElement(_div.Div, {\n    py: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, renderTitle(), renderMessage()), React.createElement(_div.Div, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, renderSearchbar())), filteredData.length > 0 ? React.createElement(_div.Div, {\n    flex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, React.createElement(_reactNative.FlatList, {\n    data: filteredData,\n    keyExtractor: keyExtractor,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.cloneElement(_renderItem(item, index), {\n        onSelect: onSelect,\n        selectedValue: selectedValue\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  })) : renderNoResultsFound(), renderFooter())));\n});\nexports.Select = Select;\nSelect.Option = _selectOption.SelectOption;","map":{"version":3,"sources":["select.component.tsx"],"names":["Select","React","props","bg","rounded","flexDir","isVisible","renderNoResultsView","keyExtractor","value","title","message","footer","data","multiple","renderItem","renderSubmitButton","renderSearchInput","searchableProps","onSelectProp","theme","ThemeContext","visible","setVisible","selectedValue","setSelectedValue","searchTerm","setSearchTerm","isSearchable","computedStyle","resolveMultiLevelAccess","key","cur","console","filteredData","Array","lowSearch","String","clearSearchInput","close","open","onSelect","copy","index","finalValue","renderTitle","renderMessage","renderSearchbar","searchInputElement","clearText","mandatoryProps","onChangeText","autoCompleteType","renderFooter","submitButtonElement","onPress","renderNoResultsFound","margin","justifyContent","item","SelectOption"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RNModal from 'react-native-modal';\nimport { SafeAreaView, FlatList } from 'react-native';\nimport {\n  useContext,\n  useState,\n  useImperativeHandle,\n  useEffect,\n  useMemo,\n} from 'react';\n\nimport { getStyle } from './select.style';\nimport { Div } from '../div/div.component';\nimport { ThemeContext } from '../../theme';\nimport { Text } from '../text/text.component';\nimport { Input } from '../input/input.component';\nimport { Icon } from '../icon/icon.component';\nimport { SelectOption } from './select.option.component';\nimport { Button } from '../button/button.component';\nimport { SelectProps, SelectRef, CompoundedSelect } from './select.type';\nimport { InputProps } from '../input/input.type';\nimport { ButtonProps } from '../button/button.type';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Select = React.forwardRef<SelectRef, SelectProps>(\n  (incomingProps, ref) => {\n    const props = useDefaultProps('Select', incomingProps, {\n      bg: 'white',\n      rounded: 'none',\n      flexDir: 'column',\n      isVisible: false,\n      renderNoResultsView: (searchTerm) => (\n        <Div flex={1} px=\"2xl\" py=\"xl\">\n          <Text fontSize=\"lg\">No results found for \"{searchTerm}\"</Text>\n        </Div>\n      ),\n      keyExtractor: (_, index) => `${index}`,\n    });\n\n    const {\n      value,\n      title,\n      message,\n      footer,\n      data,\n      multiple,\n      renderItem,\n      keyExtractor,\n      renderNoResultsView,\n      renderSubmitButton,\n      renderSearchInput,\n      searchableProps,\n      onSelect: onSelectProp,\n    } = props;\n    const { theme } = useContext(ThemeContext);\n    const [visible, setVisible] = useState(props.isVisible || false);\n    const [selectedValue, setSelectedValue] = useState(value);\n    const [searchTerm, setSearchTerm] = useState<string>('');\n    const isSearchable = useMemo(() => !!searchableProps?.length, [\n      searchableProps,\n    ]);\n\n    const computedStyle = getStyle(theme, props);\n\n    const resolveMultiLevelAccess = (obj: any, key: string) => {\n      return key.split('.').reduce((cur: any, keySection: string) => {\n        if (cur === null || cur === undefined) {\n          return;\n        }\n\n        if (cur[keySection] === null || cur[keySection] === undefined) {\n          console.warn(`Property \"${key}\" does not exists! `);\n          return;\n        }\n\n        return cur[keySection];\n      }, obj);\n    };\n\n    const filteredData = useMemo(() => {\n      if (\n        !searchableProps ||\n        (Array.isArray(searchableProps) && !searchableProps.length)\n      ) {\n        return data;\n      }\n\n      return data.filter((item) => {\n        const lowSearch = searchTerm.toLowerCase();\n\n        if (!Array.isArray(searchableProps)) {\n          return String(item).toLowerCase().includes(lowSearch);\n        }\n\n        return searchableProps.some((key: string) =>\n          String(resolveMultiLevelAccess(item, key))\n            .toLowerCase()\n            .includes(lowSearch)\n        );\n      });\n    }, [searchableProps, searchTerm, data]);\n\n    useEffect(() => {\n      if ('isVisible' in props) {\n        setVisible(props.isVisible || visible);\n      }\n    }, [props, visible]);\n\n    useEffect(() => {\n      if (visible) {\n        clearSearchInput();\n      }\n    }, [visible]);\n\n    /**\n     * exposing functions to parent\n     */\n    useImperativeHandle(ref, () => ({\n      close() {\n        setVisible(false);\n      },\n      open() {\n        setVisible(true);\n      },\n    }));\n\n    /**\n     * set values of select based if its multiple select\n     * or single valued select\n     *\n     * @param value\n     */\n    const onSelect = (value: any) => {\n      let finalValue;\n\n      if (multiple) {\n        const copy = selectedValue.slice();\n        const index = selectedValue.indexOf(value);\n        if (index !== -1) {\n          copy.splice(index, 1);\n        } else {\n          copy.push(value);\n        }\n\n        setSelectedValue(copy);\n        finalValue = copy;\n      } else {\n        setSelectedValue(value);\n        setVisible(false);\n        finalValue = value;\n      }\n\n      onSelectProp(finalValue);\n    };\n\n    /**\n     * render title at top select modal\n     */\n    const renderTitle = () => {\n      if (title) {\n        return typeof title === 'string' ? (\n          <Text\n            px=\"xl\"\n            fontSize=\"lg\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n          >\n            {title}\n          </Text>\n        ) : (\n          title\n        );\n      }\n\n      return false;\n    };\n\n    /**\n     * render message at top select modal\n     */\n    const renderMessage = () => {\n      if (message) {\n        return typeof message === 'string' ? (\n          <Text px=\"xl\" fontSize=\"lg\">\n            {message}\n          </Text>\n        ) : (\n          message\n        );\n      }\n\n      return false;\n    };\n\n    const clearSearchInput = () => setSearchTerm('');\n\n    /**\n     * render searchbar at top select modal\n     */\n    const renderSearchbar = () => {\n      if (!isSearchable) {\n        return;\n      }\n\n      const searchInputElement =\n        renderSearchInput && renderSearchInput({ clearText: clearSearchInput });\n\n      const mandatoryProps: Partial<InputProps> = {\n        value: searchTerm,\n        onChangeText: (text: string) => setSearchTerm(text),\n        autoCompleteType: 'off',\n      };\n\n      if (searchInputElement) {\n        return React.cloneElement(searchInputElement, mandatoryProps);\n      }\n\n      return (\n        <Input\n          mx=\"xl\"\n          mt=\"-md\"\n          fontSize=\"lg\"\n          placeholder=\"Search items\"\n          bg=\"gray200\"\n          prefix={\n            <Icon mr=\"lg\" name=\"search1\" color=\"gray700\" fontSize=\"3xl\" />\n          }\n          suffix={\n            searchTerm ? (\n              <Button\n                mx=\"-md\"\n                p=\"md\"\n                alignSelf=\"center\"\n                rounded=\"circle\"\n                bg=\"gray400\"\n                onPress={clearSearchInput}\n              >\n                <Icon name=\"close\" fontSize=\"xs\" color=\"gray900\" />\n              </Button>\n            ) : null\n          }\n          {...mandatoryProps}\n        />\n      );\n    };\n\n    const renderFooter = () => {\n      if (footer) {\n        return footer;\n      }\n\n      // if the component is single-valued and no footer is provided\n      // don't render anything in footer\n      if (!multiple) {\n        return;\n      }\n\n      const submitButtonElement = renderSubmitButton && renderSubmitButton();\n\n      const mandatoryProps: Partial<ButtonProps> = {\n        onPress: () => setVisible(false),\n      };\n\n      if (submitButtonElement) {\n        return React.cloneElement(submitButtonElement, mandatoryProps);\n      }\n\n      return (\n        <Button block rounded=\"none\" bg=\"green600\" {...mandatoryProps}>\n          <Text fontSize=\"xl\" py=\"xs\" color=\"white\">\n            Submit\n          </Text>\n        </Button>\n      );\n    };\n\n    const renderNoResultsFound = () => {\n      renderNoResultsView && renderNoResultsView(searchTerm);\n    };\n\n    return (\n      <RNModal\n        backdropTransitionOutTiming={0}\n        animationIn=\"slideInUp\"\n        isVisible={visible}\n        backdropColor=\"black\"\n        onBackdropPress={() => setVisible(false)}\n        onBackButtonPress={() => setVisible(false)}\n        hideModalContentWhileAnimating\n        style={{\n          margin: 0,\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Div style={computedStyle.wrapper}>\n          <SafeAreaView style={computedStyle.container}>\n            <Div>\n              <Div py=\"xl\">\n                {renderTitle()}\n                {renderMessage()}\n              </Div>\n              <Div>{renderSearchbar()}</Div>\n            </Div>\n\n            {filteredData.length > 0 ? (\n              <Div flex={1}>\n                <FlatList\n                  data={filteredData}\n                  keyExtractor={keyExtractor}\n                  renderItem={({ item, index }) =>\n                    React.cloneElement(renderItem(item, index), {\n                      onSelect,\n                      selectedValue,\n                    })\n                  }\n                />\n              </Div>\n            ) : (\n              renderNoResultsFound()\n            )}\n\n            {renderFooter()}\n          </SafeAreaView>\n        </Div>\n      </RNModal>\n    );\n  }\n) as CompoundedSelect;\n\n// Select.defaultProps = {\n//   bg: 'white',\n//   rounded: 'none',\n//   flexDir: 'column',\n//   isVisible: false,\n//   // mb: 'xl',\n//   // @ts-ignore\n//   renderNoResultsView: (searchTerm) => (\n//     <Div flex={1} px=\"2xl\" py=\"xl\">\n//       <Text fontSize=\"lg\">No results found for \"{searchTerm}\"</Text>\n//     </Div>\n//   ),\n//   keyExtractor: (_, index) => `${index}`,\n// };\n\nSelect.Option = SelectOption;\n\nexport { Select };\n"]},"metadata":{},"sourceType":"script"}