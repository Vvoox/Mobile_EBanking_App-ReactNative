{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(_theme, props) {\n  var computedStyle = {};\n\n  if (props.style) {\n    computedStyle.container = _objectSpread(_objectSpread({}, computedStyle.container), props.style);\n  }\n\n  computedStyle.center = {};\n\n  if (props.suffix) {\n    computedStyle.suffix = {\n      zIndex: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    };\n  }\n\n  if (props.prefix) {\n    computedStyle.prefix = {\n      zIndex: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    };\n  }\n\n  if (props.alignment === 'center') {\n    computedStyle.center = _objectSpread(_objectSpread({}, computedStyle.center), {}, {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    });\n    computedStyle.container = _objectSpread(_objectSpread({}, computedStyle.container), {}, {\n      justifyContent: 'space-between'\n    });\n\n    if (props.suffix || props.prefix) {\n      computedStyle.center = _objectSpread(_objectSpread({}, computedStyle.center), _reactNative.StyleSheet.absoluteFillObject);\n      computedStyle.suffix = _objectSpread(_objectSpread({}, computedStyle.suffix), {}, {\n        flex: 1,\n        justifyContent: 'flex-end'\n      });\n    }\n  } else {\n    computedStyle.center = {\n      flex: 1\n    };\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["header.style.tsx"],"names":["getStyle","computedStyle","props","zIndex","flexDirection","alignItems","justifyContent","flex","StyleSheet"],"mappings":";;;;;;;sDAAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWO;;AAAA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,MAAXA,EAAW,KAAXA,EAAsD;AACjE,MAAMC,aAAkB,GAAxB,EAAA;;AAGA,MAAIC,KAAK,CAAT,KAAA,EAAiB;AACfD,IAAAA,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,SAAAA,CAAAA,EAGKC,KAAK,CAHVD,KAAAA,CAAAA;AAOFA;;AAAAA,EAAAA,aAAa,CAAbA,MAAAA,GAAAA,EAAAA;;AAEA,MAAIC,KAAK,CAAT,MAAA,EAAkB;AAChBD,IAAAA,aAAa,CAAbA,MAAAA,GAAuB;AACrBE,MAAAA,MAAM,EADe,CAAA;AAErBC,MAAAA,aAAa,EAFQ,KAAA;AAGrBC,MAAAA,UAAU,EAHZJ;AAAuB,KAAvBA;AAOF;;AAAA,MAAIC,KAAK,CAAT,MAAA,EAAkB;AAChBD,IAAAA,aAAa,CAAbA,MAAAA,GAAuB;AACrBE,MAAAA,MAAM,EADe,CAAA;AAErBC,MAAAA,aAAa,EAFQ,KAAA;AAGrBC,MAAAA,UAAU,EAHZJ;AAAuB,KAAvBA;AAOF;;AAAA,MAAIC,KAAK,CAALA,SAAAA,KAAJ,QAAA,EAAkC;AAChCD,IAAAA,aAAa,CAAbA,MAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEK,MAAAA,cAAc,EAFhBL,QAAAA;AAGEI,MAAAA,UAAU,EAHZJ,QAAAA;AAIEM,MAAAA,IAAI,EAJNN;AAAAA,KAAAA,CAAAA;AAOAA,IAAAA,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEK,MAAAA,cAAc,EAFhBL;AAAAA,KAAAA,CAAAA;;AAKA,QAAIC,KAAK,CAALA,MAAAA,IAAgBA,KAAK,CAAzB,MAAA,EAAkC;AAChCD,MAAAA,aAAa,CAAbA,MAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,MAAAA,CAAAA,EAEKO,YAAAA,CAAAA,UAAAA,CAFLP,kBAAAA,CAAAA;AAKAA,MAAAA,aAAa,CAAbA,MAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEM,QAAAA,IAAI,EAFNN,CAAAA;AAGEK,QAAAA,cAAc,EAHhBL;AAAAA,OAAAA,CAAAA;AAMH;AAzBD,GAAA,MAyBO;AACLA,IAAAA,aAAa,CAAbA,MAAAA,GAAuB;AACrBM,MAAAA,IAAI,EADNN;AAAuB,KAAvBA;AAKF;;AAAA,SAAOO,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAP,aAAOA,CAAP;AA7DK,CAAA","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport { HeaderProps } from './header.type';\n\n/**\n * computed styles\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (_theme: ThemeType, props: HeaderProps) => {\n  const computedStyle: any = {};\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.container = {\n      ...computedStyle.container,\n      // @ts-ignore\n      ...props.style,\n    };\n  }\n\n  computedStyle.center = {};\n\n  if (props.suffix) {\n    computedStyle.suffix = {\n      zIndex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n    };\n  }\n\n  if (props.prefix) {\n    computedStyle.prefix = {\n      zIndex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n    };\n  }\n\n  if (props.alignment === 'center') {\n    computedStyle.center = {\n      ...computedStyle.center,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1,\n    };\n\n    computedStyle.container = {\n      ...computedStyle.container,\n      justifyContent: 'space-between',\n    };\n\n    if (props.suffix || props.prefix) {\n      computedStyle.center = {\n        ...computedStyle.center,\n        ...StyleSheet.absoluteFillObject,\n      };\n\n      computedStyle.suffix = {\n        ...computedStyle.suffix,\n        flex: 1,\n        justifyContent: 'flex-end',\n      };\n    }\n  } else {\n    computedStyle.center = {\n      flex: 1,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}