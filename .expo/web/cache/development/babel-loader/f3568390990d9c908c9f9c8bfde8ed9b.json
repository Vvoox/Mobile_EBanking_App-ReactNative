{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollDiv = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _scrolldiv = require(\"./scrolldiv.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/scrolldiv/scrolldiv.component.tsx\";\n\nvar ScrollDiv = function ScrollDiv(incomingProps) {\n  var props = (0, _useDefaultProps.useDefaultProps)('ScrollDiv', incomingProps, {\n    bg: 'transparent',\n    flexDir: 'column',\n    flexWrap: 'nowrap',\n    rounded: 'none',\n    shadow: 0,\n    shadowColor: 'gray900',\n    position: 'relative',\n    bgMode: 'cover'\n  });\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      minH = props.minH,\n      minW = props.minW,\n      position = props.position,\n      style = props.style,\n      flexDir = props.flexDir,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      children = props.children,\n      bgImg = props.bgImg,\n      bgMode = props.bgMode,\n      alignItems = props.alignItems,\n      justifyContent = props.justifyContent,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      flexWrap = props.flexWrap,\n      shadow = props.shadow,\n      shadowColor = props.shadowColor,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"minH\", \"minW\", \"position\", \"style\", \"flexDir\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"children\", \"bgImg\", \"bgMode\", \"alignItems\", \"justifyContent\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"flexWrap\", \"shadow\", \"shadowColor\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _scrolldiv.getStyle)(theme, props);\n\n  if (bgImg) {\n    return React.createElement(_reactNative.ImageBackground, (0, _extends2.default)({\n      source: bgImg,\n      style: computedStyle.div,\n      resizeMode: props.bgMode,\n      imageStyle: computedStyle.image\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return React.createElement(_reactNative.ScrollView, (0, _extends2.default)({\n    style: computedStyle.div\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexports.ScrollDiv = ScrollDiv;","map":{"version":3,"sources":["scrolldiv.component.tsx"],"names":["ScrollDiv","props","bg","flexDir","flexWrap","rounded","shadow","shadowColor","position","bgMode","h","w","m","mt","mr","mb","ml","p","pr","pt","pb","pl","minH","minW","style","roundedTop","roundedRight","roundedBottom","roundedLeft","children","bgImg","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","rest","theme","ThemeContext","computedStyle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport {\n  ScrollView as RNScrollView,\n  ImageBackground as RNImageBackground,\n} from 'react-native';\n\nimport { ScrollDivProps } from './scrolldiv.type';\nimport { getStyle } from './scrolldiv.style';\nimport { ThemeContext } from '../../theme';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst ScrollDiv: React.FunctionComponent<ScrollDivProps> = (incomingProps) => {\n  const props = useDefaultProps('ScrollDiv', incomingProps, {\n    bg: 'transparent',\n    flexDir: 'column',\n    flexWrap: 'nowrap',\n    rounded: 'none',\n    shadow: 0,\n    shadowColor: 'gray900',\n    position: 'relative',\n    bgMode: 'cover',\n  });\n\n  const {\n    h,\n    w,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    minH,\n    minW,\n    position,\n    style,\n    flexDir,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    children,\n    bgImg,\n    bgMode,\n    alignItems,\n    justifyContent,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    flexWrap,\n    shadow,\n    shadowColor,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  if (bgImg) {\n    return (\n      <RNImageBackground\n        source={bgImg}\n        style={computedStyle.div}\n        resizeMode={props.bgMode}\n        imageStyle={computedStyle.image}\n        {...rest}\n      >\n        {children}\n      </RNImageBackground>\n    );\n  }\n\n  return (\n    <RNScrollView style={computedStyle.div} {...rest}>\n      {children}\n    </RNScrollView>\n  );\n};\n\n// ScrollDiv.defaultProps = {\n//   bg: 'transparent',\n//   flexDir: 'column',\n//   flexWrap: 'nowrap',\n//   rounded: 'none',\n//   shadow: 0,\n//   shadowColor: 'gray900',\n//   position: 'relative',\n//   bgMode: 'cover',\n// };\n\nexport { ScrollDiv };\n"]},"metadata":{},"sourceType":"script"}