{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props) {\n  var computedStyle = {};\n  computedStyle.wrapper = _objectSpread(_objectSpread(_objectSpread({\n    height: props.h,\n    width: props.w,\n    minHeight: props.minH,\n    minWidth: props.minW,\n    alignSelf: 'center',\n    overflow: props.overflow,\n    backgroundColor: (0, _theme.getThemeProperty)(theme.colors, props.bg)\n  }, (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n  computedStyle.indicator = {\n    alignSelf: 'center',\n    marginVertical: 10\n  };\n  computedStyle.container = _objectSpread({}, (0, _theme.createSpacingStyles)(props, theme.spacing));\n  computedStyle.options = {\n    flexWrap: props.flexWrap,\n    flexDirection: props.flexDir,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent\n  };\n\n  if (props.style) {\n    computedStyle.container = _objectSpread(_objectSpread({}, computedStyle.container), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["dropdown.style.tsx"],"names":["getStyle","computedStyle","height","props","width","minHeight","minWidth","alignSelf","overflow","backgroundColor","theme","marginVertical","flexWrap","flexDirection","alignItems","justifyContent","StyleSheet"],"mappings":";;;;;;;sDAAA,uC;;;;AAGA,IAAA,MAAA,GAAA,OAAA,6BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeO;;AAAA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,KAAXA,EAAW,KAAXA,EAAuD;AAClE,MAAMC,aAAkB,GAAxB,EAAA;AAEAA,EAAAA,aAAa,CAAbA,OAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA;AACEC,IAAAA,MAAM,EAAEC,KAAK,CADfF,CAAAA;AAEEG,IAAAA,KAAK,EAAED,KAAK,CAFdF,CAAAA;AAGEI,IAAAA,SAAS,EAAEF,KAAK,CAHlBF,IAAAA;AAIEK,IAAAA,QAAQ,EAAEH,KAAK,CAJjBF,IAAAA;AAKEM,IAAAA,SAAS,EALXN,QAAAA;AAMEO,IAAAA,QAAQ,EAAEL,KAAK,CANjBF,QAAAA;AAOEQ,IAAAA,eAAe,EAAE,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBC,KAAK,CAAtB,MAAA,EAA+BP,KAAK,CAPvDF,EAOmB;AAPnBA,GAAAA,EAQK,CAAA,GAAA,MAAA,CAAA,uBAAA,EARLA,KAQK,CARLA,CAAAA,EASK,CAAA,GAAA,MAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BS,KAAK,CATzCT,MASK,CATLA,CAAAA,EAUK,CAAA,GAAA,MAAA,CAAA,wBAAA,EAAA,KAAA,EAAgCS,KAAK,CAV1CT,YAUK,CAVLA,CAAAA;AAaAA,EAAAA,aAAa,CAAbA,SAAAA,GAA0B;AACxBM,IAAAA,SAAS,EADe,QAAA;AAExBI,IAAAA,cAAc,EAFhBV;AAA0B,GAA1BA;AAKAA,EAAAA,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACK,CAAA,GAAA,MAAA,CAAA,mBAAA,EAAA,KAAA,EAA2BS,KAAK,CADrCT,OACK,CADLA,CAAAA;AAIAA,EAAAA,aAAa,CAAbA,OAAAA,GAAwB;AACtBW,IAAAA,QAAQ,EAAET,KAAK,CADO,QAAA;AAEtBU,IAAAA,aAAa,EAAEV,KAAK,CAFE,OAAA;AAGtBW,IAAAA,UAAU,EAAEX,KAAK,CAHK,UAAA;AAItBY,IAAAA,cAAc,EAAEZ,KAAK,CAJvBF;AAAwB,GAAxBA;;AAQA,MAAIE,KAAK,CAAT,KAAA,EAAiB;AACfF,IAAAA,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,SAAAA,CAAAA,EAGKE,KAAK,CAHVF,KAAAA,CAAAA;AAOF;;AAAA,SAAOe,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAP,aAAOA,CAAP;AAzCK,CAAA","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport {\n  getThemeProperty,\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n} from '../../theme/theme.service';\nimport { DropdownProps } from './dropdown.type';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: DropdownProps) => {\n  const computedStyle: any = {};\n\n  computedStyle.wrapper = {\n    height: props.h,\n    width: props.w,\n    minHeight: props.minH,\n    minWidth: props.minW,\n    alignSelf: 'center',\n    overflow: props.overflow,\n    backgroundColor: getThemeProperty(theme.colors, props.bg),\n    ...createBorderWidthStyles(props),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.indicator = {\n    alignSelf: 'center',\n    marginVertical: 10,\n  };\n\n  computedStyle.container = {\n    ...createSpacingStyles(props, theme.spacing),\n  };\n\n  computedStyle.options = {\n    flexWrap: props.flexWrap,\n    flexDirection: props.flexDir,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent,\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.container = {\n      ...computedStyle.container,\n      // @ts-ignore\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}