{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dropdown = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeModal = _interopRequireDefault(require(\"react-native-modal\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _div = require(\"../div/div.component\");\n\nvar _dropdown = require(\"./dropdown.style\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _dropdownOption = require(\"./dropdown.option.component\");\n\nvar _theme = require(\"../../theme\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/dropdown/dropdown.component.tsx\";\nvar Dropdown = React.forwardRef(function (incomingProps, ref) {\n  var _props$isVisible;\n\n  var props = (0, _useDefaultProps.useDefaultProps)('Dropdown', incomingProps, {\n    bg: 'white',\n    rounded: 'none',\n    showSwipeIndicator: _reactNative.Platform.OS === 'web' ? false : true,\n    backdropColor: 'gray900',\n    backdropOpacity: 0.5,\n    flexWrap: 'nowrap',\n    backdropTransitionOutTiming: 0,\n    overflow: 'hidden',\n    py: 'xl'\n  });\n  var bg = props.bg,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      title = props.title,\n      showSwipeIndicator = props.showSwipeIndicator,\n      children = props.children,\n      backdropColor = props.backdropColor,\n      flexDir = props.flexDir,\n      flexWrap = props.flexWrap,\n      isVisible = props.isVisible,\n      onBackdropPress = props.onBackdropPress,\n      swipeDirection = props.swipeDirection,\n      _onSwipeComplete = props.onSwipeComplete,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"bg\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"title\", \"showSwipeIndicator\", \"children\", \"backdropColor\", \"flexDir\", \"flexWrap\", \"isVisible\", \"onBackdropPress\", \"swipeDirection\", \"onSwipeComplete\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _dropdown.getStyle)(theme, props);\n\n  var _useState = (0, React.useState)((_props$isVisible = props.isVisible) !== null && _props$isVisible !== void 0 ? _props$isVisible : false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  (0, React.useEffect)(function () {\n    if ('isVisible' in props) {\n      var _props$isVisible2;\n\n      setVisible((_props$isVisible2 = props.isVisible) !== null && _props$isVisible2 !== void 0 ? _props$isVisible2 : false);\n    }\n  }, [props, visible]);\n  (0, React.useImperativeHandle)(ref, function () {\n    return {\n      open: function open() {\n        setVisible(true);\n      },\n      close: function close() {\n        setVisible(false);\n      }\n    };\n  });\n\n  var renderTitle = function renderTitle() {\n    if (title) {\n      return typeof title === 'string' ? React.createElement(_text.Text, {\n        fontSize: \"md\",\n        color: \"gray700\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, title) : title;\n    }\n\n    return false;\n  };\n\n  var renderIndicator = function renderIndicator() {\n    return showSwipeIndicator && React.createElement(_div.Div, {\n      h: 7,\n      rounded: \"xl\",\n      w: 40,\n      bg: \"gray200\",\n      style: computedStyle.indicator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    });\n  };\n\n  return React.createElement(_reactNativeModal.default, (0, _extends2.default)({\n    isVisible: visible,\n    onSwipeComplete: function onSwipeComplete(params) {\n      setVisible(false);\n      _onSwipeComplete && _onSwipeComplete(params);\n    },\n    backdropColor: (0, _theme.getThemeProperty)(theme.colors, backdropColor),\n    onBackdropPress: 'onBackdropPress' in props ? onBackdropPress : function () {\n      return setVisible(false);\n    },\n    style: {\n      margin: 0,\n      justifyContent: _reactNative.Platform.OS === 'web' ? 'center' : 'flex-end'\n    },\n    swipeDirection: \"down\"\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNative.View, {\n    style: computedStyle.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, renderIndicator(), React.createElement(_reactNative.SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, renderTitle(), React.createElement(_reactNative.View, {\n    style: computedStyle.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, React.Children.map(children, function (child) {\n    return React.cloneElement(child, {\n      onSelect: function onSelect() {\n        setVisible(false);\n      }\n    });\n  }))))));\n});\nexports.Dropdown = Dropdown;\nDropdown.Option = _dropdownOption.DropdownOption;","map":{"version":3,"sources":["dropdown.component.tsx"],"names":["Dropdown","React","props","bg","rounded","showSwipeIndicator","Platform","backdropColor","backdropOpacity","flexWrap","backdropTransitionOutTiming","overflow","py","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","roundedTop","roundedRight","roundedBottom","roundedLeft","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","title","children","flexDir","isVisible","onBackdropPress","swipeDirection","onSwipeComplete","rest","theme","ThemeContext","computedStyle","visible","setVisible","open","close","renderTitle","renderIndicator","margin","justifyContent","onSelect","DropdownOption"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;;;AAIA,IAAA,IAAA,GAAA,OAAA,wBAAA;;AACA,IAAA,SAAA,GAAA,OAAA,oBAAA;;AACA,IAAA,KAAA,GAAA,OAAA,0BAAA;;AACA,IAAA,eAAA,GAAA,OAAA,+BAAA;;AACA,IAAA,MAAA,GAAA,OAAA,eAAA;;AAMA,IAAA,gBAAA,GAAA,OAAA,mCAAA;;;AAEA,IAAMA,QAAQ,GAAGC,KAAK,CAALA,UAAAA,CACf,UAAA,aAAA,EAAA,GAAA,EAAwB;AAAA,MAAA,gBAAA;;AACtB,MAAMC,KAAK,GAAG,CAAA,GAAA,gBAAA,CAAA,eAAA,EAAA,UAAA,EAAA,aAAA,EAA2C;AACvDC,IAAAA,EAAE,EADqD,OAAA;AAEvDC,IAAAA,OAAO,EAFgD,MAAA;AAGvDC,IAAAA,kBAAkB,EAAEC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,KAAAA,GAHmC,IAAA;AAIvDC,IAAAA,aAAa,EAJ0C,SAAA;AAKvDC,IAAAA,eAAe,EALwC,GAAA;AAMvDC,IAAAA,QAAQ,EAN+C,QAAA;AAOvDC,IAAAA,2BAA2B,EAP4B,CAAA;AAQvDC,IAAAA,QAAQ,EAR+C,QAAA;AASvDC,IAAAA,EAAE,EATJ;AAAyD,GAA3C,CAAd;AADsB,MAcpBT,EAdoB,GAqDlBD,KArDkB,CAAA,EAAA;AAAA,MAepBW,CAfoB,GAqDlBX,KArDkB,CAAA,CAAA;AAAA,MAgBpBY,EAhBoB,GAqDlBZ,KArDkB,CAAA,EAAA;AAAA,MAiBpBa,EAjBoB,GAqDlBb,KArDkB,CAAA,EAAA;AAAA,MAkBpBc,EAlBoB,GAqDlBd,KArDkB,CAAA,EAAA;AAAA,MAmBpBe,EAnBoB,GAqDlBf,KArDkB,CAAA,EAAA;AAAA,MAoBpBgB,EApBoB,GAqDlBhB,KArDkB,CAAA,EAAA;AAAA,MAqBpBiB,CArBoB,GAqDlBjB,KArDkB,CAAA,CAAA;AAAA,MAsBpBkB,EAtBoB,GAqDlBlB,KArDkB,CAAA,EAAA;AAAA,MAuBpBmB,EAvBoB,GAqDlBnB,KArDkB,CAAA,EAAA;AAAA,MAwBpBoB,EAxBoB,GAqDlBpB,KArDkB,CAAA,EAAA;AAAA,MAyBpBqB,EAzBoB,GAqDlBrB,KArDkB,CAAA,EAAA;AAAA,MA0BpBE,OA1BoB,GAqDlBF,KArDkB,CAAA,OAAA;AAAA,MA2BpBsB,UA3BoB,GAqDlBtB,KArDkB,CAAA,UAAA;AAAA,MA4BpBuB,YA5BoB,GAqDlBvB,KArDkB,CAAA,YAAA;AAAA,MA6BpBwB,aA7BoB,GAqDlBxB,KArDkB,CAAA,aAAA;AAAA,MA8BpByB,WA9BoB,GAqDlBzB,KArDkB,CAAA,WAAA;AAAA,MA+BpB0B,WA/BoB,GAqDlB1B,KArDkB,CAAA,WAAA;AAAA,MAgCpB2B,iBAhCoB,GAqDlB3B,KArDkB,CAAA,iBAAA;AAAA,MAiCpB4B,eAjCoB,GAqDlB5B,KArDkB,CAAA,eAAA;AAAA,MAkCpB6B,cAlCoB,GAqDlB7B,KArDkB,CAAA,cAAA;AAAA,MAmCpB8B,gBAnCoB,GAqDlB9B,KArDkB,CAAA,gBAAA;AAAA,MAoCpB+B,WApCoB,GAqDlB/B,KArDkB,CAAA,WAAA;AAAA,MAqCpBgC,eArCoB,GAqDlBhC,KArDkB,CAAA,eAAA;AAAA,MAsCpBiC,gBAtCoB,GAqDlBjC,KArDkB,CAAA,gBAAA;AAAA,MAuCpBkC,iBAvCoB,GAqDlBlC,KArDkB,CAAA,iBAAA;AAAA,MAwCpBmC,cAxCoB,GAqDlBnC,KArDkB,CAAA,cAAA;AAAA,MAyCpBoC,cAzCoB,GAqDlBpC,KArDkB,CAAA,cAAA;AAAA,MA0CpBqC,KA1CoB,GAqDlBrC,KArDkB,CAAA,KAAA;AAAA,MA2CpBG,kBA3CoB,GAqDlBH,KArDkB,CAAA,kBAAA;AAAA,MA4CpBsC,QA5CoB,GAqDlBtC,KArDkB,CAAA,QAAA;AAAA,MA6CpBK,aA7CoB,GAqDlBL,KArDkB,CAAA,aAAA;AAAA,MA8CpBuC,OA9CoB,GAqDlBvC,KArDkB,CAAA,OAAA;AAAA,MA+CpBO,QA/CoB,GAqDlBP,KArDkB,CAAA,QAAA;AAAA,MAgDpBwC,SAhDoB,GAqDlBxC,KArDkB,CAAA,SAAA;AAAA,MAiDpByC,eAjDoB,GAqDlBzC,KArDkB,CAAA,eAAA;AAAA,MAkDpB0C,cAlDoB,GAqDlB1C,KArDkB,CAAA,cAAA;AAAA,MAmDpB2C,gBAnDoB,GAqDlB3C,KArDkB,CAAA,eAAA;AAAA,MAoDjB4C,IApDiB,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,aAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,UAAA,EAAA,eAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,CAAA;;AAAA,MAAA,WAAA,GAsDJ,CAAA,GAAA,KAAA,CAAA,UAAA,EAAWE,MAAAA,CAtDP,YAsDJ,CAtDI;AAAA,MAsDdD,KAtDc,GAAA,WAAA,CAAA,KAAA;;AAuDtB,MAAME,aAAa,GAAG,CAAA,GAAA,SAAA,CAAA,QAAA,EAAA,KAAA,EAAtB,KAAsB,CAAtB;;AAvDsB,MAAA,SAAA,GAwDQ,CAAA,GAAA,KAAA,CAAA,QAAA,EAAA,CAAA,gBAAA,GAAS/C,KAAK,CAAd,SAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,gBAAA,GAxDR,KAwDQ,CAxDR;AAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAwDfgD,OAxDe,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAwDNC,UAxDM,GAAA,UAAA,CAAA,CAAA,CAAA;;AA0DtB,GAAA,GAAA,KAAA,CAAA,SAAA,EAAU,YAAM;AACd,QAAI,eAAJ,KAAA,EAA0B;AAAA,UAAA,iBAAA;;AACxBA,MAAAA,UAAU,CAAA,CAAA,iBAAA,GAACjD,KAAK,CAAN,SAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,iBAAA,GAAViD,KAAU,CAAVA;AAEH;AAJD,GAAA,EAIG,CAAA,KAAA,EAJH,OAIG,CAJH;AASA,GAAA,GAAA,KAAA,CAAA,mBAAA,EAAA,GAAA,EAAyB,YAAA;AAAA,WAAO;AAC9BC,MAAAA,IAD8B,EAAA,SAAA,IAAA,GACvB;AACLD,QAAAA,UAAU,CAAVA,IAAU,CAAVA;AAF4B,OAAA;AAI9BE,MAAAA,KAJ8B,EAAA,SAAA,KAAA,GAItB;AACNF,QAAAA,UAAU,CAAVA,KAAU,CAAVA;AALqB;AAAO,KAAP;AAAzB,GAAA;;AAYA,MAAMG,WAAW,GAAXA,SAAAA,WAAAA,GAAoB;AACxB,QAAA,KAAA,EAAW;AACT,aAAO,OAAA,KAAA,KAAA,QAAA,GACL,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,IAAA,EAAA;AAAM,QAAA,QAAQ,EAAd,IAAA;AAAoB,QAAA,KAAK,EAAzB,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EADK,KACL,CADK,GAAP,KAAA;AASF;;AAAA,WAAA,KAAA;AAXF,GAAA;;AAiBA,MAAMC,eAAe,GAAfA,SAAAA,eAAAA,GAAwB;AAC5B,WACElD,kBAAkB,IAChB,KAAA,CAAA,aAAA,CAAC,IAAA,CAAD,GAAA,EAAA;AACE,MAAA,CAAC,EADH,CAAA;AAEE,MAAA,OAAO,EAFT,IAAA;AAGE,MAAA,CAAC,EAHH,EAAA;AAIE,MAAA,EAAE,EAJJ,SAAA;AAKE,MAAA,KAAK,EAAE4C,aAAa,CALtB,SAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAFJ;AAEI;AAAA,KAAA,CAFJ;AADF,GAAA;;AAcA,SACE,KAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,SAAS,EADX,OAAA;AAEE,IAAA,eAAe,EAAE,SAAA,eAAA,CAAA,MAAA,EAAY;AAC3BE,MAAAA,UAAU,CAAVA,KAAU,CAAVA;AACAN,MAAAA,gBAAe,IAAIA,gBAAe,CAAlCA,MAAkC,CAAlCA;AAJJ,KAAA;AAME,IAAA,aAAa,EAAE,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBE,KAAK,CAAtB,MAAA,EANjB,aAMiB,CANjB;AAOE,IAAA,eAAe,EACb,qBAAA,KAAA,GAAA,eAAA,GAA+C,YAAA;AAAA,aAAMI,UAAU,CAAhB,KAAgB,CAAhB;AARnD,KAAA;AAUE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EADD,CAAA;AAELC,MAAAA,cAAc,EAAEnD,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,QAAAA,GAZpB;AAUS,KAVT;AAcE,IAAA,cAAc,EAdhB;AAAA,GAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAiBE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE2C,aAAa,CAA1B,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACGM,eADH,EAAA,EAEE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,YAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEN,aAAa,CAA1B,SAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACGK,WADH,EAAA,EAEE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEL,aAAa,CAA1B,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACGhD,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAA+B;AAC3D,WAAOA,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EAA0B;AAC/ByD,MAAAA,QAAQ,EAAE,SAAA,QAAA,GAAM;AACdP,QAAAA,UAAU,CAAVA,KAAU,CAAVA;AAFJ;AAAiC,KAA1BlD,CAAP;AAzBd,GAwBaA,CADH,CAFF,CADF,CAFF,CAjBF,CADF;AA/GJ,CAAiBA,CAAjB;;AAuJAD,QAAQ,CAARA,MAAAA,GAAkB2D,eAAAA,CAAlB3D,cAAAA","sourcesContent":["import * as React from 'react';\nimport Modal from 'react-native-modal';\nimport { SafeAreaView, Platform, View } from 'react-native';\nimport { useContext, useState, useImperativeHandle, useEffect } from 'react';\n\nimport { Div } from '../div/div.component';\nimport { getStyle } from './dropdown.style';\nimport { Text } from '../text/text.component';\nimport { DropdownOption } from './dropdown.option.component';\nimport { ThemeContext, getThemeProperty } from '../../theme';\nimport {\n  DropdownProps,\n  DropdownRef,\n  CompoundedDropdown,\n} from './dropdown.type';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Dropdown = React.forwardRef<DropdownRef, DropdownProps>(\n  (incomingProps, ref) => {\n    const props = useDefaultProps('Dropdown', incomingProps, {\n      bg: 'white',\n      rounded: 'none',\n      showSwipeIndicator: Platform.OS === 'web' ? false : true,\n      backdropColor: 'gray900',\n      backdropOpacity: 0.5,\n      flexWrap: 'nowrap',\n      backdropTransitionOutTiming: 0,\n      overflow: 'hidden',\n      py: 'xl',\n    });\n\n    const {\n      bg,\n      m,\n      mt,\n      mr,\n      mb,\n      ml,\n      ms,\n      p,\n      pr,\n      pt,\n      pb,\n      pl,\n      rounded,\n      roundedTop,\n      roundedRight,\n      roundedBottom,\n      roundedLeft,\n      borderColor,\n      borderBottomColor,\n      borderLeftColor,\n      borderTopColor,\n      borderRightColor,\n      borderWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderTopWidth,\n      borderEndWidth,\n      title,\n      showSwipeIndicator,\n      children,\n      backdropColor,\n      flexDir,\n      flexWrap,\n      isVisible,\n      onBackdropPress,\n      swipeDirection,\n      onSwipeComplete,\n      ...rest\n    } = props;\n    const { theme } = useContext(ThemeContext);\n    const computedStyle = getStyle(theme, props as DropdownProps);\n    const [visible, setVisible] = useState(props.isVisible ?? false);\n\n    useEffect(() => {\n      if ('isVisible' in props) {\n        setVisible(props.isVisible ?? false);\n      }\n    }, [props, visible]);\n\n    /**\n     * exposing functions through ref\n     */\n    useImperativeHandle(ref, () => ({\n      open() {\n        setVisible(true);\n      },\n      close() {\n        setVisible(false);\n      },\n    }));\n\n    /**\n     * render title\n     */\n    const renderTitle = () => {\n      if (title) {\n        return typeof title === 'string' ? (\n          <Text fontSize=\"md\" color=\"gray700\">\n            {title}\n          </Text>\n        ) : (\n          title\n        );\n      }\n\n      return false;\n    };\n\n    /**\n     * render scroll indicator\n     */\n    const renderIndicator = () => {\n      return (\n        showSwipeIndicator && (\n          <Div\n            h={7}\n            rounded=\"xl\"\n            w={40}\n            bg=\"gray200\"\n            style={computedStyle.indicator}\n          />\n        )\n      );\n    };\n\n    return (\n      <Modal\n        isVisible={visible}\n        onSwipeComplete={(params) => {\n          setVisible(false);\n          onSwipeComplete && onSwipeComplete(params);\n        }}\n        backdropColor={getThemeProperty(theme.colors, backdropColor)}\n        onBackdropPress={\n          'onBackdropPress' in props ? onBackdropPress : () => setVisible(false)\n        }\n        style={{\n          margin: 0,\n          justifyContent: Platform.OS === 'web' ? 'center' : 'flex-end',\n        }}\n        swipeDirection=\"down\"\n        {...rest}\n      >\n        <View style={computedStyle.wrapper}>\n          {renderIndicator()}\n          <SafeAreaView>\n            <View style={computedStyle.container}>\n              {renderTitle()}\n              <View style={computedStyle.options}>\n                {React.Children.map(children, (child: React.ReactElement) => {\n                  return React.cloneElement(child, {\n                    onSelect: () => {\n                      setVisible(false);\n                    },\n                  });\n                })}\n              </View>\n            </View>\n          </SafeAreaView>\n        </View>\n      </Modal>\n    );\n  }\n) as CompoundedDropdown;\n\nDropdown.Option = DropdownOption;\n\n// Dropdown.defaultProps = {\n//   bg: 'white',\n//   rounded: 'none',\n//   showSwipeIndicator: Platform.OS === 'web' ? false : true,\n//   backdropColor: 'gray900',\n//   backdropOpacity: 0.5,\n//   flexWrap: 'nowrap',\n//   backdropTransitionOutTiming: 0,\n//   overflow: 'hidden',\n// };\n\nexport { Dropdown };\n"]},"metadata":{},"sourceType":"script"}