{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelectOption = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _div = require(\"../div/div.component\");\n\nvar _icon = require(\"../icon/icon.component\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _button = require(\"../button/button.component\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/select/select.option.component.tsx\";\n\nvar SelectOption = function SelectOption(incomingProps) {\n  var props = (0, _useDefaultProps.useDefaultProps)('SelectOption', incomingProps, {\n    onSelect: function onSelect() {},\n    rounded: 0,\n    bg: 'white',\n    px: 'xl',\n    py: 'lg',\n    color: 'black',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    center: false,\n    prefix: React.createElement(_icon.Icon, {\n      name: \"ios-checkmark-circle\",\n      fontFamily: \"Ionicons\",\n      fontSize: \"2xl\",\n      color: \"green600\",\n      mr: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    })\n  });\n  var children = props.children,\n      value = props.value,\n      prefix = props.prefix,\n      onPressProp = props.onPress,\n      onSelect = props.onSelect,\n      selectedValue = props.selectedValue,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"children\", \"value\", \"prefix\", \"onPress\", \"onSelect\", \"selectedValue\"]);\n  var isSelected = Array.isArray(selectedValue) ? selectedValue.includes(value) : selectedValue === value;\n\n  var onPress = function onPress(event) {\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onPressProp) {\n      onPressProp(event);\n    }\n  };\n\n  var renderPrefix = function renderPrefix() {\n    if (isSelected) {\n      return prefix;\n    }\n\n    return null;\n  };\n\n  var renderChildren = function renderChildren() {\n    if (typeof children === 'string') {\n      return React.createElement(_text.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }\n      }, children);\n    }\n\n    return children;\n  };\n\n  return React.createElement(_button.Button, (0, _extends2.default)({}, rest, {\n    onPress: onPress,\n    block: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), prefix && React.createElement(_div.Div, {\n    minW: \"8%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }\n  }, renderPrefix()), React.createElement(_div.Div, {\n    flex: 1,\n    bg: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, renderChildren()));\n};\n\nexports.SelectOption = SelectOption;","map":{"version":3,"sources":["select.option.component.tsx"],"names":["SelectOption","props","onSelect","rounded","bg","px","py","color","alignItems","justifyContent","center","prefix","children","value","onPressProp","selectedValue","rest","isSelected","Array","onPress","renderPrefix","renderChildren"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent as RNGestureResponderEvent } from 'react-native';\n\nimport { Div } from '../div/div.component';\nimport { Icon } from '../icon/icon.component';\nimport { Text } from '../text/text.component';\nimport { SelectOptionProps } from './select.option.type';\nimport { Button } from '../button/button.component';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst SelectOption: React.FunctionComponent<SelectOptionProps> = (\n  incomingProps\n) => {\n  const props = useDefaultProps('SelectOption', incomingProps, {\n    onSelect: () => {},\n    rounded: 0,\n    bg: 'white',\n    px: 'xl',\n    py: 'lg',\n    color: 'black',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    center: false,\n    prefix: (\n      <Icon\n        name=\"ios-checkmark-circle\"\n        fontFamily=\"Ionicons\"\n        fontSize=\"2xl\"\n        color=\"green600\"\n        mr=\"md\"\n      />\n    ),\n  });\n\n  const {\n    children,\n    value,\n    prefix,\n    onPress: onPressProp,\n    onSelect,\n    selectedValue,\n    ...rest\n  } = props;\n  const isSelected = Array.isArray(selectedValue)\n    ? selectedValue.includes(value)\n    : selectedValue === value;\n\n  /**\n   * on press select option\n   *\n   * @param e\n   */\n  const onPress = (event: RNGestureResponderEvent) => {\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onPressProp) {\n      onPressProp(event);\n    }\n  };\n\n  /**\n   * render suffix\n   */\n  const renderPrefix = () => {\n    if (isSelected) {\n      return prefix;\n    }\n\n    return null;\n  };\n\n  const renderChildren = () => {\n    if (typeof children === 'string') {\n      return <Text>{children}</Text>;\n    }\n\n    return children;\n  };\n\n  return (\n    <Button {...rest} onPress={onPress} block alignItems=\"center\">\n      {prefix && <Div minW=\"8%\">{renderPrefix()}</Div>}\n      <Div flex={1} bg=\"transparent\">\n        {renderChildren()}\n      </Div>\n    </Button>\n  );\n};\n\n// Option.defaultProps = {\n//   onSelect: () => {},\n//   rounded: 0,\n//   bg: 'white',\n//   p: 0,\n//   color: 'black',\n//   alignItems: 'flex-start',\n//   justifyContent: 'flex-start',\n//   center: false,\n// };\n\nexport { SelectOption };\n"]},"metadata":{},"sourceType":"script"}