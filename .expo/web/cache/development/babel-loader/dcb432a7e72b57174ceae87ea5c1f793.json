{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props) {\n  var computedStyle = {};\n  computedStyle.modal = {\n    margin: 0,\n    justifyContent: props.justifyContent\n  };\n  computedStyle.container = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createSpacingStyles)(props, theme.spacing)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n  computedStyle.safeView = {\n    flex: 1\n  };\n\n  if (props.style) {\n    computedStyle.modal = _objectSpread(_objectSpread({}, computedStyle.modal), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["modal.style.tsx"],"names":["getStyle","computedStyle","margin","justifyContent","props","theme","flex","StyleSheet"],"mappings":";;;;;;;sDAAA,uC;;;;AAEA,IAAA,MAAA,GAAA,OAAA,6BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcO;;AAAA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,KAAXA,EAAW,KAAXA,EAAoD;AAC/D,MAAMC,aAAkB,GAAxB,EAAA;AAEAA,EAAAA,aAAa,CAAbA,KAAAA,GAAsB;AACpBC,IAAAA,MAAM,EADc,CAAA;AAEpBC,IAAAA,cAAc,EAAEC,KAAK,CAFvBH;AAAsB,GAAtBA;AAKAA,EAAAA,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACK,CAAA,GAAA,MAAA,CAAA,uBAAA,EADLA,KACK,CADLA,CAAAA,EAEK,CAAA,GAAA,MAAA,CAAA,mBAAA,EAAA,KAAA,EAA2BI,KAAK,CAFrCJ,OAEK,CAFLA,CAAAA,EAGK,CAAA,GAAA,MAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BI,KAAK,CAHzCJ,MAGK,CAHLA,CAAAA,EAIK,CAAA,GAAA,MAAA,CAAA,wBAAA,EAAA,KAAA,EAAgCI,KAAK,CAJ1CJ,YAIK,CAJLA,CAAAA;AAOAA,EAAAA,aAAa,CAAbA,QAAAA,GAAyB;AACvBK,IAAAA,IAAI,EADNL;AAAyB,GAAzBA;;AAKA,MAAIG,KAAK,CAAT,KAAA,EAAiB;AACfH,IAAAA,aAAa,CAAbA,KAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKA,aAAa,CADlBA,KAAAA,CAAAA,EAGKG,KAAK,CAHVH,KAAAA,CAAAA;AAOF;;AAAA,SAAOM,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAP,aAAOA,CAAP;AA5BK,CAAA","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\nimport {\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n} from '../../theme/theme.service';\nimport { ModalProps } from './modal.type';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: ModalProps) => {\n  const computedStyle: any = {};\n\n  computedStyle.modal = {\n    margin: 0,\n    justifyContent: props.justifyContent,\n  };\n\n  computedStyle.container = {\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.safeView = {\n    flex: 1,\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.modal = {\n      ...computedStyle.modal,\n      // @ts-ignore\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}