{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props, state) {\n  var _props$fontFamily;\n\n  var computedStyle = {};\n  computedStyle.container = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: props.zIndex,\n    minHeight: props.minH,\n    minWidth: props.minW,\n    maxHeight: props.maxH,\n    maxWidth: props.maxW,\n    width: props.w,\n    height: props.h,\n    opacity: props.opacity,\n    backgroundColor: (0, _theme.getThemeProperty)(theme.colors, props.bg)\n  }, (0, _theme.createFlexStyles)(props)), (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createShadowStyles)(props, theme)), (0, _theme.createPositionStyle)(props)), (0, _theme.createSpacingStyles)(props, theme.spacing)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n\n  if (state.isFocussed) {\n    computedStyle.container = _objectSpread(_objectSpread({}, computedStyle.container), {}, {\n      borderColor: (0, _theme.getThemeProperty)(theme.colors, props.focusBorderColor ? props.focusBorderColor : computedStyle.container.borderColor)\n    });\n  }\n\n  computedStyle.input = {\n    flex: 1,\n    padding: 0,\n    textDecorationLine: props.textDecorLine,\n    textDecorationStyle: props.textDecorStyle,\n    letterSpacing: props.letterSpacing,\n    fontStyle: props.fontStyle,\n    textAlignVertical: props.textAlignVertical,\n    lineHeight: props.lineHeight,\n    color: (0, _theme.getThemeProperty)(theme.colors, props.color),\n    fontSize: (0, _theme.getThemeProperty)(theme.fontSize, props.fontSize),\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    textDecorationColor: (0, _theme.getThemeProperty)(theme.colors, props.textDecorColor),\n    textShadowColor: (0, _theme.getThemeProperty)(theme.colors, props.textShadowColor),\n    textShadowOffset: {\n      width: (0, _theme.getThemeProperty)(theme.shadow, props.textShadowOffset),\n      height: (0, _theme.getThemeProperty)(theme.shadow, props.textShadowOffset)\n    },\n    textShadowRadius: (0, _theme.getThemeProperty)(theme.borderRadius, props.textShadowRadius),\n    fontWeight: (0, _theme.getFontWeight)(theme.fontFamily, props.fontFamily, props.fontWeight),\n    fontFamily: (_props$fontFamily = props.fontFamily) !== null && _props$fontFamily !== void 0 ? _props$fontFamily : (0, _theme.getThemeFontFamily)(theme.fontFamily, props.fontWeight)\n  };\n  computedStyle.suffix = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignSelf: props.suffix && (0, _react.isValidElement)(props.suffix) && props.suffix.props.alignSelf,\n    marginLeft: 5\n  };\n  computedStyle.prefix = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginRight: 5,\n    alignSelf: props.prefix && (0, _react.isValidElement)(props.prefix) && props.prefix.props.alignSelf\n  };\n\n  if (props.style) {\n    computedStyle.container = _objectSpread(_objectSpread({}, computedStyle.container), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["input.style.tsx"],"names":["getStyle","computedStyle","flexDirection","alignItems","zIndex","props","minHeight","minWidth","maxHeight","maxWidth","width","height","opacity","backgroundColor","theme","state","borderColor","flex","padding","textDecorationLine","textDecorationStyle","letterSpacing","fontStyle","textAlignVertical","lineHeight","color","fontSize","textAlign","textTransform","textDecorationColor","textShadowColor","textShadowOffset","textShadowRadius","fontWeight","fontFamily","justifyContent","alignSelf","marginLeft","marginRight","StyleSheet"],"mappings":"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","sourcesContent":["import { isValidElement } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport {\n  getThemeProperty,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createSpacingStyles,\n  createFlexStyles,\n  createBorderRadiusStyles,\n  createPositionStyle,\n  createShadowStyles,\n  getThemeFontFamily,\n  getFontWeight,\n} from '../../theme/theme.service';\nimport { InputProps } from './input.type';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: InputProps, state: any) => {\n  const computedStyle: any = {};\n\n  computedStyle.container = {\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: props.zIndex,\n    minHeight: props.minH,\n    minWidth: props.minW,\n    maxHeight: props.maxH,\n    maxWidth: props.maxW,\n    width: props.w,\n    height: props.h,\n    opacity: props.opacity,\n    backgroundColor: getThemeProperty(theme.colors, props.bg),\n    ...createFlexStyles(props),\n    ...createBorderWidthStyles(props),\n    ...createShadowStyles(props, theme),\n    ...createPositionStyle(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  if (state.isFocussed) {\n    computedStyle.container = {\n      ...computedStyle.container,\n      borderColor: getThemeProperty(\n        theme.colors,\n        props.focusBorderColor\n          ? props.focusBorderColor\n          : computedStyle.container.borderColor\n      ),\n    };\n  }\n\n  computedStyle.input = {\n    flex: 1,\n    padding: 0,\n\n    textDecorationLine: props.textDecorLine,\n    textDecorationStyle: props.textDecorStyle,\n    letterSpacing: props.letterSpacing,\n    fontStyle: props.fontStyle,\n    textAlignVertical: props.textAlignVertical,\n    lineHeight: props.lineHeight,\n    color: getThemeProperty(theme.colors, props.color),\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    textDecorationColor: getThemeProperty(theme.colors, props.textDecorColor),\n    textShadowColor: getThemeProperty(theme.colors, props.textShadowColor),\n    textShadowOffset: {\n      width: getThemeProperty(theme.shadow, props.textShadowOffset),\n      height: getThemeProperty(theme.shadow, props.textShadowOffset),\n    },\n    textShadowRadius: getThemeProperty(\n      theme.borderRadius,\n      props.textShadowRadius\n    ),\n\n    fontWeight: getFontWeight(\n      theme.fontFamily,\n      props.fontFamily,\n      props.fontWeight\n    ),\n\n    fontFamily:\n      props.fontFamily ??\n      getThemeFontFamily(theme.fontFamily, props.fontWeight),\n  };\n\n  computedStyle.suffix = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignSelf:\n      props.suffix &&\n      isValidElement(props.suffix) &&\n      props.suffix.props.alignSelf,\n    marginLeft: 5,\n  };\n\n  computedStyle.prefix = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginRight: 5,\n    alignSelf:\n      props.prefix &&\n      isValidElement(props.prefix) &&\n      props.prefix.props.alignSelf,\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.container = {\n      ...computedStyle.container,\n      // @ts-ignore\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}