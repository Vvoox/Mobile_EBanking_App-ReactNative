{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DropdownOption = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _button = require(\"../button/button.component\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/dropdown/dropdown.option.component.tsx\";\n\nvar DropdownOption = function DropdownOption(incomingProps) {\n  var props = (0, _useDefaultProps.useDefaultProps)('DropdownOption', incomingProps, {\n    onSelect: function onSelect() {},\n    rounded: 0,\n    bg: 'white',\n    py: 'lg',\n    px: '2xl',\n    block: true,\n    color: 'black',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  });\n  var children = props.children,\n      value = props.value,\n      onPressProp = props.onPress,\n      onSelect = props.onSelect,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"children\", \"value\", \"onPress\", \"onSelect\"]);\n\n  var onPress = function onPress(event) {\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onPressProp) {\n      onPressProp(event);\n    }\n  };\n\n  return React.createElement(_button.Button, (0, _extends2.default)({}, rest, {\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexports.DropdownOption = DropdownOption;","map":{"version":3,"sources":["dropdown.option.component.tsx"],"names":["DropdownOption","props","onSelect","rounded","bg","py","px","block","color","alignItems","justifyContent","children","value","onPressProp","rest","onPress"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAIA,IAAA,OAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,mCAAA;;;;AAEA,IAAMA,cAA4D,GAA5DA,SAAAA,cAAAA,CAA+D,aAA/DA,EAED;AACH,MAAMC,KAAK,GAAG,CAAA,GAAA,gBAAA,CAAA,eAAA,EAAA,gBAAA,EAAA,aAAA,EAAiD;AAC7DC,IAAAA,QAAQ,EAAE,SAAA,QAAA,GAAM,CAD6C,CAAA;AAE7DC,IAAAA,OAAO,EAFsD,CAAA;AAG7DC,IAAAA,EAAE,EAH2D,OAAA;AAI7DC,IAAAA,EAAE,EAJ2D,IAAA;AAK7DC,IAAAA,EAAE,EAL2D,KAAA;AAM7DC,IAAAA,KAAK,EANwD,IAAA;AAO7DC,IAAAA,KAAK,EAPwD,OAAA;AAQ7DC,IAAAA,UAAU,EARmD,QAAA;AAS7DC,IAAAA,cAAc,EAThB;AAA+D,GAAjD,CAAd;AADG,MAaKC,QAbL,GAakEV,KAblE,CAAA,QAAA;AAAA,MAaeW,KAbf,GAakEX,KAblE,CAAA,KAAA;AAAA,MAa+BY,WAb/B,GAakEZ,KAblE,CAAA,OAAA;AAAA,MAa4CC,QAb5C,GAakED,KAblE,CAAA,QAAA;AAAA,MAayDa,IAbzD,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,CAAA,CAAA;;AAoBH,MAAMC,OAAO,GAAPA,SAAAA,OAAAA,CAAU,KAAVA,EAA8C;AAClD,QAAA,QAAA,EAAc;AACZb,MAAAA,QAAQ,CAARA,KAAQ,CAARA;AAGF;;AAAA,QAAA,WAAA,EAAiB;AACfW,MAAAA,WAAW,CAAXA,KAAW,CAAXA;AAEH;AARD,GAAA;;AAUA,SACE,KAAA,CAAA,aAAA,CAAC,OAAA,CAAD,MAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAAkB,IAAA,OAAO,EAAzB,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADF,QACE,CADF;AAhCF,CAAA","sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent as RNGestureResponderEvent } from 'react-native';\n\nimport { DropdownOptionProps } from './dropdown.option.type';\nimport { Button } from '../button/button.component';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst DropdownOption: React.FunctionComponent<DropdownOptionProps> = (\n  incomingProps\n) => {\n  const props = useDefaultProps('DropdownOption', incomingProps, {\n    onSelect: () => {},\n    rounded: 0,\n    bg: 'white',\n    py: 'lg',\n    px: '2xl',\n    block: true,\n    color: 'black',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  });\n\n  const { children, value, onPress: onPressProp, onSelect, ...rest } = props;\n\n  /**\n   * on press select option\n   *\n   * @param e\n   */\n  const onPress = (event: RNGestureResponderEvent) => {\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onPressProp) {\n      onPressProp(event);\n    }\n  };\n\n  return (\n    <Button {...rest} onPress={onPress}>\n      {children}\n    </Button>\n  );\n};\n\n// DropdownOption.defaultProps = {\n//   onSelect: () => {},\n//   rounded: 0,\n//   bg: 'white',\n//   p: 0,\n//   color: 'black',\n//   alignItems: 'flex-start',\n//   justifyContent: 'flex-start',\n// };\n\nexport { DropdownOption };\n"]},"metadata":{},"sourceType":"script"}