{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props, state) {\n  var computedStyle = {};\n  computedStyle.container = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    alignSelf: 'center',\n    height: props.h,\n    width: props.w,\n    minWidth: props.minW,\n    minHeight: props.minH,\n    maxWidth: props.maxW,\n    maxHeight: props.maxH,\n    opacity: props.opacity,\n    zIndex: props.zIndex\n  }, (0, _theme.createFlexStyles)(props)), (0, _theme.createShadowStyles)(props, theme)), (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createSpacingStyles)(props, theme.spacing)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius)), {}, {\n    backgroundColor: (0, _theme.getThemeProperty)(theme.colors, props.bg)\n  });\n  computedStyle.image = _objectSpread({}, (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n  computedStyle.triangle = {\n    width: 0,\n    height: 0,\n    left: state.left + state.buttonWidth / 2 - 8,\n    top: state.invert ? state.menuHeight - 1 : 1,\n    borderStyle: 'solid',\n    borderLeftWidth: 8,\n    borderRightWidth: 8,\n    borderBottomWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    opacity: props.opacity,\n    zIndex: props.zIndex,\n    borderBottomColor: (0, _theme.getThemeProperty)(theme.colors, props.bg)\n  };\n  computedStyle.text = {\n    fontWeight: props.fontWeight,\n    textDecorationLine: props.textDecorLine,\n    textDecorationStyle: props.textDecorStyle,\n    letterSpacing: props.letterSpacing,\n    fontStyle: props.fontStyle,\n    textAlignVertical: props.textAlignVertical,\n    lineHeight: props.lineHeight,\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    fontSize: (0, _theme.getThemeProperty)(theme.fontSize, props.fontSize),\n    color: (0, _theme.getThemeProperty)(theme.colors, props.color)\n  };\n\n  if (props.style) {\n    computedStyle.container = _objectSpread(_objectSpread({}, computedStyle.container), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["tooltip.style.tsx"],"names":["getStyle","computedStyle","alignSelf","height","props","width","minWidth","minHeight","maxWidth","maxHeight","opacity","zIndex","theme","backgroundColor","left","state","top","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","borderBottomColor","fontWeight","textDecorationLine","textDecorationStyle","letterSpacing","fontStyle","textAlignVertical","lineHeight","textAlign","textTransform","fontSize","color","StyleSheet"],"mappings":"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","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport {\n  getThemeProperty,\n  createFlexStyles,\n  createShadowStyles,\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n} from '../../theme/theme.service';\nimport { TooltipProps } from './tooltip.type';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: TooltipProps, state: any) => {\n  const computedStyle: any = {};\n\n  computedStyle.container = {\n    alignSelf: 'center',\n    height: props.h,\n    width: props.w,\n    minWidth: props.minW,\n    minHeight: props.minH,\n    maxWidth: props.maxW,\n    maxHeight: props.maxH,\n    opacity: props.opacity,\n    zIndex: props.zIndex,\n    ...createFlexStyles(props),\n    ...createShadowStyles(props, theme),\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n    backgroundColor: getThemeProperty(theme.colors, props.bg),\n  };\n\n  computedStyle.image = {\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.triangle = {\n    width: 0,\n    height: 0,\n    left: state.left + state.buttonWidth / 2 - 8,\n    top: state.invert ? state.menuHeight - 1 : 1,\n    borderStyle: 'solid',\n    borderLeftWidth: 8,\n    borderRightWidth: 8,\n    borderBottomWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    opacity: props.opacity,\n    zIndex: props.zIndex,\n    borderBottomColor: getThemeProperty(theme.colors, props.bg),\n  };\n\n  computedStyle.text = {\n    fontWeight: props.fontWeight,\n    textDecorationLine: props.textDecorLine,\n    textDecorationStyle: props.textDecorStyle,\n    letterSpacing: props.letterSpacing,\n    fontStyle: props.fontStyle,\n    textAlignVertical: props.textAlignVertical,\n    lineHeight: props.lineHeight,\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\n    color: getThemeProperty(theme.colors, props.color),\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.container = {\n      ...computedStyle.container,\n      // @ts-ignore\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}