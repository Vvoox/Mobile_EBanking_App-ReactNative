{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/home/vvoox/REACT_NATIVE/ensapay-client-mobile/views/ComptesScreen.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"../components/Themed\";\nimport { useState } from \"react\";\nimport { Container, Content, List, ListItem } from \"native-base\";\nimport { Div } from \"react-native-magnus\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { getComptes } from \"../redux/actions/compte-actions\";\nimport { fetchComptes } from \"../services/comptes-service\";\nexport default function ComptesScreen() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Comptes view\"));\n}\n\nvar ComptesList = function ComptesList(_ref) {\n  var navigation = _ref.navigation,\n      compte = _ref.compte,\n      fetchComptes = _ref.fetchComptes;\n\n  var _useState = useState([{\n    numeroCompte: '859-518461316-89',\n    intitule: \"Oussama Lahmidi\",\n    solde: 700\n  }, {\n    numeroCompte: '223-54946144969-52',\n    intitule: \"Oussama Lahmidi\",\n    solde: 1000\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comptes = _useState2[0],\n      setComptes = _useState2[1];\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, React.createElement(Content, {\n    padder: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Div, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), comptes && comptes.length === 0 && React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 43\n    }\n  }, \"Aucun creanciers ajout\\xE9.\"), React.createElement(List, {\n    style: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, comptes && comptes.map(function (compte, key) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: key,\n      onPress: function onPress() {\n        return navigation.navigate('CreancierDetails', {\n          compte: compte,\n          navigate: navigation.navigate\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 66\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, compte.intitule, \" \", compte.numeroCompte));\n  }))));\n};\n\nvar mapStateToComptesListProps = function mapStateToComptesListProps(state) {\n  return {\n    creanciers: state.client.creanciers\n  };\n};\n\nvar mapDispatchToComptesProps = function mapDispatchToComptesProps(dispatch) {\n  return bindActionCreators({\n    getComptes: getComptes\n  }, dispatch);\n};\n\nexport var CreancierListState = connect(mapStateToComptesListProps, {\n  fetchComptes: fetchComptes\n})(ComptesList);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  logo: {\n    width: 120,\n    height: 100,\n    marginRight: 20,\n    resizeMode: \"contain\"\n  },\n  list: {\n    marginTop: 70\n  }\n});","map":{"version":3,"sources":["/home/vvoox/REACT_NATIVE/ensapay-client-mobile/views/ComptesScreen.tsx"],"names":["React","Text","View","useState","Container","Content","List","ListItem","Div","bindActionCreators","connect","getComptes","fetchComptes","ComptesScreen","styles","container","title","ComptesList","navigation","compte","numeroCompte","intitule","solde","comptes","setComptes","height","length","textAlign","list","map","key","navigate","mapStateToComptesListProps","state","creanciers","client","mapDispatchToComptesProps","dispatch","CreancierListState","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight","separator","marginVertical","width","logo","marginRight","resizeMode","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Image, StyleSheet} from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport {useEffect, useState} from \"react\";\nimport {Container, Content, List, ListItem} from \"native-base\";\nimport {Div} from \"react-native-magnus\";\nimport {Creancier} from \"../entities/creancier\";\nimport {bindActionCreators} from \"redux\";\nimport {getCreanciers} from \"../redux/actions/creanciers-actions\";\nimport {connect} from \"react-redux\";\nimport {fetchCreanciers} from \"../services/creanciers-service\";\nimport {getComptes} from \"../redux/actions/compte-actions\";\nimport {fetchComptes} from \"../services/comptes-service\";\nimport {Compte} from \"../entities/compte\";\n\nexport default function ComptesScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Comptes view</Text>\n    </View>\n  );\n}\n\nconst ComptesList = ({navigation, compte , fetchComptes }: any) => {\n\n\n  // useEffect(\n  //     () => {\n  //       fetchComptes().then(()=> console.log(\"Fetched Creanciers 1\", comptes))\n  //           .catch((e:any)=> console.log(\"Error\", e));\n  //     }, []);\n\n  const [comptes, setComptes] = useState([\n      {\n          numeroCompte: '859-518461316-89',\n          intitule: \"Oussama Lahmidi\",\n          solde: 700\n      },\n      {\n          numeroCompte: '223-54946144969-52',\n          intitule: \"Oussama Lahmidi\",\n          solde: 1000\n      },\n  ] as Compte[]);\n\n\n  return <Container>\n    <Content padder>\n      <Div style={{height: 20}}/>\n      {comptes && comptes.length === 0 && <Text style={{textAlign: 'center'}}>\n        Aucun creanciers ajout√©.\n      </Text>}\n      <List style={styles.list}>\n        {comptes && comptes.map((compte: Compte, key: number) => <ListItem button key={key}\n                                                                                       onPress={() => navigation.navigate('CreancierDetails', {\n                                                                                         compte,\n                                                                                         navigate: navigation.navigate\n                                                                                       })}>\n              {/*<Image style={styles.logo} source={require('../assets/icons/iam.png')}/>*/}\n              <Text>{compte.intitule} {compte.numeroCompte}</Text>\n            </ListItem>\n        )}\n      </List>\n    </Content>\n  </Container>\n}\n\nconst mapStateToComptesListProps = (state: any) => ({\n  creanciers: state.client.creanciers\n});\n\nconst mapDispatchToComptesProps = (dispatch: any) => (\n    bindActionCreators({\n      getComptes,\n    }, dispatch)\n);\n\nexport const CreancierListState = connect(mapStateToComptesListProps, {fetchComptes})(ComptesList);\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },logo: {\n    width: 120,\n    height: 100,\n    marginRight : 20,\n    resizeMode : \"contain\"\n    // objectFit : \"cover\"\n  }, list: {\n    marginTop:70\n  }\n});\n"]},"metadata":{},"sourceType":"module"}