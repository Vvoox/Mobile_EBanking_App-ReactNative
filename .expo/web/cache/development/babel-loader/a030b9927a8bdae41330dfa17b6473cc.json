{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Badge = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _badge = require(\"./badge.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _utilities = require(\"../../utilities\");\n\nvar _types = require(\"../../types\");\n\nvar _useDefaultProps = require(\"../../utilities/useDefaultProps\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/badge/badge.component.tsx\";\n\nvar Badge = function Badge(incomingProps) {\n  var props = (0, _useDefaultProps.useDefaultProps)('Badge', incomingProps, {\n    bg: 'green700',\n    rounded: 'circle',\n    shadow: 0,\n    color: 'white',\n    top: 0,\n    right: 0,\n    shadowColor: 'gray900',\n    position: 'relative',\n    fontSize: 'sm',\n    fontWeight: 'bold'\n  });\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      bg = props.bg,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      minH = props.minH,\n      minW = props.minW,\n      style = props.style,\n      shadow = props.shadow,\n      rounded = props.rounded,\n      position = props.position,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      alignItems = props.alignItems,\n      fontSize = props.fontSize,\n      justifyContent = props.justifyContent,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderEndWidth = props.borderEndWidth,\n      shadowColor = props.shadowColor,\n      children = props.children,\n      right = props.right,\n      top = props.top,\n      left = props.left,\n      bottom = props.bottom,\n      color = props.color,\n      count = props.count,\n      opacity = props.opacity,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"bg\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"minH\", \"minW\", \"style\", \"shadow\", \"rounded\", \"position\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"alignItems\", \"fontSize\", \"justifyContent\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderEndWidth\", \"shadowColor\", \"children\", \"right\", \"top\", \"left\", \"bottom\", \"color\", \"count\", \"opacity\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _badge.getStyle)(theme, props);\n  return React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: {\n      alignSelf: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, typeof children !== 'string' && children, React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: computedStyle.div\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), typeof children === 'string' && React.createElement(_text.Text, (0, _extends2.default)({}, _utilities.getSpecificProps.apply(void 0, [props].concat((0, _toConsumableArray2.default)(_types.textProps))), {\n    style: computedStyle.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), children))));\n};\n\nexports.Badge = Badge;","map":{"version":3,"sources":["badge.component.tsx"],"names":["Badge","props","bg","rounded","shadow","color","top","right","shadowColor","position","fontSize","fontWeight","h","w","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","minH","minW","style","roundedTop","roundedRight","roundedBottom","roundedLeft","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderEndWidth","children","left","bottom","count","opacity","rest","theme","ThemeContext","computedStyle","alignSelf","getSpecificProps","textProps"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAKA,IAAA,MAAA,GAAA,OAAA,iBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,eAAA;;AACA,IAAA,KAAA,GAAA,OAAA,0BAAA;;AACA,IAAA,UAAA,GAAA,OAAA,mBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,eAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,mCAAA;;;;AAEA,IAAMA,KAA0C,GAA1CA,SAAAA,KAAAA,CAA6C,aAA7CA,EAAgE;AACpE,MAAMC,KAAK,GAAG,CAAA,GAAA,gBAAA,CAAA,eAAA,EAAA,OAAA,EAAA,aAAA,EAAwC;AACpDC,IAAAA,EAAE,EADkD,UAAA;AAEpDC,IAAAA,OAAO,EAF6C,QAAA;AAGpDC,IAAAA,MAAM,EAH8C,CAAA;AAIpDC,IAAAA,KAAK,EAJ+C,OAAA;AAKpDC,IAAAA,GAAG,EALiD,CAAA;AAMpDC,IAAAA,KAAK,EAN+C,CAAA;AAOpDC,IAAAA,WAAW,EAPyC,SAAA;AAQpDC,IAAAA,QAAQ,EAR4C,UAAA;AASpDC,IAAAA,QAAQ,EAT4C,IAAA;AAUpDC,IAAAA,UAAU,EAVZ;AAAsD,GAAxC,CAAd;AADoE,MAelEC,CAfkE,GA6DhEX,KA7DgE,CAAA,CAAA;AAAA,MAgBlEY,CAhBkE,GA6DhEZ,KA7DgE,CAAA,CAAA;AAAA,MAiBlEa,CAjBkE,GA6DhEb,KA7DgE,CAAA,CAAA;AAAA,MAkBlEc,EAlBkE,GA6DhEd,KA7DgE,CAAA,EAAA;AAAA,MAmBlEe,EAnBkE,GA6DhEf,KA7DgE,CAAA,EAAA;AAAA,MAoBlEC,EApBkE,GA6DhED,KA7DgE,CAAA,EAAA;AAAA,MAqBlEgB,EArBkE,GA6DhEhB,KA7DgE,CAAA,EAAA;AAAA,MAsBlEiB,EAtBkE,GA6DhEjB,KA7DgE,CAAA,EAAA;AAAA,MAuBlEkB,EAvBkE,GA6DhElB,KA7DgE,CAAA,EAAA;AAAA,MAwBlEmB,CAxBkE,GA6DhEnB,KA7DgE,CAAA,CAAA;AAAA,MAyBlEoB,EAzBkE,GA6DhEpB,KA7DgE,CAAA,EAAA;AAAA,MA0BlEqB,EA1BkE,GA6DhErB,KA7DgE,CAAA,EAAA;AAAA,MA2BlEsB,EA3BkE,GA6DhEtB,KA7DgE,CAAA,EAAA;AAAA,MA4BlEuB,EA5BkE,GA6DhEvB,KA7DgE,CAAA,EAAA;AAAA,MA6BlEwB,IA7BkE,GA6DhExB,KA7DgE,CAAA,IAAA;AAAA,MA8BlEyB,IA9BkE,GA6DhEzB,KA7DgE,CAAA,IAAA;AAAA,MA+BlE0B,KA/BkE,GA6DhE1B,KA7DgE,CAAA,KAAA;AAAA,MAgClEG,MAhCkE,GA6DhEH,KA7DgE,CAAA,MAAA;AAAA,MAiClEE,OAjCkE,GA6DhEF,KA7DgE,CAAA,OAAA;AAAA,MAkClEQ,QAlCkE,GA6DhER,KA7DgE,CAAA,QAAA;AAAA,MAmClE2B,UAnCkE,GA6DhE3B,KA7DgE,CAAA,UAAA;AAAA,MAoClE4B,YApCkE,GA6DhE5B,KA7DgE,CAAA,YAAA;AAAA,MAqClE6B,aArCkE,GA6DhE7B,KA7DgE,CAAA,aAAA;AAAA,MAsClE8B,WAtCkE,GA6DhE9B,KA7DgE,CAAA,WAAA;AAAA,MAuClE+B,UAvCkE,GA6DhE/B,KA7DgE,CAAA,UAAA;AAAA,MAwClES,QAxCkE,GA6DhET,KA7DgE,CAAA,QAAA;AAAA,MAyClEgC,cAzCkE,GA6DhEhC,KA7DgE,CAAA,cAAA;AAAA,MA0ClEiC,WA1CkE,GA6DhEjC,KA7DgE,CAAA,WAAA;AAAA,MA2ClEkC,iBA3CkE,GA6DhElC,KA7DgE,CAAA,iBAAA;AAAA,MA4ClEmC,eA5CkE,GA6DhEnC,KA7DgE,CAAA,eAAA;AAAA,MA6ClEoC,cA7CkE,GA6DhEpC,KA7DgE,CAAA,cAAA;AAAA,MA8ClEqC,gBA9CkE,GA6DhErC,KA7DgE,CAAA,gBAAA;AAAA,MA+ClEsC,WA/CkE,GA6DhEtC,KA7DgE,CAAA,WAAA;AAAA,MAgDlEuC,eAhDkE,GA6DhEvC,KA7DgE,CAAA,eAAA;AAAA,MAiDlEwC,gBAjDkE,GA6DhExC,KA7DgE,CAAA,gBAAA;AAAA,MAkDlEyC,cAlDkE,GA6DhEzC,KA7DgE,CAAA,cAAA;AAAA,MAmDlEO,WAnDkE,GA6DhEP,KA7DgE,CAAA,WAAA;AAAA,MAoDlE0C,QApDkE,GA6DhE1C,KA7DgE,CAAA,QAAA;AAAA,MAqDlEM,KArDkE,GA6DhEN,KA7DgE,CAAA,KAAA;AAAA,MAsDlEK,GAtDkE,GA6DhEL,KA7DgE,CAAA,GAAA;AAAA,MAuDlE2C,IAvDkE,GA6DhE3C,KA7DgE,CAAA,IAAA;AAAA,MAwDlE4C,MAxDkE,GA6DhE5C,KA7DgE,CAAA,MAAA;AAAA,MAyDlEI,KAzDkE,GA6DhEJ,KA7DgE,CAAA,KAAA;AAAA,MA0DlE6C,KA1DkE,GA6DhE7C,KA7DgE,CAAA,KAAA;AAAA,MA2DlE8C,OA3DkE,GA6DhE9C,KA7DgE,CAAA,OAAA;AAAA,MA4D/D+C,IA5D+D,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,CAAA,CAAA;;AAAA,MAAA,WAAA,GA8DlD,CAAA,GAAA,KAAA,CAAA,UAAA,EAAWE,MAAAA,CA9DuC,YA8DlD,CA9DkD;AAAA,MA8D5DD,KA9D4D,GAAA,WAAA,CAAA,KAAA;;AA+DpE,MAAME,aAAa,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,KAAA,EAAtB,KAAsB,CAAtB;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAQ,IAAA,KAAK,EAAEA,aAAa,CAA5B,SAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAA1B;AAAe,KAAf;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACG,OAAA,QAAA,KAAA,QAAA,IADH,QAAA,EAGE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAQ,IAAA,KAAK,EAAED,aAAa,CAA5B;AAAA,GAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACG,OAAA,QAAA,KAAA,QAAA,IACC,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EACME,UAAAA,CAAAA,gBAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,CAAAA,GAAAA,mBAAAA,CAAAA,OAAAA,EAA2BC,MAAAA,CADjC,SACMD,CAAAA,CAAAA,CADN,EAAA;AAEE,IAAA,KAAK,EAAEF,aAAa,CAFtB,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAPV,QAOU,CAFJ,CAHF,CADF,CADF;AAjEF,CAAA","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport { View as RNView } from 'react-native';\n\nimport { BadgeProps } from './badge.type';\nimport { getStyle } from './badge.style';\nimport { ThemeContext } from '../../theme';\nimport { Text } from '../text/text.component';\nimport { getSpecificProps } from '../../utilities';\nimport { textProps } from '../../types';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Badge: React.FunctionComponent<BadgeProps> = (incomingProps) => {\n  const props = useDefaultProps('Badge', incomingProps, {\n    bg: 'green700',\n    rounded: 'circle',\n    shadow: 0,\n    color: 'white',\n    top: 0,\n    right: 0,\n    shadowColor: 'gray900',\n    position: 'relative',\n    fontSize: 'sm',\n    fontWeight: 'bold',\n  });\n\n  const {\n    h,\n    w,\n    m,\n    mt,\n    mr,\n    bg,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    minH,\n    minW,\n    style,\n    shadow,\n    rounded,\n    position,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    alignItems,\n    fontSize,\n    justifyContent,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderEndWidth,\n    shadowColor,\n    children,\n    right,\n    top,\n    left,\n    bottom,\n    color,\n    count,\n    opacity,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  return (\n    <RNView style={computedStyle.container}>\n      <RNView style={{ alignSelf: 'flex-start' }}>\n        {typeof children !== 'string' && children}\n\n        <RNView style={computedStyle.div} {...rest}>\n          {typeof children === 'string' && (\n            <Text\n              {...getSpecificProps(props, ...textProps)}\n              style={computedStyle.text}\n            >\n              {children}\n            </Text>\n          )}\n        </RNView>\n      </RNView>\n    </RNView>\n  );\n};\n\n// Badge.defaultProps = {\n//   bg: 'green700',\n//   rounded: 'circle',\n//   shadow: 0,\n//   color: 'white',\n//   top: 0,\n//   right: 0,\n//   shadowColor: 'gray900',\n//   position: 'relative',\n//   fontSize: 'sm',\n// };\n\nexport { Badge };\n"]},"metadata":{},"sourceType":"script"}